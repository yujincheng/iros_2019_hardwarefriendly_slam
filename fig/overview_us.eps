%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: overview_us.pdf
%%Creator: Adobe Acrobat 10.0.0
%%For: yujin
%%CreationDate: 2019/2/16, 17:20:26
%%BoundingBox: 0 0 659 392
%%HiResBoundingBox: 0 0 658.5646 391.0652
%%CropBox: 0 0 658.5646 391.0652
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1110 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® PowerPoint® for Office 365"
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® PowerPoint® for Office 365"
   xmp:CreateDate="2019-02-16T17:19:32+08:00"
   xmp:ModifyDate="2019-02-16T17:19:58+08:00"
   xmp:MetadataDate="2019-02-16T17:19:58+08:00"
   xmpMM:DocumentID="uuid:EA054264-00A0-4E34-A3A6-181F43DB3DFB"
   xmpMM:InstanceID="uuid:a8f26f38-05a4-4b0b-9d50-ec64b5245d27">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint 演示文稿</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>yujincheng</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -391.065 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-5 0 mo
1.52588e-5 391.065 li
658.565 391.065 li
658.565 0 li
cp
clp
gsave
-.575851 391.401 mo
659.424 391.401 li
659.424 -.598892 li
-.575851 -.598892 li
-.575851 391.401 li
clp
-142.576 488.401 mo
817.424 488.401 li
817.424 -51.599 li
-142.576 -51.599 li
-142.576 488.401 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
12.7942 27.6911 mo
12.7942 18.3811 20.3441 10.831 29.6543 10.831 cv
491.234 10.831 li
500.544 10.831 508.094 18.3811 508.094 27.6911 cv
508.094 258.331 li
508.094 267.641 500.544 275.191 491.234 275.191 cv
29.6543 275.191 li
20.3441 275.191 12.7942 267.641 12.7942 258.331 cv
12.7942 27.6911 li
/1 
[/DeviceCMYK] /CSA add_res
.376165 .0753796 0 0 cmyk
ef
1.02 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
12.7942 27.6911 mo
12.7942 18.3811 20.3442 10.8311 29.6542 10.8311 cv
491.234 10.8311 li
500.544 10.8311 508.094 18.3811 508.094 27.6911 cv
508.094 258.331 li
508.094 267.641 500.544 275.191 491.234 275.191 cv
29.6542 275.191 li
20.3442 275.191 12.7942 267.641 12.7942 258.331 cv
cp
.177676 1 1 .154665 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (AWIJOU+DengXian)
%%Title: (AWIJOU+DengXian Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /AWIJOU+DengXian def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 6 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
28628 <001C60D8A8C9B67106DCE06030CC378319F03DC2A59F29632BE590439
740FEA1C4E5B4BC8EED41D08FA67DA3FCB2D66CF5A13D3B752F6A4FC2E722E73
0214184A0DABF55E8F1F230E6A7308577D829465EDDDAFFEF> |
28666 <001C60D8A8C9B7FD849A70FBAF5CA9A13C8E26C143A1DF6AC1FE547EA
3C5232E736DB519B3D3AA4EEB5C6BE5BAE3CF35795226E06AD4DC645F74CE709
D6D91E4316CA064CD0C4D0AE7D15A7DAFFFD0C871FB60DBABB3A2AAE10728B75
305448C7B5C7B5F2A56A6D5ABB66520DBD6D65AA03F04B1782EFFFBBC14C56FE
36F36723CB545DCDED9B40F166550D83238B31668EF901F0353888C1B5A6781A
E1D7629C16539B99012D949BB473BAE8FE8799FB00BF6C746B0B7BB5491EAECF
A034F56A464F3951098755CEB00> |
28664 <001C60D8A8C9B7B9B9DE64C375A9DBACE95282B2312E3D85E750527CC
1CB7ECCD03A956DF6AAF4A7168B7148981EC76A8077847319739BD7AFC9C273C
D7ABB104CCAF232DF037808051A4E0AEF540B0A7B3AF3F3A775F4BE57DC95A2B
88BC481E3C3C5CD29A90412FD55B68E26377057408C4E5640926FF2E1A05E5CA
C44778E8205CC9A62299713EA1CA0206B13> |
28673 <001C60D8A8C9B795A0BECF06305EE87369211718D3EE2DE866B243806
8E9C56279E98DF67709852BED129643D4AB00494058DE56C3A2F59EF8337CDEA
A886E2F10A16806F6D040F0BA7348192390D4410BDA51BF850E2AE66992849BB
353A6DA88D5EB6C10AE42038B49> |
28679 <001C60D8A8C9B82C91E1D9CCF2FA7601C6026EBD33736DF344E87F732
E6204D98A966E57A2BEBF7AABB5C82E1C8966BD3BF60CBD042BFA41F5E6D694B
02FA7FC2341B98FA0788772F503A3DD89703A16E741DB3660B5C616> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /AWIJOU+DengXian-Identity-H /Identity-H 0 [/AWIJOU+DengXian] ct_ComposeFont pop end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [18 0 0 -18 0 0 ]msf
15.0042 29.7611 mo
(o\324o\372o\370p\001p\007)
[11.448 10.3321 9.25214 9.90005 0 ]xsh
37.6642 139.981 mo
39.6842 139.981 41.3142 141.571 41.3142 143.521 cv
41.3142 145.481 39.6842 147.061 37.6642 147.061 cv
35.6442 147.061 34.0042 145.481 34.0042 143.521 cv
34.0042 141.571 35.6442 139.981 37.6642 139.981 cv
cp
37.6642 137.481 mo
34.2242 137.481 31.4342 140.191 31.4342 143.521 cv
31.4342 146.851 34.2242 149.561 37.6642 149.561 cv
41.1042 149.561 43.8942 146.851 43.8942 143.521 cv
43.8942 140.191 41.1042 137.481 37.6642 137.481 cv
cp
32.4942 129.481 mo
42.8342 129.481 li
43.4442 129.481 43.9742 129.891 44.0942 130.471 cv
44.6242 132.901 li
49.8342 132.901 li
51.6642 132.901 53.0842 134.021 53.0842 135.461 cv
53.0842 151.771 li
53.0842 153.201 51.6642 154.321 49.8342 154.321 cv
25.4942 154.321 li
23.6642 154.321 22.2442 153.201 22.2442 151.771 cv
22.2442 135.461 li
22.2442 134.021 23.6642 132.901 25.4942 132.901 cv
30.7042 132.901 li
31.2342 130.471 li
31.3542 129.891 31.8842 129.481 32.4942 129.481 cv
cp
.879606 .469551 .0238041 .000396735 cmyk
ef
63.3141 155.581 mo
63.3141 150.861 67.1442 147.031 71.8642 147.031 cv
476.624 147.031 li
481.344 147.031 485.174 150.861 485.174 155.581 cv
485.174 257.821 li
485.174 262.541 481.344 266.371 476.624 266.371 cv
71.8642 266.371 li
67.1442 266.371 63.3141 262.541 63.3141 257.821 cv
63.3141 155.581 li
.0320134 .161044 .0745556 0 cmyk
ef
63.3142 155.581 mo
63.3142 150.861 67.1442 147.031 71.8642 147.031 cv
476.624 147.031 li
481.344 147.031 485.174 150.861 485.174 155.581 cv
485.174 257.821 li
485.174 262.541 481.344 266.371 476.624 266.371 cv
71.8642 266.371 li
67.1442 266.371 63.3142 262.541 63.3142 257.821 cv
cp
.177676 1 1 .154665 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 5 GetGlyphDirectory
28643 <001C60D8A8C9B7931D88C549581514B303475B68F3A5B82FC10C33046
B1178E35B340E46A0F7AFD1D8477157DB986336BDE495E836D190C26AFD0533C
6A5709B3E706B37262928FC6678F90AED700592FB6F17C4CA4353B0E987BB933
7B4E4E6727403A52D0FD507E960> |
28671 <001C60D8A8C9B88A65BA90E56DAA1E3841575CB45590D6> |
28660 <001C60D8A8C9B7A66FF208F1FFFF199CBF15DA40789B41A8940D81C59
F2725073E42964675E0DD202817D399E2FB17DEF0CEC97867EBCB7ADAAC507C9
72A055AF41A6B42F3641829E4746E9DE8C8DEC7FAD6AFE6EBAF1665BBE8EA5B5
A4B9F141EB4692A8EBE22B205223CA91FA890F02D7332206F1E0DCBF993E8459
4C8743CFA4B5ADE36A0FB102061281D6EFB1A65732FABB4B70E2A43CB34852E4
67727B0E2BBD33CA8A301D3BF82124C> |
28662 <001C60D8A8C9B776A06C6FC231F3BF82B95E430F6D347A409EECD485F
9B406FA6336964C8BF7664E2AB055B44D3A06959A7781CE4D2FEDDD996C546F2
2FC5837E64BBC80EF4699966E80B1E4ED4A9C3550A8BDD97A63B0696CF3EE432
A03807D55000A523F2214> |
28595 <001C60D8A8C9B8581AA5> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
70.5242 160.061 mo
(o\343o\377o\364o\366o\370o\263)
[8.84308 3.58846 8.02614 7.25711 8.23439 0 ]xsh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 4 GetGlyphDirectory
28645 <001C60D8A8C9B7FA1378253013ECBC2E2375A528708F98127351381D8
D6D4621D951E8F5F697D02315B161674B3B669EC72DC9FB775331F6348CFA7EA
DF53D1E65E2A1653259F1DF90BA621D0BA605DBDCF6462367C15F1F9BCD37860
53893E0E997109E5787E293F736D944B821F2A5> |
28674 <001C60D8A8C9B7FE5AD20AE56213796D50B188B2C5CBFF678B1A9D104
AF97FCBEA6169C9DF4E313B2A55EC833C42B1AB0E8A13DA65F86C2C2AEDEA104
DE02E7F576D982DF30B78FB76CCFB07A8EB8179B2F3818BC620295E8F285682C
058E01E22BECBF493516051F07EB2FFD039B1F2347AD2EEC2F8D2F7E17A3B95F
D9B5890C6237E6820> |
28668 <001C60D8A8C9B88A65BA9079859C0FCC394F785DDA5330D8BBC923C4A
04A6379E7CCB9> |
28603 <001C60D8A8C9B8469EA311E84B2F78CB83AF7D17CC7A5595C17F48675
B292551E9C492D4BE6296DDE304B008E2BEE4200570F85805CF9B118B84A76CF
88D679E2F0705B758C596D1E73E> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
110.904 160.061 mo
(o\345o\370o\366p\002o\372p\001o\374p\007o\374p\002p\001o\263o\273)
[9.24348 8.23441 7.25708 9.17944 9.19556 8.81107 3.58844 5.09427 3.58844 9.17944 8.81104 4.34149 
0 ]xsh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 4 GetGlyphDirectory
28641 <001C60D8A8C9B60C97DFC02343A3E5C1F4BFADF2D6A13CB977D71B63F
CC7869D9D2A8D6D48BA5B351B43FE416CA7C26B97CC2A1F0470F658BA> |
28649 <001C60D8A8C9B7D7E8DC0A8F59926D729E6EE4D734E5A5AF737BE16BB
0E38958D10F8202854BDCA8BA9BCF0F321C0DDD8EF7643F3C3962AF09B1> |
28639 <001C60D8A8C9B74B0CB5DF6C84CF353B772D85B4038C184407812FD2> |
28631 <001C60D8A8C9B625CE6BD2BE419D5CB815C1CA0C61BA0A2D3DFC3B96F
CF9FB6F9E0519EA65E7C8EC76A179BF9356B2C1F7F4A814471AED147404B13B0
B2776E0D6E4D16A4BBA0742D992692136F6DCF6FD8FBBC1141BFB8994DCD1331
B5CC1B493> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
202.104 160.061 mo
(o\341o\370p\007o\351o\337o\324o\327)
[11.6786 8.23441 5.09424 9.80423 7.43335 10.1407 0 ]xsh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28604 <001C60D8A8C9B8469EB7E8938ACD1505E21B42AD34FFDF41E8211D757
8D5D3F08B11A6F726875BE4D728ECA810A039EAD4A4B27F567B1311F62C4E5CF
AB28390CAF35147BE5132EBD2B120B5> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
265.464 160.061 mo
(o\274)sh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28646 <001C60D8A8C9B7B9B9DE69CBC96F0B5A3AE98D065C1FD7CFAD83FC43F
1290F4F9D34982C14CC513501F9076D4F8907F22AC9522F2896E944B1C90ABCE
1EBF569BE3E67D6DCC89DBF0C52716419D51E2AEFADD36CC19C82AD0FC3F3BA6
123D0BD3A2ABA4E110BF677253E952D076F531E23520FFA1895776A2199512FA
C9BD1336F7E1C8EDFA463D40ADCD492ED3B75F11D80658BD7ABA38DAF43CCBA2
32FE248B15967CE3B652AF643FE11F6C5568129285AEA24CD260CD6D81E569EF
64502ECAABE996CCD635CCC94E3C711D5E8195F3A715AF8260F36A77EC1CE55F
17D20D8E151C2> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
416.444 209.501 mo
(o\346o\366o\370p\001o\370)
[7.18585 6.33295 7.18585 7.68903 0 ]xsh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 3 GetGlyphDirectory
28678 <001C60D8A8C9B70582CC565B4883086947A53D700FC22CC37B8FFB6B8
A85AF70378C60D0C6B0C2EF31395945EDFB7DDDE1D0CC898F5B0E9FE9A7A1C3A
4C1BB863EE6725F120C3FDCDE3A35D1AD416BA23B64066650F85DCA6BABE2743
5AEFC317463C12AE039762DAEB1FA885BDDABB217799AFC3B5D24F6EB793F0F5
A070427208AF010078BB18257D47DFD185F390ACEF5FCC7BCA93E3E3197F813A
1D3153232223F7C7C1200BBEA57795F95EDA23BD6ECCB2B42F454E44B3FFBA32
4E2485F90A1F8549AFBDBA375D3F087391D68792DB8B3268EAA6F0D> |
28677 <001C60D8A8C9B81947031993F366B7797E01770F0CCF402A3810F4860
85B72DA10BE6CC101E91F1F1C8B8F646643C5A8F34CC08EB50A8A38B409FF70F
C08890288922D85661D7A1EFC0CE23BA363CBFF61764B> |
28675 <001C60D8A8C9B7FD84953D11880AD4F37B2510559D37A2059564A2CE2
E16A7500A94FDD66B9E5A19619AACEE642F7128DBE261B121C3C7CC16942981C
D231447F25C4534F5D376D352FCD328019825A63D60C00859FFDC4B610FDC284
CD7F0495A1DC5978D3ED40B7F14741A387BEC5E756DB50728BA11C7FAA4BE6E3
23AF5AACA5CEEA8995FF8194E08068A8A5E046955C8CD8BFE88BBA9F1EEEA2C2
A3AE2D93280F668321E4BB938F72F3C852944> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
416.444 226.301 mo
(o\327o\370p\006o\366p\005o\374p\003p\007p\002)
[9.61829 7.18585 5.67596 6.33295 4.73932 3.13147 8.0246 4.44556 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
473.624 226.301 mo
(p\005)sh
311.654 178.391 mo
311.654 170.881 317.744 164.791 325.254 164.791 cv
379.654 164.791 li
387.164 164.791 393.254 170.881 393.254 178.391 cv
393.254 248.091 li
393.254 255.601 387.164 261.691 379.654 261.691 cv
325.254 261.691 li
317.744 261.691 311.654 255.601 311.654 248.091 cv
cp
.161563 0 .0376898 0 cmyk
ef
311.654 178.391 mo
311.654 170.881 317.744 164.791 325.254 164.791 cv
379.654 164.791 li
387.164 164.791 393.254 170.881 393.254 178.391 cv
393.254 248.091 li
393.254 255.601 387.164 261.691 379.654 261.691 cv
325.254 261.691 li
317.744 261.691 311.654 255.601 311.654 248.091 cv
cp
.177676 1 1 .154665 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/AWIJOU+DengXian-Identity-H findfont [12 0 0 -12 0 0 ]msf
328.644 202.861 mo
(o\341o\370p\007o\351o\337o\324o\327)
[8.74805 6.16809 3.85193 7.34399 5.56805 7.63202 0 ]xsh
/AWIJOU+DengXian-Identity-H findfont [12 0 0 -12 0 0 ]msf
332.544 217.261 mo
(o\337)sh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 2 GetGlyphDirectory
28684 <001C60D8A8C9B747CAEFBC26A39BFF2819386B8EE1586C3CAC86C70F1
BAB44FD74F44D22A5C5DC757A66F0816E2C4932FBAD1CE3F09292C0B35BE69FC
446316A805AFF5DE4C4DCF6EE1023C859A9294B67999444465B2E58797F793D1
FFD7BE16AE4CE582B1E52CCD9D1A67897C4BBAC9E8DF1> |
28601 <001C60D8A8C9B6E081AEA70B257A56880D4CB6B2B88E86F2EDB5DABBE
5E1A237AABF6B327C395F1062E1CE909E26BF5EAD5F6CF08C398A029A21E4A77
9A82761DA93BA1430F49619BC5ABE09239967E9E914B37F1DB4D3E02A2AFCB98
B64B6269ADC2DEFACFE3E0A6598DCF64BECAD937404938B4A6CE9F99265D4291
8CED6569223174AFCCAEF9CDBA60A9C84C4504F21881CCBF0903AAB1D691EE7B
A13E0C2ACD2707E0B0CEDE08DC4DA45ABF37E2B207360DD67C3EF406A1B2F963
C5CC4D98ABB5617320C286B8499348B99679AEE66D99D7401940879CC30D94B9
48D6F559340AA89C2BA717890F8F09E194C1514BBF0504F7D20871B3111AA7E6
5A9168F4ACA8068B94B5DE07015C8AB34ACFC91F20CE844952FC7301D355A2CE
C157E85B33E7C3522A1ED3B019FBBC5EDD6E4101DE6B688D5142749B8> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [12 0 0 -12 0 0 ]msf
338.124 217.261 mo
(o\364p\014o\370p\005o\263o\271o\263)
[6.01208 5.61603 6.16809 4.09204 3.28802 8.98792 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28669 <001C60D8A8C9B88A65BA91B71C95C79E2595BFD7A517F4A71D739394A
E83436B91246280D1CD63102BE6B2C2BB92449651433DACE35707680A9E097ED
EAC4D73FFF6BEE62C81C32D63A1C504> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [12 0 0 -12 0 0 ]msf
326.484 231.661 mo
(o\343p\005p\002o\375o\370o\366p\007o\374p\002p\001)
[6.62402 4.06805 6.87598 2.68799 6.19208 5.43604 3.85193 2.68799 6.87598 0 ]xsh
71.1141 172.941 mo
71.1141 168.441 74.7642 164.791 79.2641 164.791 cv
288.084 164.791 li
292.584 164.791 296.234 168.441 296.234 172.941 cv
296.234 253.541 li
296.234 258.041 292.584 261.691 288.084 261.691 cv
79.2641 261.691 li
74.7642 261.691 71.1141 258.041 71.1141 253.541 cv
71.1141 172.941 li
.161563 0 .0376898 0 cmyk
ef
71.1142 172.941 mo
71.1142 168.441 74.7642 164.791 79.2642 164.791 cv
288.084 164.791 li
292.584 164.791 296.234 168.441 296.234 172.941 cv
296.234 253.541 li
296.234 258.041 292.584 261.691 288.084 261.691 cv
79.2642 261.691 li
74.7642 261.691 71.1142 258.041 71.1142 253.541 cv
cp
.177676 1 1 .154665 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 2 GetGlyphDirectory
28635 <001C60D8A8C9B62823789F8A7672D012CAD2DD32D012654209C5EC2F3
24F864BC7BD9473B841A0850D77AD0FBF> |
28667 <001C60D8A8C9B795A0BECF06305EE87369211718D3EE2DE866B243806
8E9C3C724D0F5C6BF169F72E1C71967F26B4562105E8A8583BC41A15D900A2B3
FFCE9F31BD4591CB25C31293EBF9381ACF282B598F9431868A2ECD743332A8F6
186BC7793F5EA54E68DE38FBB93> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
77.1842 178.341 mo
(o\333o\374o\372o\373)
[9.68805 3.1315 8.0246 0 ]xsh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28608 <001C60D8A8C9B7A73DB6A60276D55D01F153B7D96DD64C> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
105.744 178.341 mo
(o\300)sh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28681 <001C60D8A8C9B74969EE40BB25ABD91F8460DD23DB9B191A528027CD2
A43C92EB48C42770A0B496FFADA0F67DDBE4B6E31AA2489D103934A6C89> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
112.784 178.341 mo
(o\377o\370p\011o\370o\377o\263)
[3.13152 7.18582 6.51471 7.21381 3.1315 0 ]xsh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 2 GetGlyphDirectory
28633 <001C60D8A8C9B75E5E15AFD6A09866F0491F1027106958A942351926A
12C16CC8CE102375270AADD> |
28680 <001C60D8A8C9B794D31A1053B9961E70BFFA47467F8C115DB76858BE9
1B87F72C52941282A1449AD31A6C6FC3341ED63E1F429CA97F8F026C9971DD20
E5603656286CABFF4097310E86D85B7B38F800E217098445F68487CB3737B3CF
9E030780CD291611690AE824EE2> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
143.984 178.341 mo
(o\331o\370o\364p\007p\010p\005o\370o\263)
[6.66852 7.18585 7.00406 4.44556 7.70291 4.73926 7.18585 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 3 GetGlyphDirectory
28632 <001C60D8A8C9B7A4C86C58826A7CADEB7B0D78D3A58A13CDBAB0CA4F6
979882BC86A42E2AD85808956602D9668> |
28683 <001C60D8A8C9B763568A72CE33323336558FEDB35993DFA979CD86B9E
44D82CA27D61977017D8EA8E32C142B6DFCAD6275AECF8C3D9734503912A95C0
6> |
28630 <001C60D8A8C9B66129408EDE254C9C680856C5C58CDE8931886FD33C1
3032CCEAAB93F031A223E0F10B1688B890AF923FA33D50791F3585DC847E52A2
604D942BE0A76707C2DC7FFDDCEEF612E4CB75103563AA302D73FE057047D483
85B58BB1622EE008969F0F8C1E9BD68AC43409FEAD97A8A1EE29EE86CE1D9D45
843FB75131B> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
192.944 178.341 mo
(o\330p\013p\007p\005o\364o\366p\007o\374p\002p\001o\263o\273o\326o\341o\341o\274)
[7.03201 6.15125 4.44556 4.73926 7.00409 6.33298 4.44556 3.1315 8.0105 7.68906 3.99832 4.08223 
8.66754 10.1915 10.1915 0 ]xsh
128.564 258.001 mo
93.8843 258.001 li
93.8843 183.661 li
128.564 183.661 li
128.564 258.001 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 142.576 391.065 ]ct
[35.4025 0 0 75.0617 -49.0529 132.703 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 98 
/H 208 
/M[98 0 0 -208 0 208 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
XX=/u/O'&%"@b7'.OsKZaoDJL@@[4X"I-I9/1egJk6V2&A97WW"D4CG1Gc-5!W`]Jq\B;O)A`S^XX=/u
/O'&%"@b7'.Osle^An<A@@[4X"I-I9/1f3Ug^+#pA97WW"D4CG1GcE=q#CHs$l]!Y";i$n"pV7Y""5cq
D#AAZF\YRA6mjAY!4Dk0&9"R(qZ$dDVCp?u!8Rt1#m;)`E\/F4*sNl)AHJA.$,?Q1!!<<5)AN&K"[=AQ
,6._K-NbeN9R-JW"Ec"`,'F'181,di!!=!bTJ-3C#QYsC*<?/a!!)3hapA.jG\/f1*sa%kAH3nrNsQ-9
!9X=`":uaQ!!d$^AcMfS!!'>Q"=Z#cGBEe*"Ek>N6$<0K!_=[dZN((JKS:NG!!EESW?)*>!!:@E!:pN5
#m2Ju7kac^"=*tY%jCoo!fmWoec=P,!X',sq>^S9,u"7;![.OD\L7>'"">uRGPlObG7mDZqfDm1-RZ;%
""04E'`7q5#<nb5qZ$]A!!*!)\-W6iI4QlG*s<hr?7@#p*s.K0$/km7!!3<=;>L7oDClk*!!4;D!5p8W
-NbhS(O,e!"*YhIGklF_81,do!!>!G7gf.o!t/4g0E(tL!!:@E!4N7:3J%tlr#Z%i+@n=3qB#d"#moqu
bQ%\K(2!CC!FJ%c!!4;D!7*%Y-NbkX%sIkm"*Z@QGkZ:]81,dq!!>K_0*2%P"TSN=FaY;)!!:@E!4`C<
7YCmhr#Z"l2Ei_e*s.K0$24G<!!<9.)KPZS!DH&X!!4;D!88g[-Nbn^)g;.$"*Z[LGP-%Z81,du!!N?+
9rK6:qu?gILLh(j!!:@E!5&U@%T7iX,5`Mb0gd?;ocF3q#lk:D!!3KHD>F555ZmXY![.ODjX8b0"=Pff
3Hb7A"*ZsJGOonX81,e+!;?Hr#?RlG!W2p"30[/Do)Jj9!!'_>";"^]$6f?i"<]X$(FK&%p`BQu#mn<G
!s/iL<;QXs!]FT[!!4;D!:VA`-NbbK8RD:9"'.l'G4BYU81,e#!!<U@V(2?B""0Wl"n;QobQ%Y($/Gmj
'P;>.+T3Ab+<+Gb,k2rXNsQ-5!;ZZt!Y$&!qZ$[S/oU4Z![.OD_C#F6/kpWhF9H_M6m6aJFSU"[81,e%
!!<gST/?EF"!F'S!Ug!ibQ%Y3$.K7a)00@L+T3Ab+UqQS+n$KSNsQ-@!:^$j!Y6@K!!5kKBC5a$+TMM\
-NbeO6[8NN"a1qV7!3V>F94u\-c>ue(kIepqu?g"+Is\B!!:@E!;[#F#m2;s<AFCn"<mhK&0^E_!fmWo
h#QX=!X',fq>^S1/kPC0![.OD`[:p=0faK#FT-@aG7[&Rl?!(u-RZn6"!WbZ)>jI:""ffklMq"ebQ%X_
#m2W/74\9X"<mtH.Nn%!!fmWokQ'K?!X'3#q>^S:2&tl]![.ODb:!9:""?#OGPlObG8EDek]?ks-R["9
"9C$?@M&G;!t.\]0D#8;!!:@E!6GNM$8R2\./Y.h-5'$0kT9ke#mp2'ec5aT(0UJ6!GFLV!!4;D!7iOj
-NbhV&pO7q"*Z"JGij)L81,e-!!>0K57%/e!u>I"-N*r0!!:@E!6PTM4adYar#Z"j,sa6I*s.K0$2sqM
!!<9-(i9$K!EheO!!4;D!9#<l-Nbh['R0Is"*ZFFGN<iI81,e0!!EBlTI'd>!!E9GH>",U!!:@E!6kfQ
$qYaF,lA_d001R6ko]gF!fmWobQ%\L)K#<N!D6GR!!4;D!:2)n-Nbkb/9Ul4"*cU<GiEfH81,e2!!EI(
V&KI5!!=j'8Ij_[!mCWEcNs^a=*Fflr#Z"s58#F9+7UESNsQ-=!!<6/)diFA!CUV[!!4;D!;@kq-NkhK
794R/F9?MG&U3/T!_=[dg&UmJ!s`87-MmcF230HrhuEi&!!(CQ";#*f)^5/%"<]Ho"=<pejrXYc#mnuZ
!s/iM2u<RV$or4_!!+5C!!(Iq""5coD#AAXF\tLGG2@<B81,eH!:Kmi$uW4%qZ$^DQluLe!!:@E!7M5W
'l\=K+T3A_+;Y)\!$^8A!fmWodf9IO%N?,Z!!55:C$#Ej!!4;D!7`G!.5+D?r,`'b/4V76giNTg-R\B`
jo>JsGG$Pc!!<6BT,lYd!mCWEeHl<sF([B.*s<bj?3DG,*s.K0$02*W!!397+Sl'>?7fL<!!4;D!7rS#
.53i-r,`$b'gtpuFPLs>81,e:!!=6oLEcWr!s9m>,iJb!!!:@E!7qMZ-$Dm6r#Z%c!*L*\g)gBW#mp&#
kl:bg'05mh!c9VQf`2's!!(\"""H&RGQ)[fFED^<5',=t!_=[df`2+&O(T7+!!<E^OYl>'mJm=4!!([Y
"#"sO/GpRm,m@""+P7b;NsQ-h!8mhY"r1)5!!7+!$J,7Z+TMMu-NtkF.5_uer,`$b(bg3bF94u\-eeV'
1RL]Aqu?g-8U;lX!94%\bQ%Xt#m328'I`l$""4mF1tE`N+--^7g].EW"rLqJ!!-_)e,TOn!!)41p*Tql
2\:01F9?_5-[4$]!_=[dh>dZZ5GKt;qu?g8ASW:`!8%8QbQ%Y"#m:T(K`i\!*s4&E/M>p&ocF6r#moDf
!XBT_q>^Os<71aJ+TMN6-g`8`.m"Vkr,`$c2Bd:lF94u\-f=t-!Cs+6!W2p",_]P9d/X6l!!(p`":@hU
!$_=_"#*(d.-Mc<*s.K0$/Y^a#od[V!!,Aici=+j!!*!Gj<k$[5WNubF9?eP(3e)H!_=[diW&r^!`Z3B
qZ$^VO\#f(!!:@E!9+:f%Te#c+T3Ab+?*"+-Li28*s.K0$/kjc#oce=!!,&mdfB:G![.ODj<k$X/Orq@
F9H_m57r+aF94u\-gUj/!!<U=W$qNC""KNd"3gfIbQ%Y(#m1lPF<19$"<epd!@%@^e/naQ#moYm!s/oN
0`(hO.Q28$!:^$j+TMN)-NbbL9m?MW"Ed0t,'D(N!_=[dpAj[_!toRJ3;`aZ!?mRG!QtHEbQ%Y*#m2)_
CH)/5![/.O!<==e*s.K0$0D3i!tH4NqZ$[f3+h7Pjo>H+!!)41"">lgGl2XdFWrt<Fie_+81+BbkPt]'
IZ5fS!!E<CNunDE!!:@E!9a^j,'Hia1]/<t+TP.J+NY],NsQ-V!!3980_tbNAiWBL!8@JT+TMN--NbeO
3I(ID"*P8?C<q"sF94u\-gC[6+,kjnqu?g#/s.g,!!:@E!:U<l#m2Q)6neH["=!tB/0MtT!fmWol2Ukg
'0Q*k!cL%8`W-&`!!)@5"">uNGPuUdFE\NbGf4\*81,eO!!=U5A.e_>!s_D[1?eeo!!:@E!:1!o/q>8u
r#Z%g&l1G/boca'!fmWoli7(j'it/2!GFI1!!4;D!:M9<-RpqfGPlObGTo%i_K5iM-R\?_"9C?L70`Yi
!to!q,4Y`]!!:@E!:L3s$9EYG-2\he.jRJ8eK=3$!fmWomJm:n(2NaH!Eqe*!!4;D!;\);-Nbk[&9dtn
"*Z:DGJJ;%81,eT!!EBjU+-3A!!=<`CDZjJ`W-(a!!)Nq":ReK!$hC`""uG^/)DB.*s.K0$1Ior#o[dZ
!!,nq^]4H:+TMN5-Nbna-[#?/"*c@4GJ8/#81,eV!!EL%V&BC4!!"POF[ckT!!:@E!:pL"%odiW+oNJc
+>P_a.H_f**s.K0$1e-!!=BfVq>^OlBupAJ!!4;D!;.]B-nIbZFo6=`EAeDQ]Q=3G-R\Qe!=<*6V]kp;
"#GW`#J:$<bQ%Y9#m:lLFql2!*s<]A5lrD&+3bl/NsQ-c!!<61*('N&!Y.P8dK&P4![.ODpEp%k/k]dR
F9H_`5o+[UF94u\-iO,B!!<XCV(VWF"!j0Y"1eI6bQ%Y;#m:uWE$le,*s<]&;ue-<+2T*$NsQ-e!!<94
)^,"X!]r8UgAp+2![.ODq'Q7m/l$]hF9=!_06Y$Nr,`!2-R\]i!tf[J1A_%R*M=>P\,ZTS!!)g$";u8o
2'Di>"!@\N"oojW*s.K0$2FQ&!Y6:I!!6LZ>N>e6!!4;D!;e,G.53o/r,`$`'hVNGFRaGS81,e^!!=-l
M^&'!!s'aE-a`pUbQ%Y?#m2Au9J?;c"<mhR)^)R2!fmWoqZ$[#&iTRd!c9>Bm/Y6.![.ODr?h[r1+[YI
F9?[t6Zp[rk&^Yq-R\im"!s"I'`7q5"uDW*ZN($M!!!#t#m2`,1FrAF"!e"N27"A+NsQ-k!!3<=:AOql
D_VIi!58F=+TMKi-Rgc7Gl)[d'JXjaFPCmC81,bb!&L:2/Gp1a*(53+\cDL*#g<8K#miVY<&FM'""k'E
1pJ,-NsQ*n!<s8rq>^P48cA^r!!4;D!!4Su1\a-6;6P'F81,c()s6sD!KjSU!5AL;bQ%Vf,J!V:!DRL^
+5@qANsQ*q";^e5!<F:O!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW
*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+
NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr
!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9
q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%
-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L
!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV
"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG
!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi
-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao
3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL
0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90
/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ss
FP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf
"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g
!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlo
d.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK
!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;EL
nc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?
ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:Bgj
bQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH
!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3
O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la
!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b
+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW
*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I
#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m
!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),
&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+
#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BR
YQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO
!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2
!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao
3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL
0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%
9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9
gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@
81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlo
d.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA
$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-J
VQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$m
bQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH
#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsm
q#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY
$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>
Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0Z
NsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3
#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3
&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+
#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W
!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:(
"X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG
!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi
-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-R
q(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90
/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"
FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@
81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.n
q$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK
!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;EL
e,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!
d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g(
"j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH
!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3
O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY
$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB
*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/
#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr
!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m
!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9
q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*
!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BR
fDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O
!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG
!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi
-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL
0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%
9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tC
FL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQp
q/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f
"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq
-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb
!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA
$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;EL
d/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>s
e,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3E
bQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH
#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',
$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsm
q#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la
!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(
A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^j
ocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpO
NsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m
!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9
q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+
#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(
!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV
"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L
!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG
-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi
-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-R
q(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90
/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHm
r,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f
"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_
-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlo
d.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK
!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-J
VYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QN
VQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9Z,3-RSlod.n"L,c7dG
"t[Uk!!rsmq#^X(Ab@.Y*sWo5Ta;#*!"\l*!=:.+!8.>V-63'd-RUnL0``k!]6*jj"*H=b/H.!u!!(CA
$3;ELZ2b.NVGdWu!!rsmq#^[)AKS9$#pBLr<t5NC!!!Q*!!*BRirIF+!aHZPrW!!I-TLoV!A-saFRXAS
FVQtgr$MOG!7:NK!@4PM!!E<LUdY@`!!3H5O8/kY$"^Ld"<mhr8dkS(!WW32q#CF%-gguT!!7!V#lFZ(
-RUnL0``k!d<+Pn"*Y86.f(Lo!!(CA$3;EL[f?I724=M)q>^R'$'4la!=<>H*s3hnHp7B5!WW32q#CF%
-i!bV!!7*V#PnE%-RUnL0``k!giVCp"*YhC.JP7l!!(CA$3;EL^B"-2!teRo./3cD#ml[g!s&^>\K:o'
*dKF6#m(),&,H8-!!t$_!!6C?"o&'!-RUnL0``k!kB,6r"*Z^Z.J>+j!!(CA$3;ELaoLu4"!N8L+8,[9
#ml[g!s&^>],q,/7<L!P#m1J6!"\l*!=:-b!!5:s"SMfs-RUnL0``k!noW)t"*dHl..ekg!!(CA$3;EL
eH"h6""g$f(%_J-#ml[g!s&^>]cRA7?ud7ooa(["!"\l*!=:-d!!4;T"7uQp-RUnL0``k!rH,r!"*$sd
..S_e!!(CA$3;EL^An?mULt&,!!3H5O8/kY$"`WKclWB50lCV=nd,?t!"\l*!=:.'!:0[f%N,`Ync/_=
-TLoV!A-s]F9?Y\6nJ0^p*TnA!7:NK!@4PY!!=IC=U"9p!XT0oq#^X(Ac*Xj*s<]$F'K4E#m(),&,?2+
#q+U1irB-H)[l*7![f?Tq(Vn%9>koQFWLQF/+"\c!!(CA$3;EL_uKl?+Jqcu!!3H5O8T1Z!s&^>`#f(*
!.I`2#m(),&,?2+#q,!<g&M4i)@-E4!!4Mq3;G90/PF?1qK)g`&i_E--NX8Jd.n"L,c8Q]"9pNO4TY$P
r;Zm*$'4la!=<>W*s<klI7"A.#m(),&,?2+#q,BGd/X5c)$oO.![f?Tq(Vn%9A"@VF9?b+1b.`;!WW5I
q$I-JVT8`>%SMs<p]0jb!XT0oq#^X(A]Pqq.2@%bkm7Ck!"\l*!XU4Sa8c<Q('Xg)!!4Mq3;G90/PG,G
k]?oO.l&R:-NX8Jd.n"L,c8]a!uYm0,3Jq-#ml[g!s&^>ar^^;0Qei-#m(),&,?2+#q*gp!_j@3k5YQ2
-TLoV!A-t4FPh0BGXaA9jX1*0!7:NK!@4Pi!;lg!-^T2tjT#>g$'4la!=<>]*s49"F<KrWq$@*&!"\l*
!=:-s!!4S]"Q]Ub-RUnL0``k!q/k20"*mWo.,uZV!!(CA$3;ELg]6pG"#R#r&*!Wk#ml[g!s&^>c6!-J
DJp?b$18*$!!!Q*!!*BRbl@e`%KbYj![f?TqCr%+/PFH4!aA/Gi$SR+!7:NK!@4Q*!9sOd.A^>Si;`oc
$'4la!=<>b*sNi0Ea]Fa$0)<n!!!Q*!!*BRci=,$)@PL(!rs\r3;G90/PFQ7"*HFd/)DWT!!(CA$3;EL
nc7YL"9BR;:]oST!XT0oq#^X(A^qk,+!2[4E`EP*#m(),&,?2+#q+.$!a$?Il2^JW![f?Tq(Vn%9@\+d
FqHbcga<.'!7:NK!@4Q@!8.>T"Xp!0!o3hX#ml[g!s&^>eK4o>!..6Eh$F,_!"\l*!=:.D!9=+]E#K#;
!!4Mq3;G90/PF];!d>>9!%Q\M!WW5Iq$I-JVUkeM$U:"9jT+uS!XT0oq#^X(A_/"+-4YAbg'If\!"\l*
!=:.O!8@JUC)@-VgAh:&-TLoV!A-t%FSg.^GU,'ofI$_#!7:NK!@4Pq!!<jDM^IillMptm$'4la!=<>j
*s4#>GV7VT!WW32r;ccr!=:.+!!?4:"Td9V![f?Tq(Vn%9BpWiF9?_I0IbR#!WW5Iq$I-JVV;(Q++o+_
pAj+O!XT0oq#^X(A_S:/01L+/g'R]a!WW32q#CF%-e\P%3t_YH!!4Mq3;G90/PGbYl#[#P:G+'F-NX8J
d.n"L,c9At">?Nn&-15\!XT0oq#^X(A_nL3+>mqV(ukqn#m(),&,?2+#q+L.!ZV^Qe,TOt-TLoV!\I&e
i,f'78hDI>-NX8Jd.n"L,c9T%r;ZpPUM("_!!3H5O8/kY$"`$:"<]13C(fk>k6V1i!"\l*!=:.2!!=8\
%0FrX![f?Tq(Vn%9B($qF[8AFcR/bo!7:NK!@4Q1!;-<p!?e(8"jd5N#ml[g!s&^>iZA:H%WPP[oa0C[
!WW32q#CF%-fG%,9,e2h!;QTr-RUnL0``k!jE(NJ*'Pl$c6iYn!7:NK!@4Q<!:0[g![4.*"O6uK#ml[g
!s&^>j<"LL!-CmCrX$sY!WW32q#CF%-fY1/CDmK[i;i9G![f?Tq(Vn%9BL<uG7QV^b9m>k!7:QL!X^3M
jo>Mh31Do0bQ%\N$'4la!=<?#*sE`5#(/WCbR"=N!"\l*!=:.8!!7-W#O)6K!!4Mq3;G90/PG;L"*YhC
.`s+@-NF.nq$I-JVW\!_$s8ZE!QkBD#ml[g!s&^>nfRTJ"=PF>1^_A3!WW32q#CF%-g(I2>nmS7!8%8Q
-RUnL0``k!l?!,P1GL?--hShg!!(CA$3;ELl2Uo&HA3H\!!3H5O8/kY$"a&WmN2N^5'SBo#m(),&,?2+
#q+s;!^RJ'`rH/g-TLoV!A-t7FSp4_GX=&3`?t]e!7:NK!@4Q/!!=d4H5#ZGf`2'[$'4la!=<?)*s<]C
<-9/,$2+Z,!!!Q*!!*BRlMpu;&-KlO![f?Tq(Vn%9Dio'F9?GT/L\La!WW5Iq$I-JVX=Ed1T"ptp&NA<
!XT0oq#^X(Aa^]D+>@\K(YK,\#m(),&,?2+#q,-@!tZ@\"2b*?-RUnP1&Wg-/PGVU"EdI//1A=^!WW5I
q$I-JVXOQh,GJEL!!'n:!XT0oq#^X(AapiF+Vem$&`O,T#m(),&,?2+#q,3B"$mh6"2t9=!!4Mq3;G90
/PG\W"*PtT/&!A4!!(CA$3;ELo`,0r!!+"28d2s0!XT0oq#^X(Ab-uH+p)g]%dOGO#m(),&,?2+#q,9D
"(W;V!R:]9!!4Mq3;G90/PGbY"*P8;._I,1!!(CA$3DKM!;6Bq">--,"2+[9#ml[g!s&^>ocF;^!d?s>
oEiYH!WW32q#CF%-hIB?EZ#,5!9X=`-RUnL0``k!pN-L])DiqT-NX8Jd.n"L,c:;9":@qm0EJcc!XT0o
q#^X(AbR8L-Pq=m$N1:G#m(),&,?2+#q,EH!bE/PhZ2F3![f?Tq(Vn%9DNZ3G:PBs^aJq*!WW5Iq$I-J
VYL2o(2SmQ\,ZR:$'4la!=<?5*s3uIHRZH2!WW32q#CF%-hmZC9bRZn!7:cJ-RUnL0``k!qfDpb4"r,*
-gi>`!!(CA$3;ELqZ$^DKRF]G!!3H5O88q[!srQ9*s45hF!.mt!WW32q#CF%-i*fE3"Z;`!6,!?-RUnL
0``k!rH&-c:+dsC-fZQU!!(CA$3;ELr;ZpXT5P=L!!<3-$'4la!=<?9*s4K8CDjJc!WW32q#CF%-iF#I
!ZDRNq>e,-![f?Tq(W++96>;Y81Z1D-eKdJ!!(CA$3qiR!!"@C@LKmMo`,%"$'4la#74r`+<GW8'XA#H
!!!Q*!!NZV!!"bn!=T%8!!4Mq3;G93/Q">j/$C<%!!(CA$3_]Y*hlF7o`2W)!XT0oq#^d,D[:G`&(h3A
#m(),&,?2/#p3:h#m%X<p&G.A-SY?R!]2S]XX=/M!4Vcj"/<:l!r`2)!!3H5UA87#DmW"Bi<dd9!WW36
q$7$0('qeXlMpu6-SY?R!]2S]XX=/M!4VonrKdV\\3^8"!!3H5UA87#DmW"Blj:Q9!WW36q$7$0('r1c
huJ9~>

%%EndBinary
grestore
np
173.624 248.461 mo
147.824 248.461 li
147.824 193.081 li
173.624 193.081 li
173.624 248.461 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 142.576 391.065 ]ct
[26.3375 0 0 55.9177 4.9796 142.335 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 98 
/H 208 
/M[98 0 0 -208 0 208 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
XX=/u/O'&%"@b7'.OsKZaoDJL@@[4X"I-I9/1egJk6V2&A97WW"D4CG1Gc-5!W`]Jq\B;O)A`S^XX=/u
/O'&%"@b7'.Osle^An<A@@[4X"I-I9/1f3Ug^+#pA97WW"D4CG1GcE=q#CHs$l]!Y";i$n"pV7Y""5cq
D#AAZF\YRA6mjAY!4Dk0&9"R(qZ$dDVCp?u!8Rt1#m;)`E\/F4*sNl)AHJA.$,?Q1!!<<5)AN&K"[=AQ
,6._K-NbeN9R-JW"Ec"`,'F'181,di!!=!bTJ-3C#QYsC*<?/a!!)3hapA.jG\/f1*sa%kAH3nrNsQ-9
!9X=`":uaQ!!d$^AcMfS!!'>Q"=Z#cGBEe*"Ek>N6$<0K!_=[dZN((JKS:NG!!EESW?)*>!!:@E!:pN5
#m2Ju7kac^"=*tY%jCoo!fmWoec=P,!X',sq>^S9,u"7;![.OD\L7>'"">uRGPlObG7mDZqfDm1-RZ;%
""04E'`7q5#<nb5qZ$]A!!*!)\-W6iI4QlG*s<hr?7@#p*s.K0$/km7!!3<=;>L7oDClk*!!4;D!5p8W
-NbhS(O,e!"*YhIGklF_81,do!!>!G7gf.o!t/4g0E(tL!!:@E!4N7:3J%tlr#Z%i+@n=3qB#d"#moqu
bQ%\K(2!CC!FJ%c!!4;D!7*%Y-NbkX%sIkm"*Z@QGkZ:]81,dq!!>K_0*2%P"TSN=FaY;)!!:@E!4`C<
7YCmhr#Z"l2Ei_e*s.K0$24G<!!<9.)KPZS!DH&X!!4;D!88g[-Nbn^)g;.$"*Z[LGP-%Z81,du!!N?+
9rK6:qu?gILLh(j!!:@E!5&U@%T7iX,5`Mb0gd?;ocF3q#lk:D!!3KHD>F555ZmXY![.ODjX8b0"=Pff
3Hb7A"*ZsJGOonX81,e+!;?Hr#?RlG!W2p"30[/Do)Jj9!!'_>";"^]$6f?i"<]X$(FK&%p`BQu#mn<G
!s/iL<;QXs!]FT[!!4;D!:VA`-NbbK8RD:9"'.l'G4BYU81,e#!!<U@V(2?B""0Wl"n;QobQ%Y($/Gmj
'P;>.+T3Ab+<+Gb,k2rXNsQ-5!;ZZt!Y$&!qZ$[S/oU4Z![.OD_C#F6/kpWhF9H_M6m6aJFSU"[81,e%
!!<gST/?EF"!F'S!Ug!ibQ%Y3$.K7a)00@L+T3Ab+UqQS+n$KSNsQ-@!:^$j!Y6@K!!5kKBC5a$+TMM\
-NbeO6[8NN"a1qV7!3V>F94u\-c>ue(kIepqu?g"+Is\B!!:@E!;[#F#m2;s<AFCn"<mhK&0^E_!fmWo
h#QX=!X',fq>^S1/kPC0![.OD`[:p=0faK#FT-@aG7[&Rl?!(u-RZn6"!WbZ)>jI:""ffklMq"ebQ%X_
#m2W/74\9X"<mtH.Nn%!!fmWokQ'K?!X'3#q>^S:2&tl]![.ODb:!9:""?#OGPlObG8EDek]?ks-R["9
"9C$?@M&G;!t.\]0D#8;!!:@E!6GNM$8R2\./Y.h-5'$0kT9ke#mp2'ec5aT(0UJ6!GFLV!!4;D!7iOj
-NbhV&pO7q"*Z"JGij)L81,e-!!>0K57%/e!u>I"-N*r0!!:@E!6PTM4adYar#Z"j,sa6I*s.K0$2sqM
!!<9-(i9$K!EheO!!4;D!9#<l-Nbh['R0Is"*ZFFGN<iI81,e0!!EBlTI'd>!!E9GH>",U!!:@E!6kfQ
$qYaF,lA_d001R6ko]gF!fmWobQ%\L)K#<N!D6GR!!4;D!:2)n-Nbkb/9Ul4"*cU<GiEfH81,e2!!EI(
V&KI5!!=j'8Ij_[!mCWEcNs^a=*Fflr#Z"s58#F9+7UESNsQ-=!!<6/)diFA!CUV[!!4;D!;@kq-NkhK
794R/F9?MG&U3/T!_=[dg&UmJ!s`87-MmcF230HrhuEi&!!(CQ";#*f)^5/%"<]Ho"=<pejrXYc#mnuZ
!s/iM2u<RV$or4_!!+5C!!(Iq""5coD#AAXF\tLGG2@<B81,eH!:Kmi$uW4%qZ$^DQluLe!!:@E!7M5W
'l\=K+T3A_+;Y)\!$^8A!fmWodf9IO%N?,Z!!55:C$#Ej!!4;D!7`G!.5+D?r,`'b/4V76giNTg-R\B`
jo>JsGG$Pc!!<6BT,lYd!mCWEeHl<sF([B.*s<bj?3DG,*s.K0$02*W!!397+Sl'>?7fL<!!4;D!7rS#
.53i-r,`$b'gtpuFPLs>81,e:!!=6oLEcWr!s9m>,iJb!!!:@E!7qMZ-$Dm6r#Z%c!*L*\g)gBW#mp&#
kl:bg'05mh!c9VQf`2's!!(\"""H&RGQ)[fFED^<5',=t!_=[df`2+&O(T7+!!<E^OYl>'mJm=4!!([Y
"#"sO/GpRm,m@""+P7b;NsQ-h!8mhY"r1)5!!7+!$J,7Z+TMMu-NtkF.5_uer,`$b(bg3bF94u\-eeV'
1RL]Aqu?g-8U;lX!94%\bQ%Xt#m328'I`l$""4mF1tE`N+--^7g].EW"rLqJ!!-_)e,TOn!!)41p*Tql
2\:01F9?_5-[4$]!_=[dh>dZZ5GKt;qu?g8ASW:`!8%8QbQ%Y"#m:T(K`i\!*s4&E/M>p&ocF6r#moDf
!XBT_q>^Os<71aJ+TMN6-g`8`.m"Vkr,`$c2Bd:lF94u\-f=t-!Cs+6!W2p",_]P9d/X6l!!(p`":@hU
!$_=_"#*(d.-Mc<*s.K0$/Y^a#od[V!!,Aici=+j!!*!Gj<k$[5WNubF9?eP(3e)H!_=[diW&r^!`Z3B
qZ$^VO\#f(!!:@E!9+:f%Te#c+T3Ab+?*"+-Li28*s.K0$/kjc#oce=!!,&mdfB:G![.ODj<k$X/Orq@
F9H_m57r+aF94u\-gUj/!!<U=W$qNC""KNd"3gfIbQ%Y(#m1lPF<19$"<epd!@%@^e/naQ#moYm!s/oN
0`(hO.Q28$!:^$j+TMN)-NbbL9m?MW"Ed0t,'D(N!_=[dpAj[_!toRJ3;`aZ!?mRG!QtHEbQ%Y*#m2)_
CH)/5![/.O!<==e*s.K0$0D3i!tH4NqZ$[f3+h7Pjo>H+!!)41"">lgGl2XdFWrt<Fie_+81+BbkPt]'
IZ5fS!!E<CNunDE!!:@E!9a^j,'Hia1]/<t+TP.J+NY],NsQ-V!!3980_tbNAiWBL!8@JT+TMN--NbeO
3I(ID"*P8?C<q"sF94u\-gC[6+,kjnqu?g#/s.g,!!:@E!:U<l#m2Q)6neH["=!tB/0MtT!fmWol2Ukg
'0Q*k!cL%8`W-&`!!)@5"">uNGPuUdFE\NbGf4\*81,eO!!=U5A.e_>!s_D[1?eeo!!:@E!:1!o/q>8u
r#Z%g&l1G/boca'!fmWoli7(j'it/2!GFI1!!4;D!:M9<-RpqfGPlObGTo%i_K5iM-R\?_"9C?L70`Yi
!to!q,4Y`]!!:@E!:L3s$9EYG-2\he.jRJ8eK=3$!fmWomJm:n(2NaH!Eqe*!!4;D!;\);-Nbk[&9dtn
"*Z:DGJJ;%81,eT!!EBjU+-3A!!=<`CDZjJ`W-(a!!)Nq":ReK!$hC`""uG^/)DB.*s.K0$1Ior#o[dZ
!!,nq^]4H:+TMN5-Nbna-[#?/"*c@4GJ8/#81,eV!!EL%V&BC4!!"POF[ckT!!:@E!:pL"%odiW+oNJc
+>P_a.H_f**s.K0$1e-!!=BfVq>^OlBupAJ!!4;D!;.]B-nIbZFo6=`EAeDQ]Q=3G-R\Qe!=<*6V]kp;
"#GW`#J:$<bQ%Y9#m:lLFql2!*s<]A5lrD&+3bl/NsQ-c!!<61*('N&!Y.P8dK&P4![.ODpEp%k/k]dR
F9H_`5o+[UF94u\-iO,B!!<XCV(VWF"!j0Y"1eI6bQ%Y;#m:uWE$le,*s<]&;ue-<+2T*$NsQ-e!!<94
)^,"X!]r8UgAp+2![.ODq'Q7m/l$]hF9=!_06Y$Nr,`!2-R\]i!tf[J1A_%R*M=>P\,ZTS!!)g$";u8o
2'Di>"!@\N"oojW*s.K0$2FQ&!Y6:I!!6LZ>N>e6!!4;D!;e,G.53o/r,`$`'hVNGFRaGS81,e^!!=-l
M^&'!!s'aE-a`pUbQ%Y?#m2Au9J?;c"<mhR)^)R2!fmWoqZ$[#&iTRd!c9>Bm/Y6.![.ODr?h[r1+[YI
F9?[t6Zp[rk&^Yq-R\im"!s"I'`7q5"uDW*ZN($M!!!#t#m2`,1FrAF"!e"N27"A+NsQ-k!!3<=:AOql
D_VIi!58F=+TMKi-Rgc7Gl)[d'JXjaFPCmC81,bb!&L:2/Gp1a*(53+\cDL*#g<8K#miVY<&FM'""k'E
1pJ,-NsQ*n!<s8rq>^P48cA^r!!4;D!!4Su1\a-6;6P'F81,c()s6sD!KjSU!5AL;bQ%Vf,J!V:!DRL^
+5@qANsQ*q";^e5!<F:O!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW
*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+
NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr
!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9
q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%
-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L
!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV
"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG
!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi
-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao
3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL
0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90
/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ss
FP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf
"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g
!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlo
d.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK
!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;EL
nc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?
ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:Bgj
bQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH
!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3
O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la
!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b
+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW
*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I
#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m
!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),
&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+
#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BR
YQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO
!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2
!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao
3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL
0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%
9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9
gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@
81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlo
d.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA
$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-J
VQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$m
bQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH
#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsm
q#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY
$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>
Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0Z
NsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3
#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3
&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+
#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W
!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:(
"X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG
!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi
-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-R
q(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90
/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"
FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@
81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.n
q$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK
!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;EL
e,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!
d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g(
"j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH
!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3
O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY
$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB
*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/
#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr
!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m
!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9
q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*
!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BR
fDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O
!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG
!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi
-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL
0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%
9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tC
FL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQp
q/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f
"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq
-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb
!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA
$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;EL
d/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>s
e,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3E
bQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH
#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',
$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsm
q#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la
!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(
A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^j
ocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpO
NsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m
!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9
q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+
#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(
!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV
"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L
!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG
-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi
-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-R
q(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90
/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHm
r,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f
"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_
-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlo
d.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK
!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-J
VYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QN
VQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9Z,3-RSlod.n"L,c7dG
"t[Uk!!rsmq#^X(Ab@.Y*sWo5Ta;#*!"\l*!=:.+!8.>V-63'd-RUnL0``k!]6*jj"*H=b/H.!u!!(CA
$3;ELZ2b.NVGdWu!!rsmq#^[)AKS9$#pBLr<t5NC!!!Q*!!*BRirIF+!aHZPrW!!I-TLoV!A-saFRXAS
FVQtgr$MOG!7:NK!@4PM!!E<LUdY@`!!3H5O8/kY$"^Ld"<mhr8dkS(!WW32q#CF%-gguT!!7!V#lFZ(
-RUnL0``k!d<+Pn"*Y86.f(Lo!!(CA$3;EL[f?I724=M)q>^R'$'4la!=<>H*s3hnHp7B5!WW32q#CF%
-i!bV!!7*V#PnE%-RUnL0``k!giVCp"*YhC.JP7l!!(CA$3;EL^B"-2!teRo./3cD#ml[g!s&^>\K:o'
*dKF6#m(),&,H8-!!t$_!!6C?"o&'!-RUnL0``k!kB,6r"*Z^Z.J>+j!!(CA$3;ELaoLu4"!N8L+8,[9
#ml[g!s&^>],q,/7<L!P#m1J6!"\l*!=:-b!!5:s"SMfs-RUnL0``k!noW)t"*dHl..ekg!!(CA$3;EL
eH"h6""g$f(%_J-#ml[g!s&^>]cRA7?ud7ooa(["!"\l*!=:-d!!4;T"7uQp-RUnL0``k!rH,r!"*$sd
..S_e!!(CA$3;EL^An?mULt&,!!3H5O8/kY$"`WKclWB50lCV=nd,?t!"\l*!=:.'!:0[f%N,`Ync/_=
-TLoV!A-s]F9?Y\6nJ0^p*TnA!7:NK!@4PY!!=IC=U"9p!XT0oq#^X(Ac*Xj*s<]$F'K4E#m(),&,?2+
#q+U1irB-H)[l*7![f?Tq(Vn%9>koQFWLQF/+"\c!!(CA$3;EL_uKl?+Jqcu!!3H5O8T1Z!s&^>`#f(*
!.I`2#m(),&,?2+#q,!<g&M4i)@-E4!!4Mq3;G90/PF?1qK)g`&i_E--NX8Jd.n"L,c8Q]"9pNO4TY$P
r;Zm*$'4la!=<>W*s<klI7"A.#m(),&,?2+#q,BGd/X5c)$oO.![f?Tq(Vn%9A"@VF9?b+1b.`;!WW5I
q$I-JVT8`>%SMs<p]0jb!XT0oq#^X(A]Pqq.2@%bkm7Ck!"\l*!XU4Sa8c<Q('Xg)!!4Mq3;G90/PG,G
k]?oO.l&R:-NX8Jd.n"L,c8]a!uYm0,3Jq-#ml[g!s&^>ar^^;0Qei-#m(),&,?2+#q*gp!_j@3k5YQ2
-TLoV!A-t4FPh0BGXaA9jX1*0!7:NK!@4Pi!;lg!-^T2tjT#>g$'4la!=<>]*s49"F<KrWq$@*&!"\l*
!=:-s!!4S]"Q]Ub-RUnL0``k!q/k20"*mWo.,uZV!!(CA$3;ELg]6pG"#R#r&*!Wk#ml[g!s&^>c6!-J
DJp?b$18*$!!!Q*!!*BRbl@e`%KbYj![f?TqCr%+/PFH4!aA/Gi$SR+!7:NK!@4Q*!9sOd.A^>Si;`oc
$'4la!=<>b*sNi0Ea]Fa$0)<n!!!Q*!!*BRci=,$)@PL(!rs\r3;G90/PFQ7"*HFd/)DWT!!(CA$3;EL
nc7YL"9BR;:]oST!XT0oq#^X(A^qk,+!2[4E`EP*#m(),&,?2+#q+.$!a$?Il2^JW![f?Tq(Vn%9@\+d
FqHbcga<.'!7:NK!@4Q@!8.>T"Xp!0!o3hX#ml[g!s&^>eK4o>!..6Eh$F,_!"\l*!=:.D!9=+]E#K#;
!!4Mq3;G90/PF];!d>>9!%Q\M!WW5Iq$I-JVUkeM$U:"9jT+uS!XT0oq#^X(A_/"+-4YAbg'If\!"\l*
!=:.O!8@JUC)@-VgAh:&-TLoV!A-t%FSg.^GU,'ofI$_#!7:NK!@4Pq!!<jDM^IillMptm$'4la!=<>j
*s4#>GV7VT!WW32r;ccr!=:.+!!?4:"Td9V![f?Tq(Vn%9BpWiF9?_I0IbR#!WW5Iq$I-JVV;(Q++o+_
pAj+O!XT0oq#^X(A_S:/01L+/g'R]a!WW32q#CF%-e\P%3t_YH!!4Mq3;G90/PGbYl#[#P:G+'F-NX8J
d.n"L,c9At">?Nn&-15\!XT0oq#^X(A_nL3+>mqV(ukqn#m(),&,?2+#q+L.!ZV^Qe,TOt-TLoV!\I&e
i,f'78hDI>-NX8Jd.n"L,c9T%r;ZpPUM("_!!3H5O8/kY$"`$:"<]13C(fk>k6V1i!"\l*!=:.2!!=8\
%0FrX![f?Tq(Vn%9B($qF[8AFcR/bo!7:NK!@4Q1!;-<p!?e(8"jd5N#ml[g!s&^>iZA:H%WPP[oa0C[
!WW32q#CF%-fG%,9,e2h!;QTr-RUnL0``k!jE(NJ*'Pl$c6iYn!7:NK!@4Q<!:0[g![4.*"O6uK#ml[g
!s&^>j<"LL!-CmCrX$sY!WW32q#CF%-fY1/CDmK[i;i9G![f?Tq(Vn%9BL<uG7QV^b9m>k!7:QL!X^3M
jo>Mh31Do0bQ%\N$'4la!=<?#*sE`5#(/WCbR"=N!"\l*!=:.8!!7-W#O)6K!!4Mq3;G90/PG;L"*YhC
.`s+@-NF.nq$I-JVW\!_$s8ZE!QkBD#ml[g!s&^>nfRTJ"=PF>1^_A3!WW32q#CF%-g(I2>nmS7!8%8Q
-RUnL0``k!l?!,P1GL?--hShg!!(CA$3;ELl2Uo&HA3H\!!3H5O8/kY$"a&WmN2N^5'SBo#m(),&,?2+
#q+s;!^RJ'`rH/g-TLoV!A-t7FSp4_GX=&3`?t]e!7:NK!@4Q/!!=d4H5#ZGf`2'[$'4la!=<?)*s<]C
<-9/,$2+Z,!!!Q*!!*BRlMpu;&-KlO![f?Tq(Vn%9Dio'F9?GT/L\La!WW5Iq$I-JVX=Ed1T"ptp&NA<
!XT0oq#^X(Aa^]D+>@\K(YK,\#m(),&,?2+#q,-@!tZ@\"2b*?-RUnP1&Wg-/PGVU"EdI//1A=^!WW5I
q$I-JVXOQh,GJEL!!'n:!XT0oq#^X(AapiF+Vem$&`O,T#m(),&,?2+#q,3B"$mh6"2t9=!!4Mq3;G90
/PG\W"*PtT/&!A4!!(CA$3;ELo`,0r!!+"28d2s0!XT0oq#^X(Ab-uH+p)g]%dOGO#m(),&,?2+#q,9D
"(W;V!R:]9!!4Mq3;G90/PGbY"*P8;._I,1!!(CA$3DKM!;6Bq">--,"2+[9#ml[g!s&^>ocF;^!d?s>
oEiYH!WW32q#CF%-hIB?EZ#,5!9X=`-RUnL0``k!pN-L])DiqT-NX8Jd.n"L,c:;9":@qm0EJcc!XT0o
q#^X(AbR8L-Pq=m$N1:G#m(),&,?2+#q,EH!bE/PhZ2F3![f?Tq(Vn%9DNZ3G:PBs^aJq*!WW5Iq$I-J
VYL2o(2SmQ\,ZR:$'4la!=<?5*s3uIHRZH2!WW32q#CF%-hmZC9bRZn!7:cJ-RUnL0``k!qfDpb4"r,*
-gi>`!!(CA$3;ELqZ$^DKRF]G!!3H5O88q[!srQ9*s45hF!.mt!WW32q#CF%-i*fE3"Z;`!6,!?-RUnL
0``k!rH&-c:+dsC-fZQU!!(CA$3;ELr;ZpXT5P=L!!<3-$'4la!=<?9*s4K8CDjJc!WW32q#CF%-iF#I
!ZDRNq>e,-![f?Tq(W++96>;Y81Z1D-eKdJ!!(CA$3qiR!!"@C@LKmMo`,%"$'4la#74r`+<GW8'XA#H
!!!Q*!!NZV!!"bn!=T%8!!4Mq3;G93/Q">j/$C<%!!(CA$3_]Y*hlF7o`2W)!XT0oq#^d,D[:G`&(h3A
#m(),&,?2/#p3:h#m%X<p&G.A-SY?R!]2S]XX=/M!4Vcj"/<:l!r`2)!!3H5UA87#DmW"Bi<dd9!WW36
q$7$0('qeXlMpu6-SY?R!]2S]XX=/M!4VonrKdV\\3^8"!!3H5UA87#DmW"Blj:Q9!WW36q$7$0('r1c
huJ9~>

%%EndBinary
grestore
np
211.244 239.821 mo
193.544 239.821 li
193.544 201.721 li
211.244 201.721 li
211.244 239.821 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 142.576 391.065 ]ct
[18.0687 0 0 38.4699 50.784 151.059 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 98 
/H 208 
/M[98 0 0 -208 0 208 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
XX=/u/O'&%"@b7'.OsKZaoDJL@@[4X"I-I9/1egJk6V2&A97WW"D4CG1Gc-5!W`]Jq\B;O)A`S^XX=/u
/O'&%"@b7'.Osle^An<A@@[4X"I-I9/1f3Ug^+#pA97WW"D4CG1GcE=q#CHs$l]!Y";i$n"pV7Y""5cq
D#AAZF\YRA6mjAY!4Dk0&9"R(qZ$dDVCp?u!8Rt1#m;)`E\/F4*sNl)AHJA.$,?Q1!!<<5)AN&K"[=AQ
,6._K-NbeN9R-JW"Ec"`,'F'181,di!!=!bTJ-3C#QYsC*<?/a!!)3hapA.jG\/f1*sa%kAH3nrNsQ-9
!9X=`":uaQ!!d$^AcMfS!!'>Q"=Z#cGBEe*"Ek>N6$<0K!_=[dZN((JKS:NG!!EESW?)*>!!:@E!:pN5
#m2Ju7kac^"=*tY%jCoo!fmWoec=P,!X',sq>^S9,u"7;![.OD\L7>'"">uRGPlObG7mDZqfDm1-RZ;%
""04E'`7q5#<nb5qZ$]A!!*!)\-W6iI4QlG*s<hr?7@#p*s.K0$/km7!!3<=;>L7oDClk*!!4;D!5p8W
-NbhS(O,e!"*YhIGklF_81,do!!>!G7gf.o!t/4g0E(tL!!:@E!4N7:3J%tlr#Z%i+@n=3qB#d"#moqu
bQ%\K(2!CC!FJ%c!!4;D!7*%Y-NbkX%sIkm"*Z@QGkZ:]81,dq!!>K_0*2%P"TSN=FaY;)!!:@E!4`C<
7YCmhr#Z"l2Ei_e*s.K0$24G<!!<9.)KPZS!DH&X!!4;D!88g[-Nbn^)g;.$"*Z[LGP-%Z81,du!!N?+
9rK6:qu?gILLh(j!!:@E!5&U@%T7iX,5`Mb0gd?;ocF3q#lk:D!!3KHD>F555ZmXY![.ODjX8b0"=Pff
3Hb7A"*ZsJGOonX81,e+!;?Hr#?RlG!W2p"30[/Do)Jj9!!'_>";"^]$6f?i"<]X$(FK&%p`BQu#mn<G
!s/iL<;QXs!]FT[!!4;D!:VA`-NbbK8RD:9"'.l'G4BYU81,e#!!<U@V(2?B""0Wl"n;QobQ%Y($/Gmj
'P;>.+T3Ab+<+Gb,k2rXNsQ-5!;ZZt!Y$&!qZ$[S/oU4Z![.OD_C#F6/kpWhF9H_M6m6aJFSU"[81,e%
!!<gST/?EF"!F'S!Ug!ibQ%Y3$.K7a)00@L+T3Ab+UqQS+n$KSNsQ-@!:^$j!Y6@K!!5kKBC5a$+TMM\
-NbeO6[8NN"a1qV7!3V>F94u\-c>ue(kIepqu?g"+Is\B!!:@E!;[#F#m2;s<AFCn"<mhK&0^E_!fmWo
h#QX=!X',fq>^S1/kPC0![.OD`[:p=0faK#FT-@aG7[&Rl?!(u-RZn6"!WbZ)>jI:""ffklMq"ebQ%X_
#m2W/74\9X"<mtH.Nn%!!fmWokQ'K?!X'3#q>^S:2&tl]![.ODb:!9:""?#OGPlObG8EDek]?ks-R["9
"9C$?@M&G;!t.\]0D#8;!!:@E!6GNM$8R2\./Y.h-5'$0kT9ke#mp2'ec5aT(0UJ6!GFLV!!4;D!7iOj
-NbhV&pO7q"*Z"JGij)L81,e-!!>0K57%/e!u>I"-N*r0!!:@E!6PTM4adYar#Z"j,sa6I*s.K0$2sqM
!!<9-(i9$K!EheO!!4;D!9#<l-Nbh['R0Is"*ZFFGN<iI81,e0!!EBlTI'd>!!E9GH>",U!!:@E!6kfQ
$qYaF,lA_d001R6ko]gF!fmWobQ%\L)K#<N!D6GR!!4;D!:2)n-Nbkb/9Ul4"*cU<GiEfH81,e2!!EI(
V&KI5!!=j'8Ij_[!mCWEcNs^a=*Fflr#Z"s58#F9+7UESNsQ-=!!<6/)diFA!CUV[!!4;D!;@kq-NkhK
794R/F9?MG&U3/T!_=[dg&UmJ!s`87-MmcF230HrhuEi&!!(CQ";#*f)^5/%"<]Ho"=<pejrXYc#mnuZ
!s/iM2u<RV$or4_!!+5C!!(Iq""5coD#AAXF\tLGG2@<B81,eH!:Kmi$uW4%qZ$^DQluLe!!:@E!7M5W
'l\=K+T3A_+;Y)\!$^8A!fmWodf9IO%N?,Z!!55:C$#Ej!!4;D!7`G!.5+D?r,`'b/4V76giNTg-R\B`
jo>JsGG$Pc!!<6BT,lYd!mCWEeHl<sF([B.*s<bj?3DG,*s.K0$02*W!!397+Sl'>?7fL<!!4;D!7rS#
.53i-r,`$b'gtpuFPLs>81,e:!!=6oLEcWr!s9m>,iJb!!!:@E!7qMZ-$Dm6r#Z%c!*L*\g)gBW#mp&#
kl:bg'05mh!c9VQf`2's!!(\"""H&RGQ)[fFED^<5',=t!_=[df`2+&O(T7+!!<E^OYl>'mJm=4!!([Y
"#"sO/GpRm,m@""+P7b;NsQ-h!8mhY"r1)5!!7+!$J,7Z+TMMu-NtkF.5_uer,`$b(bg3bF94u\-eeV'
1RL]Aqu?g-8U;lX!94%\bQ%Xt#m328'I`l$""4mF1tE`N+--^7g].EW"rLqJ!!-_)e,TOn!!)41p*Tql
2\:01F9?_5-[4$]!_=[dh>dZZ5GKt;qu?g8ASW:`!8%8QbQ%Y"#m:T(K`i\!*s4&E/M>p&ocF6r#moDf
!XBT_q>^Os<71aJ+TMN6-g`8`.m"Vkr,`$c2Bd:lF94u\-f=t-!Cs+6!W2p",_]P9d/X6l!!(p`":@hU
!$_=_"#*(d.-Mc<*s.K0$/Y^a#od[V!!,Aici=+j!!*!Gj<k$[5WNubF9?eP(3e)H!_=[diW&r^!`Z3B
qZ$^VO\#f(!!:@E!9+:f%Te#c+T3Ab+?*"+-Li28*s.K0$/kjc#oce=!!,&mdfB:G![.ODj<k$X/Orq@
F9H_m57r+aF94u\-gUj/!!<U=W$qNC""KNd"3gfIbQ%Y(#m1lPF<19$"<epd!@%@^e/naQ#moYm!s/oN
0`(hO.Q28$!:^$j+TMN)-NbbL9m?MW"Ed0t,'D(N!_=[dpAj[_!toRJ3;`aZ!?mRG!QtHEbQ%Y*#m2)_
CH)/5![/.O!<==e*s.K0$0D3i!tH4NqZ$[f3+h7Pjo>H+!!)41"">lgGl2XdFWrt<Fie_+81+BbkPt]'
IZ5fS!!E<CNunDE!!:@E!9a^j,'Hia1]/<t+TP.J+NY],NsQ-V!!3980_tbNAiWBL!8@JT+TMN--NbeO
3I(ID"*P8?C<q"sF94u\-gC[6+,kjnqu?g#/s.g,!!:@E!:U<l#m2Q)6neH["=!tB/0MtT!fmWol2Ukg
'0Q*k!cL%8`W-&`!!)@5"">uNGPuUdFE\NbGf4\*81,eO!!=U5A.e_>!s_D[1?eeo!!:@E!:1!o/q>8u
r#Z%g&l1G/boca'!fmWoli7(j'it/2!GFI1!!4;D!:M9<-RpqfGPlObGTo%i_K5iM-R\?_"9C?L70`Yi
!to!q,4Y`]!!:@E!:L3s$9EYG-2\he.jRJ8eK=3$!fmWomJm:n(2NaH!Eqe*!!4;D!;\);-Nbk[&9dtn
"*Z:DGJJ;%81,eT!!EBjU+-3A!!=<`CDZjJ`W-(a!!)Nq":ReK!$hC`""uG^/)DB.*s.K0$1Ior#o[dZ
!!,nq^]4H:+TMN5-Nbna-[#?/"*c@4GJ8/#81,eV!!EL%V&BC4!!"POF[ckT!!:@E!:pL"%odiW+oNJc
+>P_a.H_f**s.K0$1e-!!=BfVq>^OlBupAJ!!4;D!;.]B-nIbZFo6=`EAeDQ]Q=3G-R\Qe!=<*6V]kp;
"#GW`#J:$<bQ%Y9#m:lLFql2!*s<]A5lrD&+3bl/NsQ-c!!<61*('N&!Y.P8dK&P4![.ODpEp%k/k]dR
F9H_`5o+[UF94u\-iO,B!!<XCV(VWF"!j0Y"1eI6bQ%Y;#m:uWE$le,*s<]&;ue-<+2T*$NsQ-e!!<94
)^,"X!]r8UgAp+2![.ODq'Q7m/l$]hF9=!_06Y$Nr,`!2-R\]i!tf[J1A_%R*M=>P\,ZTS!!)g$";u8o
2'Di>"!@\N"oojW*s.K0$2FQ&!Y6:I!!6LZ>N>e6!!4;D!;e,G.53o/r,`$`'hVNGFRaGS81,e^!!=-l
M^&'!!s'aE-a`pUbQ%Y?#m2Au9J?;c"<mhR)^)R2!fmWoqZ$[#&iTRd!c9>Bm/Y6.![.ODr?h[r1+[YI
F9?[t6Zp[rk&^Yq-R\im"!s"I'`7q5"uDW*ZN($M!!!#t#m2`,1FrAF"!e"N27"A+NsQ-k!!3<=:AOql
D_VIi!58F=+TMKi-Rgc7Gl)[d'JXjaFPCmC81,bb!&L:2/Gp1a*(53+\cDL*#g<8K#miVY<&FM'""k'E
1pJ,-NsQ*n!<s8rq>^P48cA^r!!4;D!!4Su1\a-6;6P'F81,c()s6sD!KjSU!5AL;bQ%Vf,J!V:!DRL^
+5@qANsQ*q";^e5!<F:O!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW
*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+
NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr
!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9
q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%
-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L
!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV
"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG
!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi
-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao
3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL
0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90
/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ss
FP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf
"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g
!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlo
d.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK
!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;EL
nc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?
ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:Bgj
bQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH
!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3
O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la
!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b
+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW
*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I
#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m
!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),
&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+
#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BR
YQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO
!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2
!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao
3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL
0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%
9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9
gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@
81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlo
d.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA
$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-J
VQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$m
bQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH
#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsm
q#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY
$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>
Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0Z
NsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3
#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3
&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+
#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W
!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:(
"X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG
!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi
-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-R
q(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90
/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"
FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@
81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.n
q$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK
!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;EL
e,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!
d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g(
"j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH
!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3
O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY
$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB
*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/
#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr
!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m
!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9
q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*
!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BR
fDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O
!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG
!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi
-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL
0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%
9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tC
FL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQp
q/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f
"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq
-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb
!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA
$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;EL
d/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>s
e,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3E
bQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH
#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',
$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsm
q#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la
!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(
A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^j
ocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpO
NsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m
!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9
q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+
#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(
!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV
"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L
!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG
-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi
-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-R
q(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90
/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHm
r,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f
"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_
-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlo
d.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK
!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-J
VYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QN
VQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9Z,3-RSlod.n"L,c7dG
"t[Uk!!rsmq#^X(Ab@.Y*sWo5Ta;#*!"\l*!=:.+!8.>V-63'd-RUnL0``k!]6*jj"*H=b/H.!u!!(CA
$3;ELZ2b.NVGdWu!!rsmq#^[)AKS9$#pBLr<t5NC!!!Q*!!*BRirIF+!aHZPrW!!I-TLoV!A-saFRXAS
FVQtgr$MOG!7:NK!@4PM!!E<LUdY@`!!3H5O8/kY$"^Ld"<mhr8dkS(!WW32q#CF%-gguT!!7!V#lFZ(
-RUnL0``k!d<+Pn"*Y86.f(Lo!!(CA$3;EL[f?I724=M)q>^R'$'4la!=<>H*s3hnHp7B5!WW32q#CF%
-i!bV!!7*V#PnE%-RUnL0``k!giVCp"*YhC.JP7l!!(CA$3;EL^B"-2!teRo./3cD#ml[g!s&^>\K:o'
*dKF6#m(),&,H8-!!t$_!!6C?"o&'!-RUnL0``k!kB,6r"*Z^Z.J>+j!!(CA$3;ELaoLu4"!N8L+8,[9
#ml[g!s&^>],q,/7<L!P#m1J6!"\l*!=:-b!!5:s"SMfs-RUnL0``k!noW)t"*dHl..ekg!!(CA$3;EL
eH"h6""g$f(%_J-#ml[g!s&^>]cRA7?ud7ooa(["!"\l*!=:-d!!4;T"7uQp-RUnL0``k!rH,r!"*$sd
..S_e!!(CA$3;EL^An?mULt&,!!3H5O8/kY$"`WKclWB50lCV=nd,?t!"\l*!=:.'!:0[f%N,`Ync/_=
-TLoV!A-s]F9?Y\6nJ0^p*TnA!7:NK!@4PY!!=IC=U"9p!XT0oq#^X(Ac*Xj*s<]$F'K4E#m(),&,?2+
#q+U1irB-H)[l*7![f?Tq(Vn%9>koQFWLQF/+"\c!!(CA$3;EL_uKl?+Jqcu!!3H5O8T1Z!s&^>`#f(*
!.I`2#m(),&,?2+#q,!<g&M4i)@-E4!!4Mq3;G90/PF?1qK)g`&i_E--NX8Jd.n"L,c8Q]"9pNO4TY$P
r;Zm*$'4la!=<>W*s<klI7"A.#m(),&,?2+#q,BGd/X5c)$oO.![f?Tq(Vn%9A"@VF9?b+1b.`;!WW5I
q$I-JVT8`>%SMs<p]0jb!XT0oq#^X(A]Pqq.2@%bkm7Ck!"\l*!XU4Sa8c<Q('Xg)!!4Mq3;G90/PG,G
k]?oO.l&R:-NX8Jd.n"L,c8]a!uYm0,3Jq-#ml[g!s&^>ar^^;0Qei-#m(),&,?2+#q*gp!_j@3k5YQ2
-TLoV!A-t4FPh0BGXaA9jX1*0!7:NK!@4Pi!;lg!-^T2tjT#>g$'4la!=<>]*s49"F<KrWq$@*&!"\l*
!=:-s!!4S]"Q]Ub-RUnL0``k!q/k20"*mWo.,uZV!!(CA$3;ELg]6pG"#R#r&*!Wk#ml[g!s&^>c6!-J
DJp?b$18*$!!!Q*!!*BRbl@e`%KbYj![f?TqCr%+/PFH4!aA/Gi$SR+!7:NK!@4Q*!9sOd.A^>Si;`oc
$'4la!=<>b*sNi0Ea]Fa$0)<n!!!Q*!!*BRci=,$)@PL(!rs\r3;G90/PFQ7"*HFd/)DWT!!(CA$3;EL
nc7YL"9BR;:]oST!XT0oq#^X(A^qk,+!2[4E`EP*#m(),&,?2+#q+.$!a$?Il2^JW![f?Tq(Vn%9@\+d
FqHbcga<.'!7:NK!@4Q@!8.>T"Xp!0!o3hX#ml[g!s&^>eK4o>!..6Eh$F,_!"\l*!=:.D!9=+]E#K#;
!!4Mq3;G90/PF];!d>>9!%Q\M!WW5Iq$I-JVUkeM$U:"9jT+uS!XT0oq#^X(A_/"+-4YAbg'If\!"\l*
!=:.O!8@JUC)@-VgAh:&-TLoV!A-t%FSg.^GU,'ofI$_#!7:NK!@4Pq!!<jDM^IillMptm$'4la!=<>j
*s4#>GV7VT!WW32r;ccr!=:.+!!?4:"Td9V![f?Tq(Vn%9BpWiF9?_I0IbR#!WW5Iq$I-JVV;(Q++o+_
pAj+O!XT0oq#^X(A_S:/01L+/g'R]a!WW32q#CF%-e\P%3t_YH!!4Mq3;G90/PGbYl#[#P:G+'F-NX8J
d.n"L,c9At">?Nn&-15\!XT0oq#^X(A_nL3+>mqV(ukqn#m(),&,?2+#q+L.!ZV^Qe,TOt-TLoV!\I&e
i,f'78hDI>-NX8Jd.n"L,c9T%r;ZpPUM("_!!3H5O8/kY$"`$:"<]13C(fk>k6V1i!"\l*!=:.2!!=8\
%0FrX![f?Tq(Vn%9B($qF[8AFcR/bo!7:NK!@4Q1!;-<p!?e(8"jd5N#ml[g!s&^>iZA:H%WPP[oa0C[
!WW32q#CF%-fG%,9,e2h!;QTr-RUnL0``k!jE(NJ*'Pl$c6iYn!7:NK!@4Q<!:0[g![4.*"O6uK#ml[g
!s&^>j<"LL!-CmCrX$sY!WW32q#CF%-fY1/CDmK[i;i9G![f?Tq(Vn%9BL<uG7QV^b9m>k!7:QL!X^3M
jo>Mh31Do0bQ%\N$'4la!=<?#*sE`5#(/WCbR"=N!"\l*!=:.8!!7-W#O)6K!!4Mq3;G90/PG;L"*YhC
.`s+@-NF.nq$I-JVW\!_$s8ZE!QkBD#ml[g!s&^>nfRTJ"=PF>1^_A3!WW32q#CF%-g(I2>nmS7!8%8Q
-RUnL0``k!l?!,P1GL?--hShg!!(CA$3;ELl2Uo&HA3H\!!3H5O8/kY$"a&WmN2N^5'SBo#m(),&,?2+
#q+s;!^RJ'`rH/g-TLoV!A-t7FSp4_GX=&3`?t]e!7:NK!@4Q/!!=d4H5#ZGf`2'[$'4la!=<?)*s<]C
<-9/,$2+Z,!!!Q*!!*BRlMpu;&-KlO![f?Tq(Vn%9Dio'F9?GT/L\La!WW5Iq$I-JVX=Ed1T"ptp&NA<
!XT0oq#^X(Aa^]D+>@\K(YK,\#m(),&,?2+#q,-@!tZ@\"2b*?-RUnP1&Wg-/PGVU"EdI//1A=^!WW5I
q$I-JVXOQh,GJEL!!'n:!XT0oq#^X(AapiF+Vem$&`O,T#m(),&,?2+#q,3B"$mh6"2t9=!!4Mq3;G90
/PG\W"*PtT/&!A4!!(CA$3;ELo`,0r!!+"28d2s0!XT0oq#^X(Ab-uH+p)g]%dOGO#m(),&,?2+#q,9D
"(W;V!R:]9!!4Mq3;G90/PGbY"*P8;._I,1!!(CA$3DKM!;6Bq">--,"2+[9#ml[g!s&^>ocF;^!d?s>
oEiYH!WW32q#CF%-hIB?EZ#,5!9X=`-RUnL0``k!pN-L])DiqT-NX8Jd.n"L,c:;9":@qm0EJcc!XT0o
q#^X(AbR8L-Pq=m$N1:G#m(),&,?2+#q,EH!bE/PhZ2F3![f?Tq(Vn%9DNZ3G:PBs^aJq*!WW5Iq$I-J
VYL2o(2SmQ\,ZR:$'4la!=<?5*s3uIHRZH2!WW32q#CF%-hmZC9bRZn!7:cJ-RUnL0``k!qfDpb4"r,*
-gi>`!!(CA$3;ELqZ$^DKRF]G!!3H5O88q[!srQ9*s45hF!.mt!WW32q#CF%-i*fE3"Z;`!6,!?-RUnL
0``k!rH&-c:+dsC-fZQU!!(CA$3;ELr;ZpXT5P=L!!<3-$'4la!=<?9*s4K8CDjJc!WW32q#CF%-iF#I
!ZDRNq>e,-![f?Tq(W++96>;Y81Z1D-eKdJ!!(CA$3qiR!!"@C@LKmMo`,%"$'4la#74r`+<GW8'XA#H
!!!Q*!!NZV!!"bn!=T%8!!4Mq3;G93/Q">j/$C<%!!(CA$3_]Y*hlF7o`2W)!XT0oq#^d,D[:G`&(h3A
#m(),&,?2/#p3:h#m%X<p&G.A-SY?R!]2S]XX=/M!4Vcj"/<:l!r`2)!!3H5UA87#DmW"Bi<dd9!WW36
q$7$0('qeXlMpu6-SY?R!]2S]XX=/M!4VonrKdV\\3^8"!!3H5UA87#DmW"Blj:Q9!WW36q$7$0('r1c
huJ9~>

%%EndBinary
grestore
np
128.564 221.291 mo
142.844 221.251 li
142.844 220.251 li
128.564 220.291 li
cp
141.854 223.761 mo
147.844 220.741 li
141.834 217.761 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
173.624 221.251 mo
188.504 221.241 li
188.504 220.241 li
173.624 220.251 li
cp
187.504 223.741 mo
193.504 220.741 li
187.504 217.741 li
cp
f
/AWIJOU+DengXian-Identity-H findfont [12.02 0 0 -12.02 0 0 ]msf
233.704 217.421 mo
(o\333o\374o\372o\373)
[8.33987 2.70258 6.90964 0 ]xsh
/AWIJOU+DengXian-Identity-H findfont [12.02 0 0 -12.02 0 0 ]msf
258.244 217.421 mo
(o\300)sh
/AWIJOU+DengXian-Identity-H findfont [12.02 0 0 -12.02 0 0 ]msf
264.244 217.421 mo
(o\377o\370p\011o\370o\377)
[2.69247 6.17838 5.60135 6.17838 0 ]xsh
/AWIJOU+DengXian-Identity-H findfont [12 0 0 -12 0 0 ]msf
233.704 231.841 mo
(o\331o\370o\364p\007p\010p\005o\370)
[5.72406 6.16809 6.01208 3.81592 6.61192 4.06805 0 ]xsh
211.244 220.241 mo
221.454 220.241 li
221.454 221.241 li
211.244 221.241 li
cp
220.454 217.741 mo
226.454 220.741 li
220.454 223.741 li
cp
f
37.1042 156.001 mo
37.1042 221.331 li
88.9142 221.331 li
88.9142 220.331 li
37.6042 220.331 li
38.1042 220.831 li
38.1042 156.001 li
cp
87.9142 223.831 mo
93.9142 220.831 li
87.9142 217.831 li
cp
f
296.204 212.741 mo
306.584 212.741 li
306.584 213.741 li
296.204 213.741 li
cp
305.584 210.241 mo
311.584 213.241 li
305.584 216.241 li
cp
f
393.234 212.741 mo
404.234 212.871 li
404.224 213.871 li
393.214 213.741 li
cp
403.264 210.351 mo
409.224 213.421 li
403.194 216.351 li
cp
f
523.574 30.7011 mo
523.574 19.7311 532.474 10.8311 543.444 10.8311 cv
622.924 10.8311 li
633.894 10.8311 642.794 19.7311 642.794 30.7011 cv
642.794 255.321 li
642.794 266.291 633.894 275.191 622.924 275.191 cv
543.444 275.191 li
532.474 275.191 523.574 266.291 523.574 255.321 cv
cp
0 .520134 .218509 0 cmyk
ef
523.574 30.7011 mo
523.574 19.7311 532.474 10.8311 543.444 10.8311 cv
622.924 10.8311 li
633.894 10.8311 642.794 19.7311 642.794 30.7011 cv
642.794 255.321 li
642.794 266.291 633.894 275.191 622.924 275.191 cv
543.444 275.191 li
532.474 275.191 523.574 266.291 523.574 255.321 cv
cp
.177676 1 1 .154665 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28610 <001C60D8A8C9B7212E9A58E2DDA81747ED27CEEC2E27DE2A6B> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [18 0 0 -18 0 0 ]msf
555.604 29.7211 mo
(o\346o\370p\005p\011o\370p\005o\302)
[9.25214 9.25214 6.10211 8.38806 9.25208 6.10211 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/AWIJOU+DengXian-Identity-H findfont [18 0 0 -18 0 0 ]msf
531.124 51.3211 mo
(o\326o\370p\001p\007p\005o\364o\377o\263o\364o\372o\370p\001p\007)
[11.1599 9.25214 9.90002 5.72388 6.10211 9.01813 4.03198 4.80603 9.01813 10.3321 9.25214 9.90009 
0 ]xsh
537.374 127.391 mo
537.374 122.101 541.664 117.811 546.954 117.811 cv
619.414 117.811 li
624.704 117.811 628.994 122.101 628.994 127.391 cv
628.994 165.711 li
628.994 171.001 624.704 175.291 619.414 175.291 cv
546.954 175.291 li
541.664 175.291 537.374 171.001 537.374 165.711 cv
cp
.0320134 .161044 .0745556 0 cmyk
ef
537.374 127.391 mo
537.374 122.101 541.664 117.811 546.954 117.811 cv
619.414 117.811 li
624.704 117.811 628.994 122.101 628.994 127.391 cv
628.994 165.711 li
628.994 171.001 624.704 175.291 619.414 175.291 cv
546.954 175.291 li
541.664 175.291 537.374 171.001 537.374 165.711 cv
cp
.177676 1 1 .154665 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28636 <001C60D8A8C9B875744C21AD59FDCBB2749B2268B75FB3> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
549.364 142.821 mo
(o\334p\001p\007p\005o\364)
[3.453 7.68903 4.44556 4.73926 0 ]xsh
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
576.724 142.821 mo
(o\300)sh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28661 <001C60D8A8C9B7FD84953D118AA979FC6C631901144BB02E815F2AD38
C9304AAD5C69BEAA7F87F397A8B68E05A58AAC0AE7365E3D5B033BE3AC489C99
F1A84D26C4414FD9A1B105486BFEE67D38C7D79B5C30E9D2EE19AB4E806BF73B
81F502E722B67ECA466A631456E16BBDB15CD7175C1ACFB9877440AC4934B23E
96968CD65ADBB658B8EEADD2A5CF185829ED50D824179AEBDE1D69054AB218F2
E572E00B798960921609D88F11B3649413151> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
583.744 142.821 mo
(p\005p\002o\365p\002p\007)
[4.73926 8.01056 8.05255 8.0105 0 ]xsh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28642 <001C60D8A8C9B6E80D68E03F163684EC4CFF5B1EEF6DF5E6C0C3B3965
3F13C13CE1F9B1EFD11D8817083534665198FD8830755391BBD258AD06368414
8BCE694325CCB6582AB71438D34BF1DB6F8F84CBF3E96B7E66DF6A51951334CE
EC24B11F525BCDA1134AE76B7004670D3BA41F6CCF50687AA283B47E1717598E
6C196BFDE21BC56DB38BA07A7DBB4FEC1653BE0BEB641260387BEF1BA8FE1> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
571.684 159.621 mo
(o\342p\003p\007)
[10.5829 8.0246 0 ]xsh
479.864 91.7811 mo
583.664 91.7811 li
583.664 112.791 li
582.664 112.791 li
582.664 92.2811 li
583.164 92.7811 li
479.864 92.7811 li
cp
586.164 111.791 mo
583.164 117.791 li
580.164 111.791 li
cp
f
479.864 214.971 mo
583.664 214.971 li
583.664 180.261 li
582.664 180.261 li
582.664 214.471 li
583.164 213.971 li
479.864 213.971 li
cp
586.164 181.261 mo
583.164 175.261 li
580.164 181.261 li
cp
f
547.244 317.421 mo
546.684 317.421 546.234 317.761 546.234 318.171 cv
546.234 318.581 546.684 318.911 547.244 318.911 cv
547.794 318.911 548.244 318.581 548.244 318.171 cv
548.244 317.761 547.794 317.421 547.244 317.421 cv
cp
538.244 307.491 mo
538.244 309.701 li
538.244 310.751 541.674 312.201 547.244 312.201 cv
552.814 312.201 556.234 310.751 556.234 309.701 cv
556.234 307.491 li
554.284 308.501 551.054 309.141 547.244 309.141 cv
543.434 309.141 540.204 308.501 538.244 307.491 cv
cp
538.244 302.941 mo
538.244 305.141 li
538.244 306.191 541.674 307.651 547.244 307.651 cv
552.814 307.651 556.234 306.191 556.234 305.141 cv
556.234 302.941 li
554.284 303.951 551.054 304.581 547.244 304.581 cv
543.434 304.581 540.204 303.951 538.244 302.941 cv
cp
547.244 298.071 mo
541.674 298.071 538.244 299.531 538.244 300.581 cv
538.244 301.631 541.674 303.091 547.244 303.091 cv
552.814 303.091 556.234 301.631 556.234 300.581 cv
556.234 299.531 552.814 298.071 547.244 298.071 cv
cp
547.244 296.581 mo
553.514 296.581 558.244 298.301 558.244 300.581 cv
558.244 309.701 li
558.244 311.851 554.004 313.501 548.244 313.681 cv
548.244 316.071 li
549.084 316.301 549.754 316.791 550.054 317.421 cv
557.244 317.421 li
557.244 318.911 li
550.054 318.911 li
549.644 319.781 548.544 320.401 547.244 320.401 cv
545.944 320.401 544.834 319.781 544.424 318.911 cv
537.244 318.911 li
537.244 317.421 li
544.424 317.421 li
544.734 316.791 545.394 316.301 546.234 316.071 cv
546.234 313.681 li
540.484 313.501 536.244 311.851 536.244 309.701 cv
536.244 300.581 li
536.244 298.301 540.964 296.581 547.244 296.581 cv
cp
553.334 284.641 mo
553.424 284.641 li
559.424 284.681 564.594 288.431 564.954 292.991 cv
565.024 293.951 564.614 295.331 564.324 296.191 cv
568.344 296.901 571.244 299.571 571.244 302.731 cv
571.244 306.431 567.204 309.431 562.244 309.431 cv
561.784 309.431 561.324 309.411 560.874 309.361 cv
560.234 309.361 li
560.234 300.581 li
560.234 297.351 554.894 295.091 547.244 295.091 cv
539.594 295.091 534.244 297.351 534.244 300.581 cv
534.244 309.361 li
532.244 309.361 li
527.034 309.361 523.244 306.611 523.244 302.831 cv
523.244 300.211 525.244 297.821 528.304 296.691 cv
528.034 295.561 528.164 294.441 528.684 293.351 cv
529.844 290.881 532.734 289.131 536.064 288.891 cv
538.394 288.711 540.684 289.251 542.464 290.351 cv
544.164 286.971 548.484 284.641 553.334 284.641 cv
cp
0 .786068 .441321 0 cmyk
ef
[8.16 3.06 ] 0 dsh
297.864 340.531 mo
281.954 343.581 266.034 346.631 260.214 350.771 cv
254.384 354.911 252.414 360.551 262.904 365.371 cv
273.384 370.191 301.714 379.881 323.144 379.711 cv
344.564 379.541 368.014 371.941 391.454 364.341 cv
.177676 1 1 .154665 cmyk
@
126.074 336.151 mo
143.404 338.311 160.734 340.461 171.394 344.861 cv
182.054 349.261 174.944 357.031 190.054 362.541 cv
205.164 368.051 248.594 375.901 262.034 377.911 cv
@
567.204 344.611 mo
579.244 349.411 591.284 354.211 564.274 360.741 cv
537.274 367.271 428.454 379.181 405.194 383.791 cv
@
124.464 334.581 mo
512.784 303.421 li
512.704 302.421 li
124.384 333.591 li
cp
511.984 305.991 mo
517.724 302.521 li
511.504 300.011 li
cp
0 1 1 .00103761 cmyk
f
345.114 334.581 mo
515.564 310.201 li
515.424 309.211 li
344.974 333.591 li
cp
514.924 312.821 mo
520.444 309.001 li
514.074 306.881 li
cp
f
333.214 342.881 mo
332.654 342.881 332.204 343.221 332.204 343.641 cv
332.204 343.851 332.314 344.041 332.504 344.181 cv
332.684 344.311 332.944 344.401 333.214 344.401 cv
333.774 344.401 334.234 344.061 334.234 343.641 cv
334.234 343.431 334.124 343.241 333.934 343.101 cv
333.754 342.961 333.494 342.881 333.214 342.881 cv
cp
313.054 342.881 mo
312.784 342.881 312.524 342.961 312.334 343.101 cv
312.154 343.241 312.044 343.431 312.044 343.641 cv
312.044 344.061 312.494 344.401 313.054 344.401 cv
313.334 344.401 313.594 344.311 313.784 344.181 cv
313.954 344.041 314.074 343.851 314.074 343.641 cv
314.074 343.221 313.614 342.881 313.054 342.881 cv
cp
326.334 337.861 mo
326.094 338.111 325.804 338.321 325.474 338.511 cv
331.264 342.831 li
331.464 342.561 331.764 342.331 332.124 342.181 cv
cp
319.944 337.861 mo
314.144 342.181 li
314.504 342.331 314.804 342.561 315.014 342.831 cv
320.804 338.511 li
320.474 338.321 320.184 338.111 319.944 337.861 cv
cp
333.214 336.881 mo
338.214 336.881 342.284 339.911 342.284 343.641 cv
342.284 347.371 338.214 350.401 333.214 350.401 cv
328.214 350.401 324.154 347.371 324.154 343.641 cv
324.154 342.871 324.324 342.121 324.664 341.401 cv
324.774 341.171 325.124 341.041 325.444 341.131 cv
325.764 341.211 325.924 341.471 325.814 341.711 cv
325.524 342.331 325.374 342.981 325.374 343.641 cv
325.374 346.861 328.894 349.491 333.214 349.491 cv
337.544 349.491 341.064 346.861 341.064 343.641 cv
341.064 340.421 337.544 337.791 333.214 337.791 cv
332.334 337.791 331.454 337.901 330.624 338.121 cv
330.304 338.201 329.964 338.081 329.854 337.841 cv
329.734 337.601 329.904 337.341 330.224 337.261 cv
331.184 337.011 332.194 336.881 333.214 336.881 cv
cp
313.054 336.881 mo
314.084 336.881 315.084 337.011 316.054 337.261 cv
316.374 337.341 316.534 337.601 316.424 337.841 cv
316.314 338.081 315.964 338.201 315.654 338.121 cv
314.814 337.901 313.944 337.791 313.054 337.791 cv
308.734 337.791 305.214 340.421 305.214 343.641 cv
305.214 346.861 308.734 349.491 313.054 349.491 cv
317.384 349.491 320.894 346.861 320.894 343.641 cv
320.894 342.981 320.754 342.331 320.464 341.711 cv
320.354 341.471 320.514 341.211 320.834 341.131 cv
321.154 341.041 321.494 341.171 321.614 341.401 cv
321.954 342.121 322.124 342.871 322.124 343.641 cv
322.124 347.371 318.054 350.401 313.054 350.401 cv
308.054 350.401 303.994 347.371 303.994 343.641 cv
303.994 339.911 308.054 336.881 313.054 336.881 cv
cp
323.134 334.081 mo
321.624 334.081 320.394 334.991 320.394 336.121 cv
320.394 337.251 321.624 338.161 323.134 338.161 cv
324.654 338.161 325.874 337.251 325.874 336.121 cv
325.874 334.991 324.654 334.081 323.134 334.081 cv
cp
331.264 329.421 mo
325.474 333.741 li
325.804 333.921 326.094 334.131 326.334 334.381 cv
332.124 330.061 li
331.764 329.911 331.464 329.681 331.264 329.421 cv
cp
315.014 329.421 mo
314.804 329.681 314.504 329.911 314.144 330.061 cv
319.944 334.381 li
320.184 334.131 320.474 333.921 320.804 333.741 cv
cp
333.214 327.841 mo
332.944 327.841 332.684 327.931 332.494 328.071 cv
332.314 328.201 332.204 328.391 332.204 328.601 cv
332.204 329.021 332.654 329.361 333.214 329.361 cv
333.494 329.361 333.754 329.271 333.944 329.141 cv
334.124 329.001 334.234 328.811 334.234 328.601 cv
334.234 328.181 333.774 327.841 333.214 327.841 cv
cp
313.054 327.841 mo
312.494 327.841 312.044 328.181 312.044 328.601 cv
312.044 328.811 312.154 329.001 312.344 329.141 cv
312.524 329.271 312.784 329.361 313.054 329.361 cv
313.614 329.361 314.074 329.021 314.074 328.601 cv
314.074 328.391 313.964 328.201 313.774 328.061 cv
313.594 327.931 313.334 327.841 313.054 327.841 cv
cp
316.874 325.111 mo
317.114 324.941 317.494 324.941 317.734 325.111 cv
317.974 325.291 317.974 325.581 317.734 325.761 cv
315.014 327.791 li
315.134 327.951 315.214 328.131 315.264 328.311 cv
321.954 333.301 li
322.324 333.221 322.724 333.171 323.134 333.171 cv
323.554 333.171 323.944 333.221 324.324 333.301 cv
331.014 328.311 li
331.064 328.131 331.144 327.951 331.264 327.791 cv
328.544 325.761 li
328.304 325.581 328.304 325.291 328.544 325.111 cv
328.784 324.941 329.164 324.941 329.404 325.111 cv
332.124 327.141 li
332.454 327.011 332.824 326.931 333.214 326.931 cv
334.454 326.931 335.454 327.681 335.454 328.601 cv
335.454 328.901 335.354 329.171 335.174 329.421 cv
337.894 331.451 li
338.134 331.631 338.134 331.911 337.894 332.091 cv
337.784 332.181 337.624 332.221 337.464 332.221 cv
337.314 332.221 337.154 332.181 337.034 332.091 cv
334.314 330.061 li
334.094 330.151 333.854 330.211 333.604 330.251 cv
326.914 335.231 li
327.034 335.521 327.104 335.811 327.104 336.121 cv
327.104 336.431 327.034 336.731 326.914 337.011 cv
333.604 341.991 li
333.854 342.021 334.094 342.091 334.314 342.181 cv
337.034 340.151 li
337.274 339.971 337.654 339.971 337.894 340.151 cv
338.134 340.331 338.134 340.621 337.894 340.791 cv
335.174 342.831 li
335.354 343.071 335.454 343.351 335.454 343.641 cv
335.454 344.561 334.454 345.311 333.214 345.311 cv
332.824 345.311 332.454 345.231 332.124 345.101 cv
329.404 347.131 li
329.284 347.221 329.124 347.261 328.974 347.261 cv
328.814 347.261 328.654 347.221 328.544 347.131 cv
328.304 346.951 328.304 346.661 328.544 346.491 cv
331.264 344.451 li
331.144 344.291 331.054 344.121 331.014 343.931 cv
324.324 338.941 li
323.944 339.031 323.554 339.081 323.134 339.081 cv
322.724 339.081 322.324 339.031 321.954 338.941 cv
315.264 343.931 li
315.214 344.121 315.134 344.291 315.014 344.451 cv
317.734 346.491 li
317.974 346.661 317.974 346.951 317.734 347.131 cv
317.614 347.221 317.464 347.261 317.304 347.261 cv
317.144 347.261 316.994 347.221 316.874 347.131 cv
314.144 345.101 li
313.824 345.231 313.454 345.311 313.054 345.311 cv
311.824 345.311 310.814 344.561 310.814 343.641 cv
310.814 343.351 310.924 343.071 311.104 342.831 cv
308.384 340.791 li
308.144 340.621 308.144 340.331 308.384 340.151 cv
308.624 339.971 309.004 339.971 309.244 340.151 cv
311.964 342.181 li
312.184 342.091 312.424 342.021 312.674 341.991 cv
319.364 337.011 li
319.244 336.731 319.174 336.431 319.174 336.121 cv
319.174 335.811 319.244 335.521 319.364 335.231 cv
312.674 330.251 li
312.424 330.211 312.184 330.151 311.964 330.061 cv
309.244 332.091 li
309.124 332.181 308.964 332.221 308.804 332.221 cv
308.654 332.221 308.494 332.181 308.384 332.091 cv
308.144 331.911 308.144 331.631 308.384 331.451 cv
311.104 329.421 li
310.924 329.171 310.814 328.901 310.814 328.601 cv
310.814 327.681 311.824 326.931 313.054 326.931 cv
313.454 326.931 313.824 327.011 314.144 327.141 cv
cp
313.004 321.841 mo
318.004 321.841 322.074 324.871 322.074 328.601 cv
322.074 329.361 321.904 330.101 321.574 330.801 cv
321.464 331.051 321.114 331.171 320.804 331.091 cv
320.474 331.001 320.314 330.751 320.424 330.511 cv
320.704 329.901 320.854 329.261 320.854 328.601 cv
320.854 325.381 317.334 322.751 313.004 322.751 cv
308.684 322.751 305.164 325.381 305.164 328.601 cv
305.164 331.821 308.684 334.451 313.004 334.451 cv
313.914 334.451 314.794 334.331 315.634 334.111 cv
315.954 334.031 316.294 334.151 316.414 334.391 cv
316.524 334.631 316.364 334.891 316.044 334.971 cv
315.074 335.231 314.054 335.361 313.004 335.361 cv
308.004 335.361 303.944 332.331 303.944 328.601 cv
303.944 324.871 308.004 321.841 313.004 321.841 cv
cp
333.214 321.841 mo
338.214 321.841 342.284 324.871 342.284 328.601 cv
342.284 332.331 338.214 335.361 333.214 335.361 cv
332.194 335.361 331.184 335.231 330.224 334.981 cv
329.904 334.901 329.734 334.641 329.854 334.401 cv
329.964 334.161 330.304 334.041 330.624 334.121 cv
331.454 334.341 332.334 334.451 333.214 334.451 cv
337.544 334.451 341.064 331.821 341.064 328.601 cv
341.064 325.381 337.544 322.751 333.214 322.751 cv
328.894 322.751 325.374 325.381 325.374 328.601 cv
325.374 329.261 325.524 329.911 325.814 330.531 cv
325.924 330.771 325.764 331.031 325.444 331.111 cv
325.124 331.201 324.774 331.071 324.664 330.841 cv
324.324 330.121 324.154 329.361 324.154 328.601 cv
324.154 324.871 328.214 321.841 333.214 321.841 cv
cp
.9234 .575555 0 0 cmyk
ef
553.894 342.881 mo
553.334 342.881 552.884 343.221 552.884 343.641 cv
552.884 343.851 552.994 344.041 553.184 344.181 cv
553.364 344.311 553.624 344.401 553.894 344.401 cv
554.454 344.401 554.914 344.061 554.914 343.641 cv
554.914 343.431 554.804 343.241 554.614 343.101 cv
554.434 342.961 554.174 342.881 553.894 342.881 cv
cp
533.734 342.881 mo
533.464 342.881 533.204 342.961 533.014 343.101 cv
532.834 343.241 532.724 343.431 532.724 343.641 cv
532.724 344.061 533.174 344.401 533.734 344.401 cv
534.014 344.401 534.274 344.311 534.464 344.181 cv
534.634 344.041 534.754 343.851 534.754 343.641 cv
534.754 343.221 534.294 342.881 533.734 342.881 cv
cp
547.014 337.861 mo
546.774 338.111 546.484 338.321 546.154 338.511 cv
551.944 342.831 li
552.144 342.561 552.444 342.331 552.804 342.181 cv
cp
540.624 337.861 mo
534.824 342.181 li
535.184 342.331 535.484 342.561 535.694 342.831 cv
541.484 338.511 li
541.154 338.321 540.864 338.111 540.624 337.861 cv
cp
553.894 336.881 mo
558.894 336.881 562.964 339.911 562.964 343.641 cv
562.964 347.371 558.894 350.401 553.894 350.401 cv
548.894 350.401 544.834 347.371 544.834 343.641 cv
544.834 342.871 545.004 342.121 545.344 341.401 cv
545.454 341.171 545.804 341.041 546.124 341.131 cv
546.444 341.211 546.604 341.471 546.494 341.711 cv
546.204 342.331 546.054 342.981 546.054 343.641 cv
546.054 346.861 549.574 349.491 553.894 349.491 cv
558.224 349.491 561.744 346.861 561.744 343.641 cv
561.744 340.421 558.224 337.791 553.894 337.791 cv
553.014 337.791 552.134 337.901 551.304 338.121 cv
550.984 338.201 550.644 338.081 550.534 337.841 cv
550.414 337.601 550.584 337.341 550.904 337.261 cv
551.864 337.011 552.874 336.881 553.894 336.881 cv
cp
533.734 336.881 mo
534.764 336.881 535.764 337.011 536.734 337.261 cv
537.054 337.341 537.214 337.601 537.104 337.841 cv
536.994 338.081 536.644 338.201 536.334 338.121 cv
535.494 337.901 534.624 337.791 533.734 337.791 cv
529.414 337.791 525.894 340.421 525.894 343.641 cv
525.894 346.861 529.414 349.491 533.734 349.491 cv
538.064 349.491 541.574 346.861 541.574 343.641 cv
541.574 342.981 541.434 342.331 541.134 341.711 cv
541.034 341.471 541.194 341.211 541.514 341.131 cv
541.834 341.041 542.174 341.171 542.294 341.401 cv
542.634 342.121 542.804 342.871 542.804 343.641 cv
542.804 347.371 538.734 350.401 533.734 350.401 cv
528.734 350.401 524.674 347.371 524.674 343.641 cv
524.674 339.911 528.734 336.881 533.734 336.881 cv
cp
543.814 334.081 mo
542.304 334.081 541.074 334.991 541.074 336.121 cv
541.074 337.251 542.304 338.161 543.814 338.161 cv
545.334 338.161 546.554 337.251 546.554 336.121 cv
546.554 334.991 545.334 334.081 543.814 334.081 cv
cp
551.944 329.421 mo
546.154 333.741 li
546.484 333.921 546.774 334.131 547.014 334.381 cv
552.804 330.061 li
552.444 329.911 552.144 329.681 551.944 329.421 cv
cp
535.694 329.421 mo
535.484 329.681 535.184 329.911 534.824 330.061 cv
540.624 334.381 li
540.864 334.131 541.154 333.921 541.484 333.741 cv
cp
553.894 327.841 mo
553.624 327.841 553.364 327.931 553.174 328.071 cv
552.994 328.201 552.884 328.391 552.884 328.601 cv
552.884 329.021 553.334 329.361 553.894 329.361 cv
554.174 329.361 554.434 329.271 554.624 329.141 cv
554.804 329.001 554.914 328.811 554.914 328.601 cv
554.914 328.181 554.454 327.841 553.894 327.841 cv
cp
533.734 327.841 mo
533.174 327.841 532.724 328.181 532.724 328.601 cv
532.724 328.811 532.834 329.001 533.024 329.141 cv
533.204 329.271 533.464 329.361 533.734 329.361 cv
534.294 329.361 534.754 329.021 534.754 328.601 cv
534.754 328.391 534.644 328.201 534.454 328.061 cv
534.274 327.931 534.014 327.841 533.734 327.841 cv
cp
537.554 325.111 mo
537.794 324.941 538.174 324.941 538.414 325.111 cv
538.654 325.291 538.654 325.581 538.414 325.761 cv
535.694 327.791 li
535.814 327.951 535.894 328.131 535.944 328.311 cv
542.634 333.301 li
543.004 333.221 543.404 333.171 543.814 333.171 cv
544.234 333.171 544.624 333.221 545.004 333.301 cv
551.694 328.311 li
551.744 328.131 551.824 327.951 551.944 327.791 cv
549.224 325.761 li
548.984 325.581 548.984 325.291 549.224 325.111 cv
549.464 324.941 549.844 324.941 550.084 325.111 cv
552.804 327.141 li
553.134 327.011 553.504 326.931 553.894 326.931 cv
555.134 326.931 556.134 327.681 556.134 328.601 cv
556.134 328.901 556.034 329.171 555.854 329.421 cv
558.574 331.451 li
558.814 331.631 558.814 331.911 558.574 332.091 cv
558.464 332.181 558.304 332.221 558.144 332.221 cv
557.994 332.221 557.834 332.181 557.714 332.091 cv
554.994 330.061 li
554.774 330.151 554.534 330.211 554.284 330.251 cv
547.594 335.231 li
547.714 335.521 547.784 335.811 547.784 336.121 cv
547.784 336.431 547.714 336.731 547.594 337.011 cv
554.284 341.991 li
554.534 342.021 554.774 342.091 554.994 342.181 cv
557.714 340.151 li
557.954 339.971 558.334 339.971 558.574 340.151 cv
558.814 340.331 558.814 340.621 558.574 340.791 cv
555.854 342.831 li
556.034 343.071 556.134 343.351 556.134 343.641 cv
556.134 344.561 555.134 345.311 553.894 345.311 cv
553.504 345.311 553.134 345.231 552.804 345.101 cv
550.084 347.131 li
549.964 347.221 549.804 347.261 549.654 347.261 cv
549.494 347.261 549.334 347.221 549.224 347.131 cv
548.984 346.951 548.984 346.661 549.224 346.491 cv
551.944 344.451 li
551.824 344.291 551.734 344.121 551.694 343.931 cv
545.004 338.941 li
544.624 339.031 544.234 339.081 543.814 339.081 cv
543.404 339.081 543.004 339.031 542.634 338.941 cv
535.944 343.931 li
535.894 344.121 535.814 344.291 535.694 344.451 cv
538.414 346.491 li
538.654 346.661 538.654 346.951 538.414 347.131 cv
538.294 347.221 538.144 347.261 537.984 347.261 cv
537.824 347.261 537.674 347.221 537.554 347.131 cv
534.824 345.101 li
534.504 345.231 534.134 345.311 533.734 345.311 cv
532.504 345.311 531.494 344.561 531.494 343.641 cv
531.494 343.351 531.604 343.071 531.784 342.831 cv
529.064 340.791 li
528.824 340.621 528.824 340.331 529.064 340.151 cv
529.304 339.971 529.684 339.971 529.924 340.151 cv
532.644 342.181 li
532.864 342.091 533.104 342.021 533.354 341.991 cv
540.044 337.011 li
539.924 336.731 539.854 336.431 539.854 336.121 cv
539.854 335.811 539.924 335.521 540.044 335.231 cv
533.354 330.251 li
533.104 330.211 532.864 330.151 532.644 330.061 cv
529.924 332.091 li
529.804 332.181 529.644 332.221 529.484 332.221 cv
529.334 332.221 529.174 332.181 529.064 332.091 cv
528.824 331.911 528.824 331.631 529.064 331.451 cv
531.784 329.421 li
531.604 329.171 531.494 328.901 531.494 328.601 cv
531.494 327.681 532.504 326.931 533.734 326.931 cv
534.134 326.931 534.504 327.011 534.824 327.141 cv
cp
533.684 321.841 mo
538.684 321.841 542.754 324.871 542.754 328.601 cv
542.754 329.361 542.584 330.101 542.254 330.801 cv
542.144 331.051 541.794 331.171 541.484 331.091 cv
541.154 331.001 540.994 330.751 541.104 330.511 cv
541.384 329.901 541.534 329.261 541.534 328.601 cv
541.534 325.381 538.014 322.751 533.684 322.751 cv
529.364 322.751 525.844 325.381 525.844 328.601 cv
525.844 331.821 529.364 334.451 533.684 334.451 cv
534.594 334.451 535.474 334.331 536.314 334.111 cv
536.634 334.031 536.974 334.151 537.094 334.391 cv
537.204 334.631 537.044 334.891 536.724 334.971 cv
535.754 335.231 534.734 335.361 533.684 335.361 cv
528.684 335.361 524.624 332.331 524.624 328.601 cv
524.624 324.871 528.684 321.841 533.684 321.841 cv
cp
553.894 321.841 mo
558.894 321.841 562.964 324.871 562.964 328.601 cv
562.964 332.331 558.894 335.361 553.894 335.361 cv
552.874 335.361 551.864 335.231 550.904 334.981 cv
550.584 334.901 550.414 334.641 550.534 334.401 cv
550.644 334.161 550.984 334.041 551.304 334.121 cv
552.134 334.341 553.014 334.451 553.894 334.451 cv
558.224 334.451 561.744 331.821 561.744 328.601 cv
561.744 325.381 558.224 322.751 553.894 322.751 cv
549.574 322.751 546.054 325.381 546.054 328.601 cv
546.054 329.261 546.204 329.911 546.494 330.531 cv
546.604 330.771 546.444 331.031 546.124 331.111 cv
545.804 331.201 545.454 331.071 545.344 330.841 cv
545.004 330.121 544.834 329.361 544.834 328.601 cv
544.834 324.871 548.894 321.841 553.894 321.841 cv
cp
0 1 1 .00103761 cmyk
ef
113.254 342.881 mo
112.694 342.881 112.244 343.221 112.244 343.641 cv
112.244 343.851 112.354 344.041 112.544 344.181 cv
112.724 344.311 112.984 344.401 113.254 344.401 cv
113.814 344.401 114.274 344.061 114.274 343.641 cv
114.274 343.431 114.164 343.241 113.974 343.101 cv
113.794 342.961 113.534 342.881 113.254 342.881 cv
cp
93.0942 342.881 mo
92.8242 342.881 92.5642 342.961 92.3742 343.101 cv
92.1942 343.241 92.0842 343.431 92.0842 343.641 cv
92.0842 344.061 92.5342 344.401 93.0942 344.401 cv
93.3742 344.401 93.6342 344.311 93.8242 344.181 cv
93.9942 344.041 94.1142 343.851 94.1142 343.641 cv
94.1142 343.221 93.6542 342.881 93.0942 342.881 cv
cp
106.374 337.861 mo
106.134 338.111 105.844 338.321 105.514 338.511 cv
111.304 342.831 li
111.504 342.561 111.804 342.331 112.164 342.181 cv
cp
99.9842 337.861 mo
94.1842 342.181 li
94.5442 342.331 94.8442 342.561 95.0542 342.831 cv
100.844 338.511 li
100.514 338.321 100.224 338.111 99.9842 337.861 cv
cp
113.254 336.881 mo
118.254 336.881 122.324 339.911 122.324 343.641 cv
122.324 347.371 118.254 350.401 113.254 350.401 cv
108.254 350.401 104.194 347.371 104.194 343.641 cv
104.194 342.871 104.364 342.121 104.704 341.401 cv
104.814 341.171 105.164 341.041 105.484 341.131 cv
105.804 341.211 105.964 341.471 105.854 341.711 cv
105.564 342.331 105.414 342.981 105.414 343.641 cv
105.414 346.861 108.934 349.491 113.254 349.491 cv
117.584 349.491 121.104 346.861 121.104 343.641 cv
121.104 340.421 117.584 337.791 113.254 337.791 cv
112.374 337.791 111.494 337.901 110.664 338.121 cv
110.344 338.201 110.004 338.081 109.894 337.841 cv
109.774 337.601 109.944 337.341 110.264 337.261 cv
111.224 337.011 112.234 336.881 113.254 336.881 cv
cp
93.0942 336.881 mo
94.1242 336.881 95.1242 337.011 96.0942 337.261 cv
96.4142 337.341 96.5742 337.601 96.4642 337.841 cv
96.3542 338.081 96.0042 338.201 95.6942 338.121 cv
94.8542 337.901 93.9842 337.791 93.0942 337.791 cv
88.7742 337.791 85.2542 340.421 85.2542 343.641 cv
85.2542 346.861 88.7742 349.491 93.0942 349.491 cv
97.4242 349.491 100.934 346.861 100.934 343.641 cv
100.934 342.981 100.794 342.331 100.504 341.711 cv
100.394 341.471 100.554 341.211 100.874 341.131 cv
101.194 341.041 101.534 341.171 101.654 341.401 cv
101.994 342.121 102.164 342.871 102.164 343.641 cv
102.164 347.371 98.0942 350.401 93.0942 350.401 cv
88.0942 350.401 84.0342 347.371 84.0342 343.641 cv
84.0342 339.911 88.0942 336.881 93.0942 336.881 cv
cp
103.174 334.081 mo
101.664 334.081 100.434 334.991 100.434 336.121 cv
100.434 337.251 101.664 338.161 103.174 338.161 cv
104.694 338.161 105.914 337.251 105.914 336.121 cv
105.914 334.991 104.694 334.081 103.174 334.081 cv
cp
111.304 329.421 mo
105.514 333.741 li
105.844 333.921 106.134 334.131 106.374 334.381 cv
112.164 330.061 li
111.804 329.911 111.504 329.681 111.304 329.421 cv
cp
95.0542 329.421 mo
94.8442 329.681 94.5442 329.911 94.1842 330.061 cv
99.9842 334.381 li
100.224 334.131 100.514 333.921 100.844 333.741 cv
cp
113.254 327.841 mo
112.984 327.841 112.724 327.931 112.534 328.071 cv
112.354 328.201 112.244 328.391 112.244 328.601 cv
112.244 329.021 112.694 329.361 113.254 329.361 cv
113.534 329.361 113.794 329.271 113.984 329.141 cv
114.164 329.001 114.274 328.811 114.274 328.601 cv
114.274 328.181 113.814 327.841 113.254 327.841 cv
cp
93.0942 327.841 mo
92.5342 327.841 92.0842 328.181 92.0842 328.601 cv
92.0842 328.811 92.1942 329.001 92.3842 329.141 cv
92.5642 329.271 92.8242 329.361 93.0942 329.361 cv
93.6542 329.361 94.1142 329.021 94.1142 328.601 cv
94.1142 328.391 94.0042 328.201 93.8142 328.061 cv
93.6342 327.931 93.3742 327.841 93.0942 327.841 cv
cp
96.9142 325.111 mo
97.1542 324.941 97.5342 324.941 97.7742 325.111 cv
98.0142 325.291 98.0142 325.581 97.7742 325.761 cv
95.0542 327.791 li
95.1742 327.951 95.2542 328.131 95.3042 328.311 cv
101.994 333.301 li
102.364 333.221 102.764 333.171 103.174 333.171 cv
103.594 333.171 103.984 333.221 104.364 333.301 cv
111.054 328.311 li
111.104 328.131 111.184 327.951 111.304 327.791 cv
108.584 325.761 li
108.344 325.581 108.344 325.291 108.584 325.111 cv
108.824 324.941 109.204 324.941 109.444 325.111 cv
112.164 327.141 li
112.494 327.011 112.864 326.931 113.254 326.931 cv
114.494 326.931 115.494 327.681 115.494 328.601 cv
115.494 328.901 115.394 329.171 115.214 329.421 cv
117.934 331.451 li
118.174 331.631 118.174 331.911 117.934 332.091 cv
117.824 332.181 117.664 332.221 117.504 332.221 cv
117.354 332.221 117.194 332.181 117.074 332.091 cv
114.354 330.061 li
114.134 330.151 113.894 330.211 113.644 330.251 cv
106.954 335.231 li
107.074 335.521 107.144 335.811 107.144 336.121 cv
107.144 336.431 107.074 336.731 106.954 337.011 cv
113.644 341.991 li
113.894 342.021 114.134 342.091 114.354 342.181 cv
117.074 340.151 li
117.314 339.971 117.694 339.971 117.934 340.151 cv
118.174 340.331 118.174 340.621 117.934 340.791 cv
115.214 342.831 li
115.394 343.071 115.494 343.351 115.494 343.641 cv
115.494 344.561 114.494 345.311 113.254 345.311 cv
112.864 345.311 112.494 345.231 112.164 345.101 cv
109.444 347.131 li
109.324 347.221 109.164 347.261 109.014 347.261 cv
108.854 347.261 108.694 347.221 108.584 347.131 cv
108.344 346.951 108.344 346.661 108.584 346.491 cv
111.304 344.451 li
111.184 344.291 111.094 344.121 111.054 343.931 cv
104.364 338.941 li
103.984 339.031 103.594 339.081 103.174 339.081 cv
102.764 339.081 102.364 339.031 101.994 338.941 cv
95.3042 343.931 li
95.2542 344.121 95.1742 344.291 95.0542 344.451 cv
97.7742 346.491 li
98.0142 346.661 98.0142 346.951 97.7742 347.131 cv
97.6542 347.221 97.5042 347.261 97.3442 347.261 cv
97.1842 347.261 97.0342 347.221 96.9142 347.131 cv
94.1842 345.101 li
93.8642 345.231 93.4942 345.311 93.0942 345.311 cv
91.8642 345.311 90.8542 344.561 90.8542 343.641 cv
90.8542 343.351 90.9642 343.071 91.1442 342.831 cv
88.4242 340.791 li
88.1842 340.621 88.1842 340.331 88.4242 340.151 cv
88.6642 339.971 89.0442 339.971 89.2842 340.151 cv
92.0042 342.181 li
92.2242 342.091 92.4642 342.021 92.7142 341.991 cv
99.4042 337.011 li
99.2842 336.731 99.2142 336.431 99.2142 336.121 cv
99.2142 335.811 99.2842 335.521 99.4042 335.231 cv
92.7142 330.251 li
92.4642 330.211 92.2242 330.151 92.0042 330.061 cv
89.2842 332.091 li
89.1642 332.181 89.0042 332.221 88.8442 332.221 cv
88.6942 332.221 88.5342 332.181 88.4242 332.091 cv
88.1842 331.911 88.1842 331.631 88.4242 331.451 cv
91.1442 329.421 li
90.9642 329.171 90.8542 328.901 90.8542 328.601 cv
90.8542 327.681 91.8642 326.931 93.0942 326.931 cv
93.4942 326.931 93.8642 327.011 94.1842 327.141 cv
cp
93.0442 321.841 mo
98.0442 321.841 102.114 324.871 102.114 328.601 cv
102.114 329.361 101.944 330.101 101.614 330.801 cv
101.504 331.051 101.154 331.171 100.844 331.091 cv
100.514 331.001 100.354 330.751 100.464 330.511 cv
100.744 329.901 100.894 329.261 100.894 328.601 cv
100.894 325.381 97.3742 322.751 93.0442 322.751 cv
88.7242 322.751 85.2042 325.381 85.2042 328.601 cv
85.2042 331.821 88.7242 334.451 93.0442 334.451 cv
93.9542 334.451 94.8342 334.331 95.6742 334.111 cv
95.9942 334.031 96.3342 334.151 96.4542 334.391 cv
96.5642 334.631 96.4042 334.891 96.0842 334.971 cv
95.1142 335.231 94.0942 335.361 93.0442 335.361 cv
88.0442 335.361 83.9842 332.331 83.9842 328.601 cv
83.9842 324.871 88.0442 321.841 93.0442 321.841 cv
cp
113.254 321.841 mo
118.254 321.841 122.324 324.871 122.324 328.601 cv
122.324 332.331 118.254 335.361 113.254 335.361 cv
112.234 335.361 111.224 335.231 110.264 334.981 cv
109.944 334.901 109.774 334.641 109.894 334.401 cv
110.004 334.161 110.344 334.041 110.664 334.121 cv
111.494 334.341 112.374 334.451 113.254 334.451 cv
117.584 334.451 121.104 331.821 121.104 328.601 cv
121.104 325.381 117.584 322.751 113.254 322.751 cv
108.934 322.751 105.414 325.381 105.414 328.601 cv
105.414 329.261 105.564 329.911 105.854 330.531 cv
105.964 330.771 105.804 331.031 105.484 331.111 cv
105.164 331.201 104.814 331.071 104.704 330.841 cv
104.364 330.121 104.194 329.361 104.194 328.601 cv
104.194 324.871 108.254 321.841 113.254 321.841 cv
cp
.9234 .575555 0 0 cmyk
ef
82.5842 296.851 mo
83.7942 296.851 li
84.1142 296.851 84.3942 297.051 84.3942 297.291 cv
84.3942 298.771 li
86.3742 298.771 li
86.7042 298.771 86.9742 298.971 86.9742 299.221 cv
86.9742 300.111 li
86.9742 300.361 86.7042 300.561 86.3742 300.561 cv
84.3942 300.561 li
84.3942 302.031 li
84.3942 302.281 84.1142 302.481 83.7942 302.481 cv
82.5842 302.481 li
82.2542 302.481 81.9842 302.281 81.9842 302.031 cv
81.9842 300.561 li
80.0042 300.561 li
79.6742 300.561 79.4042 300.361 79.4042 300.111 cv
79.4042 299.221 li
79.4042 298.971 79.6742 298.771 80.0042 298.771 cv
81.9842 298.771 li
81.9842 297.291 li
81.9842 297.051 82.2542 296.851 82.5842 296.851 cv
cp
83.1842 295.001 mo
81.4942 295.001 79.9142 295.491 78.7142 296.371 cv
76.2542 298.211 76.2542 301.201 78.7142 303.031 cv
79.9142 303.921 81.4942 304.411 83.1842 304.411 cv
84.8742 304.411 86.4642 303.921 87.6642 303.031 cv
90.1242 301.201 90.1242 298.211 87.6642 296.371 cv
86.4642 295.491 84.8742 295.001 83.1842 295.001 cv
cp
83.1842 292.741 mo
85.6842 292.741 88.0342 293.461 89.8042 294.781 cv
92.7742 296.991 93.3242 300.341 91.4442 302.971 cv
99.6342 309.071 li
100.364 309.621 100.364 310.511 99.6342 311.061 cv
98.4442 311.951 li
98.0842 312.211 97.6042 312.361 97.1042 312.361 cv
96.5942 312.361 96.1242 312.211 95.7642 311.951 cv
87.5842 305.851 li
86.2442 306.391 84.7442 306.671 83.1842 306.671 cv
80.6942 306.671 78.3442 305.941 76.5742 304.631 cv
72.9342 301.911 72.9342 297.491 76.5742 294.781 cv
78.3442 293.461 80.6942 292.741 83.1842 292.741 cv
cp
1 /0 /CSD get_res sepcs
1 sep
ef
105.244 318.291 mo
105.244 271.341 li
104.244 271.341 li
104.244 318.291 li
cp
107.744 272.341 mo
104.744 266.341 li
101.744 272.341 li
cp
f
588.864 295.951 mo
590.074 295.951 li
590.394 295.951 590.674 296.151 590.674 296.391 cv
590.674 297.871 li
592.654 297.871 li
592.984 297.871 593.254 298.071 593.254 298.321 cv
593.254 299.211 li
593.254 299.461 592.984 299.661 592.654 299.661 cv
590.674 299.661 li
590.674 301.131 li
590.674 301.381 590.394 301.581 590.074 301.581 cv
588.864 301.581 li
588.534 301.581 588.264 301.381 588.264 301.131 cv
588.264 299.661 li
586.284 299.661 li
585.954 299.661 585.684 299.461 585.684 299.211 cv
585.684 298.321 li
585.684 298.071 585.954 297.871 586.284 297.871 cv
588.264 297.871 li
588.264 296.391 li
588.264 296.151 588.534 295.951 588.864 295.951 cv
cp
589.464 294.101 mo
587.774 294.101 586.194 294.591 584.994 295.471 cv
582.534 297.311 582.534 300.301 584.994 302.131 cv
586.194 303.021 587.774 303.511 589.464 303.511 cv
591.154 303.511 592.744 303.021 593.944 302.131 cv
596.404 300.301 596.404 297.311 593.944 295.471 cv
592.744 294.591 591.154 294.101 589.464 294.101 cv
cp
589.464 291.841 mo
591.964 291.841 594.314 292.561 596.084 293.881 cv
599.054 296.091 599.604 299.441 597.724 302.071 cv
605.914 308.171 li
606.644 308.721 606.644 309.611 605.914 310.161 cv
604.724 311.051 li
604.364 311.311 603.884 311.461 603.384 311.461 cv
602.874 311.461 602.404 311.311 602.044 311.051 cv
593.864 304.951 li
592.524 305.491 591.024 305.771 589.464 305.771 cv
586.974 305.771 584.624 305.041 582.854 303.731 cv
579.214 301.011 579.214 296.591 582.854 293.881 cv
584.624 292.561 586.974 291.841 589.464 291.841 cv
cp
ef
611.524 317.401 mo
611.524 288.741 li
610.524 288.741 li
610.524 317.401 li
cp
614.024 289.741 mo
611.024 283.741 li
608.024 289.741 li
cp
f
62.4742 30.0612 mo
62.4742 25.3412 66.3042 21.5111 71.0242 21.5111 cv
475.784 21.5111 li
480.504 21.5111 484.334 25.3412 484.334 30.0612 cv
484.334 132.241 li
484.334 136.961 480.504 140.791 475.784 140.791 cv
71.0242 140.791 li
66.3042 140.791 62.4742 136.961 62.4742 132.241 cv
62.4742 30.0612 li
.0320134 .161044 .0745556 0 cmyk
ef
[] 0 dsh
62.4742 30.0611 mo
62.4742 25.3411 66.3042 21.5111 71.0242 21.5111 cv
475.784 21.5111 li
480.504 21.5111 484.334 25.3411 484.334 30.0611 cv
484.334 132.241 li
484.334 136.961 480.504 140.791 475.784 140.791 cv
71.0242 140.791 li
66.3042 140.791 62.4742 136.961 62.4742 132.241 cv
cp
.177676 1 1 .154665 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 2 GetGlyphDirectory
28663 <001C60D8A8C9B7FD849E053B577F0EC76167B9364DDA2AA91631C3CFF
8DC23E0BF6538C74A911385270AC07DCC593E92BECBB696706EF8F8C1C4CE2EF
8295729E284A84BB380C6F5C037CA541C9414BC119A0C6BC7171A44F4E2D24AC
C188520E6BDD194B2F3287711D10FF61B4853208E1CBD0B94B4B63BC29FDB45C
C26906A021B80EDE97A058C4DE4036DD68F93905E608AD84B6128CEEED8DF392
1CD2DB7F4217EEE2DC9> |
28672 <001C60D8A8C9B6BC88CCA209E81BBB23118C1962F78530A6D2B1B22F4
C42E1E1780F3FAF3BA4D143D7AB9094600FB0A392F35595463AF65F814F8CFD2
FA68D1EBD08F24F882D398540EABDE5E14F3ED20707C55D17AFC142A349177EF
446C8B5CD5246C1A25D9E29ACD913B3DA4DA32F40D6AB2427E526FB3DBDEFA1C
762999B6CB00C8AB4BD2941F9E463EC30C1D40E11263ED534E30DB477FDAFCEB
E27BF40CE00> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
69.6842 34.4811 mo
(o\351o\342o\263o\273o\326o\341o\341o\263o\365o\364p\006o\370o\367o\263o\343p\002p\006o\370o\263o\330p\006p\007o\374p\000o\364p\007o\374p\002p\001o\274)
[9.80423 12.1272 4.38953 4.67795 9.93233 11.6306 11.6786 4.16525 9.19556 8.02615 6.50421 8.23438 
9.14752 4.3895 8.84308 9.17941 6.44016 8.23441 4.38953 8.05814 6.50421 5.09427 3.58844 13.4729 
8.05817 5.09424 3.58847 9.17941 8.81107 0 ]xsh
310.814 60.4911 mo
310.814 52.9811 316.904 46.8911 324.414 46.8911 cv
378.814 46.8911 li
386.324 46.8911 392.414 52.9811 392.414 60.4911 cv
392.414 122.511 li
392.414 130.021 386.324 136.111 378.814 136.111 cv
324.414 136.111 li
316.904 136.111 310.814 130.021 310.814 122.511 cv
cp
.161563 0 .0376898 0 cmyk
ef
310.814 60.4911 mo
310.814 52.9811 316.904 46.8911 324.414 46.8911 cv
378.814 46.8911 li
386.324 46.8911 392.414 52.9811 392.414 60.4911 cv
392.414 122.511 li
392.414 130.021 386.324 136.111 378.814 136.111 cv
324.414 136.111 li
316.904 136.111 310.814 130.021 310.814 122.511 cv
cp
.177676 1 1 .154665 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28634 <001C60D8A8C9B658EF0ADE51311B4F60408290DDB267DCF525F593A91
297D0756D42D6ECEFA80FDF00CFA2EFAAC8F27DB827EA9B19398BDE549A53D3B
11B5D7A0408D8FC620AEC7FCEAE4EB860E130A0D03E77D5BCD4D33E711B9D9C4
173931BB35280B5806F2E53450BEC0278D24FAA264C32EBF03909> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [12 0 0 -12 0 0 ]msf
326.064 88.3211 mo
(o\332o\370p\002p\000o\370p\007p\005p\014)
[8.12402 6.16809 6.87598 10.092 6.16809 3.81592 4.10406 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 2 GetGlyphDirectory
28647 <001C60D8A8C9B7B5777CD30EEC2706247F18F2EFF0FCD8D1B2AAA4975
E3C181CDDE8> |
28665 <001C60D8A8C9B844FACDE1262E660876C1C821F09A376508ACC1A69E7
44CCCB7E78648AFF64E5A36538462D4E62DC3E4EB2C79A256CD068EF675E11F5
BEC65134909B1991756C0B348400205629D9A2DBF4EF5> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [12 0 0 -12 0 0 ]msf
327.804 102.721 mo
(o\347p\005o\364p\001o\371p\002p\005p\000)
[6.21606 4.09204 6.01208 6.60004 3.52808 6.87598 4.09207 0 ]xsh
70.2742 54.3911 mo
70.2742 50.2512 73.6342 46.8912 77.7743 46.8912 cv
287.894 46.8912 li
292.034 46.8912 295.394 50.2512 295.394 54.3911 cv
295.394 128.611 li
295.394 132.751 292.034 136.111 287.894 136.111 cv
77.7743 136.111 li
73.6342 136.111 70.2742 132.751 70.2742 128.611 cv
70.2742 54.3911 li
.161563 0 .0376898 0 cmyk
ef
70.2742 54.3911 mo
70.2742 50.2511 73.6342 46.8911 77.7742 46.8911 cv
287.894 46.8911 li
292.034 46.8911 295.394 50.2511 295.394 54.3911 cv
295.394 128.611 li
295.394 132.751 292.034 136.111 287.894 136.111 cv
77.7742 136.111 li
73.6342 136.111 70.2742 132.751 70.2742 128.611 cv
cp
.177676 1 1 .154665 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
76.3642 60.3411 mo
(o\326o\341o\341)
[8.66753 10.1915 0 ]xsh
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28670 <001C60D8A8C9B745265EC238AF683B8F4A353D25470A8B72A26DB7844
3BE3B1F44B4CA272249F727C6F8216C093BF16FCF6CA661AE> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
109.364 60.3411 mo
(o\365o\364o\366o\376)
[8.0246 7.00406 6.33301 0 ]xsh
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
137.324 60.3411 mo
(o\300)sh
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
144.344 60.3411 mo
(o\365p\002p\001)
[8.0246 8.03845 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
168.104 60.3411 mo
(o\370)sh
127.724 132.421 mo
93.0441 132.421 li
93.0441 61.026 li
104.142 61.026 li
104.142 58.081 li
110.455 58.081 li
110.455 61.026 li
127.724 61.026 li
127.724 132.421 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 142.576 391.065 ]ct
[35.4025 0 0 75.0617 -49.8929 258.283 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 98 
/H 208 
/M[98 0 0 -208 0 208 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
XX=/u/O'&%"@b7'.OsKZaoDJL@@[4X"I-I9/1egJk6V2&A97WW"D4CG1Gc-5!W`]Jq\B;O)A`S^XX=/u
/O'&%"@b7'.Osle^An<A@@[4X"I-I9/1f3Ug^+#pA97WW"D4CG1GcE=q#CHs$l]!Y";i$n"pV7Y""5cq
D#AAZF\YRA6mjAY!4Dk0&9"R(qZ$dDVCp?u!8Rt1#m;)`E\/F4*sNl)AHJA.$,?Q1!!<<5)AN&K"[=AQ
,6._K-NbeN9R-JW"Ec"`,'F'181,di!!=!bTJ-3C#QYsC*<?/a!!)3hapA.jG\/f1*sa%kAH3nrNsQ-9
!9X=`":uaQ!!d$^AcMfS!!'>Q"=Z#cGBEe*"Ek>N6$<0K!_=[dZN((JKS:NG!!EESW?)*>!!:@E!:pN5
#m2Ju7kac^"=*tY%jCoo!fmWoec=P,!X',sq>^S9,u"7;![.OD\L7>'"">uRGPlObG7mDZqfDm1-RZ;%
""04E'`7q5#<nb5qZ$]A!!*!)\-W6iI4QlG*s<hr?7@#p*s.K0$/km7!!3<=;>L7oDClk*!!4;D!5p8W
-NbhS(O,e!"*YhIGklF_81,do!!>!G7gf.o!t/4g0E(tL!!:@E!4N7:3J%tlr#Z%i+@n=3qB#d"#moqu
bQ%\K(2!CC!FJ%c!!4;D!7*%Y-NbkX%sIkm"*Z@QGkZ:]81,dq!!>K_0*2%P"TSN=FaY;)!!:@E!4`C<
7YCmhr#Z"l2Ei_e*s.K0$24G<!!<9.)KPZS!DH&X!!4;D!88g[-Nbn^)g;.$"*Z[LGP-%Z81,du!!N?+
9rK6:qu?gILLh(j!!:@E!5&U@%T7iX,5`Mb0gd?;ocF3q#lk:D!!3KHD>F555ZmXY![.ODjX8b0"=Pff
3Hb7A"*ZsJGOonX81,e+!;?Hr#?RlG!W2p"30[/Do)Jj9!!'_>";"^]$6f?i"<]X$(FK&%p`BQu#mn<G
!s/iL<;QXs!]FT[!!4;D!:VA`-NbbK8RD:9"'.l'G4BYU81,e#!!<U@V(2?B""0Wl"n;QobQ%Y($/Gmj
'P;>.+T3Ab+<+Gb,k2rXNsQ-5!;ZZt!Y$&!qZ$[S/oU4Z![.OD_C#F6/kpWhF9H_M6m6aJFSU"[81,e%
!!<gST/?EF"!F'S!Ug!ibQ%Y3$.K7a)00@L+T3Ab+UqQS+n$KSNsQ-@!:^$j!Y6@K!!5kKBC5a$+TMM\
-NbeO6[8NN"a1qV7!3V>F94u\-c>ue(kIepqu?g"+Is\B!!:@E!;[#F#m2;s<AFCn"<mhK&0^E_!fmWo
h#QX=!X',fq>^S1/kPC0![.OD`[:p=0faK#FT-@aG7[&Rl?!(u-RZn6"!WbZ)>jI:""ffklMq"ebQ%X_
#m2W/74\9X"<mtH.Nn%!!fmWokQ'K?!X'3#q>^S:2&tl]![.ODb:!9:""?#OGPlObG8EDek]?ks-R["9
"9C$?@M&G;!t.\]0D#8;!!:@E!6GNM$8R2\./Y.h-5'$0kT9ke#mp2'ec5aT(0UJ6!GFLV!!4;D!7iOj
-NbhV&pO7q"*Z"JGij)L81,e-!!>0K57%/e!u>I"-N*r0!!:@E!6PTM4adYar#Z"j,sa6I*s.K0$2sqM
!!<9-(i9$K!EheO!!4;D!9#<l-Nbh['R0Is"*ZFFGN<iI81,e0!!EBlTI'd>!!E9GH>",U!!:@E!6kfQ
$qYaF,lA_d001R6ko]gF!fmWobQ%\L)K#<N!D6GR!!4;D!:2)n-Nbkb/9Ul4"*cU<GiEfH81,e2!!EI(
V&KI5!!=j'8Ij_[!mCWEcNs^a=*Fflr#Z"s58#F9+7UESNsQ-=!!<6/)diFA!CUV[!!4;D!;@kq-NkhK
794R/F9?MG&U3/T!_=[dg&UmJ!s`87-MmcF230HrhuEi&!!(CQ";#*f)^5/%"<]Ho"=<pejrXYc#mnuZ
!s/iM2u<RV$or4_!!+5C!!(Iq""5coD#AAXF\tLGG2@<B81,eH!:Kmi$uW4%qZ$^DQluLe!!:@E!7M5W
'l\=K+T3A_+;Y)\!$^8A!fmWodf9IO%N?,Z!!55:C$#Ej!!4;D!7`G!.5+D?r,`'b/4V76giNTg-R\B`
jo>JsGG$Pc!!<6BT,lYd!mCWEeHl<sF([B.*s<bj?3DG,*s.K0$02*W!!397+Sl'>?7fL<!!4;D!7rS#
.53i-r,`$b'gtpuFPLs>81,e:!!=6oLEcWr!s9m>,iJb!!!:@E!7qMZ-$Dm6r#Z%c!*L*\g)gBW#mp&#
kl:bg'05mh!c9VQf`2's!!(\"""H&RGQ)[fFED^<5',=t!_=[df`2+&O(T7+!!<E^OYl>'mJm=4!!([Y
"#"sO/GpRm,m@""+P7b;NsQ-h!8mhY"r1)5!!7+!$J,7Z+TMMu-NtkF.5_uer,`$b(bg3bF94u\-eeV'
1RL]Aqu?g-8U;lX!94%\bQ%Xt#m328'I`l$""4mF1tE`N+--^7g].EW"rLqJ!!-_)e,TOn!!)41p*Tql
2\:01F9?_5-[4$]!_=[dh>dZZ5GKt;qu?g8ASW:`!8%8QbQ%Y"#m:T(K`i\!*s4&E/M>p&ocF6r#moDf
!XBT_q>^Os<71aJ+TMN6-g`8`.m"Vkr,`$c2Bd:lF94u\-f=t-!Cs+6!W2p",_]P9d/X6l!!(p`":@hU
!$_=_"#*(d.-Mc<*s.K0$/Y^a#od[V!!,Aici=+j!!*!Gj<k$[5WNubF9?eP(3e)H!_=[diW&r^!`Z3B
qZ$^VO\#f(!!:@E!9+:f%Te#c+T3Ab+?*"+-Li28*s.K0$/kjc#oce=!!,&mdfB:G![.ODj<k$X/Orq@
F9H_m57r+aF94u\-gUj/!!<U=W$qNC""KNd"3gfIbQ%Y(#m1lPF<19$"<epd!@%@^e/naQ#moYm!s/oN
0`(hO.Q28$!:^$j+TMN)-NbbL9m?MW"Ed0t,'D(N!_=[dpAj[_!toRJ3;`aZ!?mRG!QtHEbQ%Y*#m2)_
CH)/5![/.O!<==e*s.K0$0D3i!tH4NqZ$[f3+h7Pjo>H+!!)41"">lgGl2XdFWrt<Fie_+81+BbkPt]'
IZ5fS!!E<CNunDE!!:@E!9a^j,'Hia1]/<t+TP.J+NY],NsQ-V!!3980_tbNAiWBL!8@JT+TMN--NbeO
3I(ID"*P8?C<q"sF94u\-gC[6+,kjnqu?g#/s.g,!!:@E!:U<l#m2Q)6neH["=!tB/0MtT!fmWol2Ukg
'0Q*k!cL%8`W-&`!!)@5"">uNGPuUdFE\NbGf4\*81,eO!!=U5A.e_>!s_D[1?eeo!!:@E!:1!o/q>8u
r#Z%g&l1G/boca'!fmWoli7(j'it/2!GFI1!!4;D!:M9<-RpqfGPlObGTo%i_K5iM-R\?_"9C?L70`Yi
!to!q,4Y`]!!:@E!:L3s$9EYG-2\he.jRJ8eK=3$!fmWomJm:n(2NaH!Eqe*!!4;D!;\);-Nbk[&9dtn
"*Z:DGJJ;%81,eT!!EBjU+-3A!!=<`CDZjJ`W-(a!!)Nq":ReK!$hC`""uG^/)DB.*s.K0$1Ior#o[dZ
!!,nq^]4H:+TMN5-Nbna-[#?/"*c@4GJ8/#81,eV!!EL%V&BC4!!"POF[ckT!!:@E!:pL"%odiW+oNJc
+>P_a.H_f**s.K0$1e-!!=BfVq>^OlBupAJ!!4;D!;.]B-nIbZFo6=`EAeDQ]Q=3G-R\Qe!=<*6V]kp;
"#GW`#J:$<bQ%Y9#m:lLFql2!*s<]A5lrD&+3bl/NsQ-c!!<61*('N&!Y.P8dK&P4![.ODpEp%k/k]dR
F9H_`5o+[UF94u\-iO,B!!<XCV(VWF"!j0Y"1eI6bQ%Y;#m:uWE$le,*s<]&;ue-<+2T*$NsQ-e!!<94
)^,"X!]r8UgAp+2![.ODq'Q7m/l$]hF9=!_06Y$Nr,`!2-R\]i!tf[J1A_%R*M=>P\,ZTS!!)g$";u8o
2'Di>"!@\N"oojW*s.K0$2FQ&!Y6:I!!6LZ>N>e6!!4;D!;e,G.53o/r,`$`'hVNGFRaGS81,e^!!=-l
M^&'!!s'aE-a`pUbQ%Y?#m2Au9J?;c"<mhR)^)R2!fmWoqZ$[#&iTRd!c9>Bm/Y6.![.ODr?h[r1+[YI
F9?[t6Zp[rk&^Yq-R\im"!s"I'`7q5"uDW*ZN($M!!!#t#m2`,1FrAF"!e"N27"A+NsQ-k!!3<=:AOql
D_VIi!58F=+TMKi-Rgc7Gl)[d'JXjaFPCmC81,bb!&L:2/Gp1a*(53+\cDL*#g<8K#miVY<&FM'""k'E
1pJ,-NsQ*n!<s8rq>^P48cA^r!!4;D!!4Su1\a-6;6P'F81,c()s6sD!KjSU!5AL;bQ%Vf,J!V:!DRL^
+5@qANsQ*q";^e5!<F:O!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW
*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+
NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr
!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9
q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%
-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L
!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV
"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG
!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi
-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao
3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL
0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90
/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ss
FP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf
"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g
!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlo
d.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK
!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;EL
nc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?
ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:Bgj
bQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH
!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3
O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la
!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b
+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW
*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I
#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m
!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),
&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+
#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BR
YQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO
!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2
!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao
3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL
0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%
9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9
gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@
81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlo
d.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA
$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-J
VQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$m
bQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH
#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsm
q#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY
$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>
Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0Z
NsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3
#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3
&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+
#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W
!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:(
"X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG
!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi
-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-R
q(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90
/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"
FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@
81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.n
q$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK
!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;EL
e,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!
d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g(
"j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH
!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3
O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY
$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB
*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/
#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr
!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m
!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9
q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*
!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BR
fDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O
!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG
!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi
-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL
0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%
9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tC
FL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQp
q/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f
"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq
-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb
!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA
$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;EL
d/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>s
e,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3E
bQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH
#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',
$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsm
q#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la
!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(
A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^j
ocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpO
NsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m
!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9
q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+
#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(
!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV
"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L
!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG
-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi
-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-R
q(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90
/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHm
r,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f
"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_
-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlo
d.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK
!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-J
VYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QN
VQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9Z,3-RSlod.n"L,c7dG
"t[Uk!!rsmq#^X(Ab@.Y*sWo5Ta;#*!"\l*!=:.+!8.>V-63'd-RUnL0``k!]6*jj"*H=b/H.!u!!(CA
$3;ELZ2b.NVGdWu!!rsmq#^[)AKS9$#pBLr<t5NC!!!Q*!!*BRirIF+!aHZPrW!!I-TLoV!A-saFRXAS
FVQtgr$MOG!7:NK!@4PM!!E<LUdY@`!!3H5O8/kY$"^Ld"<mhr8dkS(!WW32q#CF%-gguT!!7!V#lFZ(
-RUnL0``k!d<+Pn"*Y86.f(Lo!!(CA$3;EL[f?I724=M)q>^R'$'4la!=<>H*s3hnHp7B5!WW32q#CF%
-i!bV!!7*V#PnE%-RUnL0``k!giVCp"*YhC.JP7l!!(CA$3;EL^B"-2!teRo./3cD#ml[g!s&^>\K:o'
*dKF6#m(),&,H8-!!t$_!!6C?"o&'!-RUnL0``k!kB,6r"*Z^Z.J>+j!!(CA$3;ELaoLu4"!N8L+8,[9
#ml[g!s&^>],q,/7<L!P#m1J6!"\l*!=:-b!!5:s"SMfs-RUnL0``k!noW)t"*dHl..ekg!!(CA$3;EL
eH"h6""g$f(%_J-#ml[g!s&^>]cRA7?ud7ooa(["!"\l*!=:-d!!4;T"7uQp-RUnL0``k!rH,r!"*$sd
..S_e!!(CA$3;EL^An?mULt&,!!3H5O8/kY$"`WKclWB50lCV=nd,?t!"\l*!=:.'!:0[f%N,`Ync/_=
-TLoV!A-s]F9?Y\6nJ0^p*TnA!7:NK!@4PY!!=IC=U"9p!XT0oq#^X(Ac*Xj*s<]$F'K4E#m(),&,?2+
#q+U1irB-H)[l*7![f?Tq(Vn%9>koQFWLQF/+"\c!!(CA$3;EL_uKl?+Jqcu!!3H5O8T1Z!s&^>`#f(*
!.I`2#m(),&,?2+#q,!<g&M4i)@-E4!!4Mq3;G90/PF?1qK)g`&i_E--NX8Jd.n"L,c8Q]"9pNO4TY$P
r;Zm*$'4la!=<>W*s<klI7"A.#m(),&,?2+#q,BGd/X5c)$oO.![f?Tq(Vn%9A"@VF9?b+1b.`;!WW5I
q$I-JVT8`>%SMs<p]0jb!XT0oq#^X(A]Pqq.2@%bkm7Ck!"\l*!XU4Sa8c<Q('Xg)!!4Mq3;G90/PG,G
k]?oO.l&R:-NX8Jd.n"L,c8]a!uYm0,3Jq-#ml[g!s&^>ar^^;0Qei-#m(),&,?2+#q*gp!_j@3k5YQ2
-TLoV!A-t4FPh0BGXaA9jX1*0!7:NK!@4Pi!;lg!-^T2tjT#>g$'4la!=<>]*s49"F<KrWq$@*&!"\l*
!=:-s!!4S]"Q]Ub-RUnL0``k!q/k20"*mWo.,uZV!!(CA$3;ELg]6pG"#R#r&*!Wk#ml[g!s&^>c6!-J
DJp?b$18*$!!!Q*!!*BRbl@e`%KbYj![f?TqCr%+/PFH4!aA/Gi$SR+!7:NK!@4Q*!9sOd.A^>Si;`oc
$'4la!=<>b*sNi0Ea]Fa$0)<n!!!Q*!!*BRci=,$)@PL(!rs\r3;G90/PFQ7"*HFd/)DWT!!(CA$3;EL
nc7YL"9BR;:]oST!XT0oq#^X(A^qk,+!2[4E`EP*#m(),&,?2+#q+.$!a$?Il2^JW![f?Tq(Vn%9@\+d
FqHbcga<.'!7:NK!@4Q@!8.>T"Xp!0!o3hX#ml[g!s&^>eK4o>!..6Eh$F,_!"\l*!=:.D!9=+]E#K#;
!!4Mq3;G90/PF];!d>>9!%Q\M!WW5Iq$I-JVUkeM$U:"9jT+uS!XT0oq#^X(A_/"+-4YAbg'If\!"\l*
!=:.O!8@JUC)@-VgAh:&-TLoV!A-t%FSg.^GU,'ofI$_#!7:NK!@4Pq!!<jDM^IillMptm$'4la!=<>j
*s4#>GV7VT!WW32r;ccr!=:.+!!?4:"Td9V![f?Tq(Vn%9BpWiF9?_I0IbR#!WW5Iq$I-JVV;(Q++o+_
pAj+O!XT0oq#^X(A_S:/01L+/g'R]a!WW32q#CF%-e\P%3t_YH!!4Mq3;G90/PGbYl#[#P:G+'F-NX8J
d.n"L,c9At">?Nn&-15\!XT0oq#^X(A_nL3+>mqV(ukqn#m(),&,?2+#q+L.!ZV^Qe,TOt-TLoV!\I&e
i,f'78hDI>-NX8Jd.n"L,c9T%r;ZpPUM("_!!3H5O8/kY$"`$:"<]13C(fk>k6V1i!"\l*!=:.2!!=8\
%0FrX![f?Tq(Vn%9B($qF[8AFcR/bo!7:NK!@4Q1!;-<p!?e(8"jd5N#ml[g!s&^>iZA:H%WPP[oa0C[
!WW32q#CF%-fG%,9,e2h!;QTr-RUnL0``k!jE(NJ*'Pl$c6iYn!7:NK!@4Q<!:0[g![4.*"O6uK#ml[g
!s&^>j<"LL!-CmCrX$sY!WW32q#CF%-fY1/CDmK[i;i9G![f?Tq(Vn%9BL<uG7QV^b9m>k!7:QL!X^3M
jo>Mh31Do0bQ%\N$'4la!=<?#*sE`5#(/WCbR"=N!"\l*!=:.8!!7-W#O)6K!!4Mq3;G90/PG;L"*YhC
.`s+@-NF.nq$I-JVW\!_$s8ZE!QkBD#ml[g!s&^>nfRTJ"=PF>1^_A3!WW32q#CF%-g(I2>nmS7!8%8Q
-RUnL0``k!l?!,P1GL?--hShg!!(CA$3;ELl2Uo&HA3H\!!3H5O8/kY$"a&WmN2N^5'SBo#m(),&,?2+
#q+s;!^RJ'`rH/g-TLoV!A-t7FSp4_GX=&3`?t]e!7:NK!@4Q/!!=d4H5#ZGf`2'[$'4la!=<?)*s<]C
<-9/,$2+Z,!!!Q*!!*BRlMpu;&-KlO![f?Tq(Vn%9Dio'F9?GT/L\La!WW5Iq$I-JVX=Ed1T"ptp&NA<
!XT0oq#^X(Aa^]D+>@\K(YK,\#m(),&,?2+#q,-@!tZ@\"2b*?-RUnP1&Wg-/PGVU"EdI//1A=^!WW5I
q$I-JVXOQh,GJEL!!'n:!XT0oq#^X(AapiF+Vem$&`O,T#m(),&,?2+#q,3B"$mh6"2t9=!!4Mq3;G90
/PG\W"*PtT/&!A4!!(CA$3;ELo`,0r!!+"28d2s0!XT0oq#^X(Ab-uH+p)g]%dOGO#m(),&,?2+#q,9D
"(W;V!R:]9!!4Mq3;G90/PGbY"*P8;._I,1!!(CA$3DKM!;6Bq">--,"2+[9#ml[g!s&^>ocF;^!d?s>
oEiYH!WW32q#CF%-hIB?EZ#,5!9X=`-RUnL0``k!pN-L])DiqT-NX8Jd.n"L,c:;9":@qm0EJcc!XT0o
q#^X(AbR8L-Pq=m$N1:G#m(),&,?2+#q,EH!bE/PhZ2F3![f?Tq(Vn%9DNZ3G:PBs^aJq*!WW5Iq$I-J
VYL2o(2SmQ\,ZR:$'4la!=<?5*s3uIHRZH2!WW32q#CF%-hmZC9bRZn!7:cJ-RUnL0``k!qfDpb4"r,*
-gi>`!!(CA$3;ELqZ$^DKRF]G!!3H5O88q[!srQ9*s45hF!.mt!WW32q#CF%-i*fE3"Z;`!6,!?-RUnL
0``k!rH&-c:+dsC-fZQU!!(CA$3;ELr;ZpXT5P=L!!<3-$'4la!=<?9*s4K8CDjJc!WW32q#CF%-iF#I
!ZDRNq>e,-![f?Tq(W++96>;Y81Z1D-eKdJ!!(CA$3qiR!!"@C@LKmMo`,%"$'4la#74r`+<GW8'XA#H
!!!Q*!!NZV!!"bn!=T%8!!4Mq3;G93/Q">j/$C<%!!(CA$3_]Y*hlF7o`2W)!XT0oq#^d,D[:G`&(h3A
#m(),&,?2/#p3:h#m%X<p&G.A-SY?R!]2S]XX=/M!4Vcj"/<:l!r`2)!!3H5UA87#DmW"Bi<dd9!WW36
q$7$0('qeXlMpu6-SY?R!]2S]XX=/M!4VonrKdV\\3^8"!!3H5UA87#DmW"Blj:Q9!WW36q$7$0('r1c
huJ9~>

%%EndBinary
grestore
np
gsave
104.142 61.026 mo
93.0441 61.026 li
93.0441 58.081 li
104.142 58.081 li
104.142 61.026 li
clp
93.0441 58.081 mo
104.142 58.081 li
104.142 61.026 li
93.0441 61.026 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 142.576 391.065 ]ct
[11.9213 0 0 3.60874 -49.8929 329.736 ]ct
snap_to_device
<<
/T 1
/W 33 
/H 10 
/M[33 0 0 -10 0 10 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RS~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!~>
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnE#mg~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1 dict begin
0 0 0 1 cmyk
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
85.0317 60.3411 mo
(o\341)sh
false sop
0 0 0 1 cmyk
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
95.2232 60.3411 mo
(o\341)sh
end
grestore
gsave
127.724 61.026 mo
110.455 61.026 li
110.455 58.081 li
127.724 58.081 li
127.724 61.026 li
clp
110.455 58.081 mo
127.724 58.081 li
127.724 61.026 li
110.455 61.026 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 142.576 391.065 ]ct
[18.0625 0 0 3.60874 -32.5529 329.736 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 50 
/H 10 
/M[50 0 0 -10 0 10 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 50 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 50 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 50 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 50 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
h'W7P/O'&%"@b7'.Os6S!XW;*qiV)H\]$*NjpCeh!YT$bqdK\?U;JcCh#IKW$l]!Y";i$n"pWm2![oWa
qaUcY2)-R1r;bdV!XW;*qiV)H\]$*Nh$F,qA97WW"D4CG1Ge"jqu?d!$l]!Y";i$n"pWs4""5cqD#AAZ
F\YRA6mjA>!!<dNW\XGO"X9fre,TLE$0MTt(iOFH+T3Ad+W"\kS-]MZ!!<<5)AN&K"[=AQ,6.`&-NY_M
9E9>8F9m"89-SP$81,eD!!=!bTJ-3C#QYsC*<?/a!!(sa"!)Vu2#JF$+ou6T+s2jP$2";c!!397+o20D
A1(sh!$M=Bj!OpX0KOFUF9Hau9gNq$F94u\-fY1/*JB+gqu?j&.]FHirW!#D!!)$c"!r1^0Dlmp,QMBd
+oWPbNsQ-Q!!3993r/gXE$\3V!!4;D!:_H0-NbeQ.!PT2"*YAJB_ulQ81,eH!!=U2BGC@E!s_#^0Db_N
bQ%Y)#m2f./1UQ>"XFF].3K`2*s.K0$0;-g"Vjo2!!7$i*;]^;+TMN*-NbhS(O,e!"*YhIGklF_81,eP
!;c`u17Lc@qu?g,=Ged-!!:@E!9XXj3J%tlr#Z%i+@n=3qB#d"#mobp!X9EPq>^P'555*Z+TMN,-NbkX
%sIkm"*Z@QGkZ:]81,eL!!>K_0*1tN!uH*.*VTO8bQ%Y-#m3YM"=*gd""Z>o/b^=gNsQ-X!!<9.)KPZS
!DH&X!!4;D!:)!7/3Fkpr,`$b2^EV?F9>&]-NNN6"9hMu+p%TA""8q9&bQ,*bQ%Y0#m:`9JH-nl*s45b
-n+a1!fmWolMptn)f>QSr;Zj`=S)Rp+TMN1-NkhK6902dF9?_O)L(dp!_=[dmJm@p=/d5Aqu?gYPYMMU
!!:@E!;m/p#m:fBGmY_n*s<]F;AU\O*s.K0$17cq!XfrHqZ$[!2Iu@Y![.ODJ,~>

%%EndBinary
grestore
np
1 dict begin
/T1_Text{eclp cmyk
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
109.364 60.3411 mo
(o\365)sh
T1_grestore}def
T1_gsave
T1_path 110.023 57.7202 3.65476 6.72708 -.5 .25 -3.15476 -6.97708 ()
0 0 0 1 T1_Text
T1_gsave
T1_path 116.75 60.875 .5 .25 -.5 -.25 ()
0 .00392157 .00392157 .992157 T1_Text
false sop
/T1_Text{eclp cmyk
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
117.389 60.3411 mo
(o\364)sh
T1_grestore}def
T1_gsave
T1_path 117 57.7202 3.15476 .5 -.25 1.25 -.5 .5 -.25 .75 -.5 .75 -.25 .75 -.5 .75 -.25 .75 -.654758 -6 ()
0 0 0 1 T1_Text
T1_gsave
T1_path 123 57.7202 .654758 .25 -.654758 -.25 ()
T1_path 122.25 58.375 .25 .25 -.25 -.25 ()
T1_path 121.5 58.625 .5 .25 -.25 .25 -.25 -.5 ()
T1_path 120 59.375 .25 .25 -.25 -.25 ()
T1_path 117.5 60.625 .25 .5 -.25 -.5 ()
T1_path 117 60.875 .5 .25 -.5 -.25 ()
.00522876 .0235294 .0235294 .977124 T1_Text
T1_gsave
T1_path 123.25 57.7202 .654758 .25 -.654758 -.25 ()
.0431373 .207843 .2 .815686 T1_Text
T1_gsave
T1_path 123.5 57.7202 .654758 .25 -.654758 -.25 ()
.0823529 .380392 .368627 .662745 T1_Text
T1_gsave
T1_path 123.75 57.7202 .654758 .25 -.654758 -.25 ()
.2 .611765 .443137 .368627 T1_Text
T1_gsave
T1_path 122.5 58.375 .25 .25 -.25 -.25 ()
T1_path 118.75 60.125 .25 .25 -.25 -.25 ()
.027451 .123529 .119608 .890196 T1_Text
T1_gsave
T1_path 122.75 58.375 .25 .25 -.25 -.25 ()
.0470588 .215686 .207843 .803922 T1_Text
T1_gsave
T1_path 123 58.375 .25 .25 -.25 -.25 ()
T1_path 122.25 58.625 .25 .25 -.25 -.25 ()
.145098 .347059 .231373 .588235 T1_Text
T1_gsave
T1_path 123.25 58.375 .25 .25 -.25 -.25 ()
.196078 .317647 .254902 .482353 T1_Text
T1_gsave
T1_path 123.5 58.375 .25 .25 -.25 -.25 ()
.25098 .286274 .270588 .368627 T1_Text
T1_gsave
T1_path 123.75 58.375 .25 .25 -.25 -.25 ()
.32549 .305882 .282353 .184314 T1_Text
T1_gsave
T1_path 122 58.625 .25 .25 -.25 -.25 ()
.054902 .243137 .223529 .780392 T1_Text
T1_gsave
T1_path 122.5 58.625 .25 .25 -.25 -.25 ()
.215686 .32549 .266667 .443137 T1_Text
T1_gsave
T1_path 122.75 58.625 .25 .25 -.25 -.25 ()
.282353 .309804 .309804 .305882 T1_Text
T1_gsave
T1_path 123 58.625 .25 .25 -.25 -.25 ()
.364706 .333333 .278431 .109804 T1_Text
T1_gsave
T1_path 123.25 58.625 .25 .25 -.25 -.25 ()
.4 .215686 .211765 .0745098 T1_Text
T1_gsave
T1_path 123.5 58.625 .25 .25 -.25 -.25 ()
.439216 .0980392 .14902 .0392157 T1_Text
T1_gsave
T1_path 123.75 58.625 .25 -.75 .25 -.75 .5 -.75 .25 -1 .5 -.75 .25 -.75 .5 -.5 .25 2 -.5 .75 -.25 .75 -.25 .25 -.25 .5 -.25 1 -.5 .25 -.75 -.25 ()
T1_path 123.5 60.375 .25 -1 .25 -.25 .25 -.5 .25 2.25 -1 -.5 ()
.454902 .000784314 .122017 0 T1_Text
T1_gsave
T1_path 121.75 58.875 .25 .25 -.25 -.25 ()
T1_path 120.75 59.125 .25 .25 -.25 -.25 ()
T1_path 120.25 59.375 .25 .25 -.25 -.25 ()
T1_path 120 59.625 .25 .25 -.25 -.25 ()
T1_path 119.25 59.875 .25 .25 -.25 -.25 ()
.0164706 .077647 .0768627 .931765 T1_Text
T1_gsave
T1_path 122 58.875 .25 .25 -.25 -.25 ()
.109804 .490196 .45098 .560784 T1_Text
T1_gsave
T1_path 122.25 58.875 .25 .25 -.25 -.25 ()
.286274 .627451 .396078 .215686 T1_Text
T1_gsave
T1_path 122.5 58.875 .25 .25 -.25 -.25 ()
.376471 .403922 .298039 .105882 T1_Text
T1_gsave
T1_path 122.75 58.875 .25 .25 -.25 -.25 ()
T1_path 123.75 59.875 .25 .25 -.25 -.25 ()
.470588 .184314 .203922 0 T1_Text
T1_gsave
T1_path 121 59.125 .25 .25 -.25 -.25 ()
.0235294 .113725 .113725 .901961 T1_Text
T1_gsave
T1_path 121.25 59.125 .25 .25 -.25 -.25 ()
.117647 .517647 .454902 .533333 T1_Text
T1_gsave
T1_path 121.5 59.125 .25 .25 -.25 -.25 ()
.164706 .517647 .364706 .415686 T1_Text
T1_gsave
T1_path 121.75 59.125 .25 .25 -.25 -.25 ()
T1_path 121.75 60.625 .25 .25 -.25 -.25 ()
.215686 .52549 .270588 .27451 T1_Text
T1_gsave
T1_path 122 59.125 .25 .25 -.25 -.25 ()
T1_path 123 60.375 .25 .25 -.25 -.25 ()
T1_path 120.5 60.875 .25 .25 -.25 -.25 ()
.465359 .115033 .176471 .00130719 T1_Text
T1_gsave
T1_path 120.5 59.375 .25 .25 -.25 -.25 ()
T1_path 117.5 60.875 .25 .25 -.25 -.25 ()
.0705882 .268627 .221569 .741176 T1_Text
T1_gsave
T1_path 120.75 59.375 .25 .25 -.25 -.25 ()
T1_path 119.25 60.125 .25 .25 -.25 -.25 ()
.0705882 .262745 .184314 .676471 T1_Text
T1_gsave
T1_path 121 59.375 .25 .25 -.25 -.25 ()
.0862745 .258824 .141176 .631372 T1_Text
T1_gsave
T1_path 121.25 59.375 .25 .25 -.25 -.25 ()
.290196 .298039 .309804 .266667 T1_Text
T1_gsave
T1_path 121.5 59.375 .25 .25 -.25 -.25 ()
.313725 .278431 .254902 .207843 T1_Text
T1_gsave
T1_path 121.75 59.375 .25 .25 -.25 -.25 ()
T1_path 122.75 60.125 .25 .25 -.25 -.25 ()
T1_path 123.5 60.125 .25 .25 -.25 -.25 ()
.333333 .265359 .2 .137255 T1_Text
T1_gsave
T1_path 122 59.375 .25 .25 -.25 -.25 ()
T1_path 121.25 59.625 .25 .25 -.25 -.25 ()
T1_path 123.75 60.125 .25 .25 -.25 -.25 ()
T1_path 122 60.375 .25 .25 -.25 -.25 ()
T1_path 122.25 60.625 .25 .25 -.25 -.25 ()
.464314 .0768627 .161569 0 T1_Text
T1_gsave
T1_path 123.75 59.375 .25 .25 -.25 -.25 ()
T1_path 120.25 60.125 .25 .25 -.25 -.25 ()
.266667 .129412 .0882353 .213725 T1_Text
T1_gsave
T1_path 120.25 59.625 .25 .25 -.25 -.25 ()
.0313725 .152941 .14902 .866667 T1_Text
T1_gsave
T1_path 120.5 59.625 .25 .25 -.25 -.25 ()
.133333 .568627 .478431 .486274 T1_Text
T1_gsave
T1_path 120.75 59.625 .25 .25 -.25 -.25 ()
.141176 .486274 .32549 .423529 T1_Text
T1_gsave
T1_path 121 59.625 .25 .25 -.25 -.25 ()
.14902 .407843 .172549 .364706 T1_Text
T1_gsave
T1_path 123.75 59.625 .25 .25 -.25 -.25 ()
.0705882 .243137 .0392157 .431373 T1_Text
T1_gsave
T1_path 119.5 59.875 .25 .25 -.25 -.25 ()
T1_path 117.25 60.875 .25 .25 -.25 -.25 ()
.0372549 .182353 .180392 .837255 T1_Text
T1_gsave
T1_path 119.75 59.875 .25 .25 -.25 -.25 ()
.14902 .607843 .494118 .431373 T1_Text
T1_gsave
T1_path 120 59.875 .25 .25 -.25 -.25 ()
T1_path 119.25 60.375 .25 .25 -.25 -.25 ()
.115686 .429412 .27451 .42549 T1_Text
T1_gsave
T1_path 120.25 59.875 .25 .25 -.25 -.25 ()
.0862745 .278431 .0784314 .427451 T1_Text
T1_gsave
T1_path 122.75 59.875 .25 .25 -.25 -.25 ()
.466667 .0431373 .156863 0 T1_Text
T1_gsave
T1_path 123 59.875 .25 .25 -.25 -.25 ()
.121569 .345098 .12549 .372549 T1_Text
T1_gsave
T1_path 123.25 59.875 .25 .25 -.25 -.25 ()
.172549 .443137 .203922 .305882 T1_Text
T1_gsave
T1_path 123.5 59.875 .25 .25 -.25 -.25 ()
.223529 .541176 .282353 .243137 T1_Text
T1_gsave
T1_path 119 60.125 .25 .25 -.25 -.25 ()
.0862745 .321569 .254902 .694118 T1_Text
T1_gsave
T1_path 119.5 60.125 .25 .25 -.25 -.25 ()
.0470588 .188235 .105882 .643137 T1_Text
T1_gsave
T1_path 119.75 60.125 .25 .25 -.25 -.25 ()
.305882 .305882 .313725 .215686 T1_Text
T1_gsave
T1_path 120 60.125 .25 .25 -.25 -.25 ()
.286274 .219608 .207843 .211765 T1_Text
T1_gsave
T1_path 122.25 60.125 .25 .5 -.25 -.5 ()
.317647 .227451 .164706 .14902 T1_Text
T1_gsave
T1_path 123 60.125 .25 .25 -.25 -.25 ()
T1_path 121.25 60.875 .25 .25 -.25 -.25 ()
.288235 .229412 .145098 .190196 T1_Text
T1_gsave
T1_path 123.25 60.125 .25 .25 -.25 -.25 ()
.317647 .247059 .176471 .152941 T1_Text
T1_gsave
T1_path 118.75 60.375 .25 .25 -.25 -.25 ()
.054902 .25098 .247059 .780392 T1_Text
T1_gsave
T1_path 119 60.375 .25 .25 -.25 -.25 ()
.172549 .647059 .509804 .388235 T1_Text
T1_gsave
T1_path 119.5 60.375 .25 .25 -.25 -.25 ()
.0588235 .184314 .0156863 .458823 T1_Text
T1_gsave
T1_path 122.25 60.375 .25 .75 -.25 -.75 ()
.180392 .458823 .211765 .298039 T1_Text
T1_gsave
T1_path 123.25 60.375 .25 .25 -.25 -.25 ()
.462745 .054902 .14902 0 T1_Text
T1_gsave
T1_path 118 60.625 .25 .25 -.25 -.25 ()
.0666667 .301961 .298039 .733333 T1_Text
T1_gsave
T1_path 118.25 60.625 .25 .25 -.25 -.25 ()
.129412 .478431 .396078 .537255 T1_Text
T1_gsave
T1_path 118.5 60.625 .25 .25 -.25 -.25 ()
.196078 .658823 .498039 .341176 T1_Text
T1_gsave
T1_path 118.75 60.625 .25 .25 -.25 -.25 ()
.105882 .133333 0 .431373 T1_Text
T1_gsave
T1_path 121.25 60.625 .25 .25 -.25 -.25 ()
.466667 .156863 .192157 0 T1_Text
T1_gsave
T1_path 121.5 60.625 .25 .25 -.25 -.25 ()
.341176 .341176 .227451 .12549 T1_Text
T1_gsave
T1_path 122 60.625 .25 .25 -.25 -.25 ()
.141176 .396078 .156863 .345098 T1_Text
T1_gsave
T1_path 117.75 60.875 .25 .25 -.25 -.25 ()
.113725 .341176 .243137 .639216 T1_Text
T1_gsave
T1_path 118 60.875 .25 .25 -.25 -.25 ()
.145098 .207843 .168627 .533333 T1_Text
T1_gsave
T1_path 118.25 60.875 .25 .25 -.25 -.25 ()
.235294 .270588 .239216 .34902 T1_Text
T1_gsave
T1_path 118.5 60.875 .25 .25 -.25 -.25 ()
.32549 .329412 .313725 .168627 T1_Text
T1_gsave
T1_path 118.75 60.875 .25 .25 -.25 -.25 ()
.278431 .0666667 .0588235 .215686 T1_Text
T1_gsave
T1_path 120.75 60.875 .25 .25 -.25 -.25 ()
.403922 .2 .192157 .054902 T1_Text
T1_gsave
T1_path 121 60.875 .25 .25 -.25 -.25 ()
T1_path 121.75 60.875 .25 .25 -.25 -.25 ()
.345098 .284314 .211765 .115686 T1_Text
T1_gsave
T1_path 121.5 60.875 .25 .25 -.25 -.25 ()
.309804 .254902 .172549 .160784 T1_Text
T1_gsave
T1_path 122 60.875 .25 .25 -.25 -.25 ()
T1_path 121.5 61.125 .25 .25 -.25 -.25 ()
.290196 .182353 .127451 .184314 T1_Text
T1_gsave
T1_path 117.25 61.125 .25 .25 -.25 -.25 ()
.0745098 .341176 .329412 .698039 T1_Text
T1_gsave
T1_path 117.5 61.125 .25 .25 -.25 -.25 ()
.14902 .501961 .4 .498039 T1_Text
T1_gsave
T1_path 117.75 61.125 .25 .25 -.25 -.25 ()
.227451 .662745 .470588 .298039 T1_Text
T1_gsave
T1_path 118 61.125 .25 .25 -.25 -.25 ()
.223529 .117647 .0392157 .333333 T1_Text
T1_gsave
T1_path 118.25 61.125 .25 .25 -.25 -.25 ()
.341176 .0588235 .0823529 .164706 T1_Text
T1_gsave
T1_path 120.5 61.125 .25 .25 -.25 -.25 ()
.466667 .219608 .215686 .00784314 T1_Text
T1_gsave
T1_path 120.75 61.125 .25 .25 -.25 -.25 ()
.356863 .4 .266667 .109804 T1_Text
T1_gsave
T1_path 121 61.125 .25 .25 -.25 -.25 ()
.247059 .580392 .321569 .211765 T1_Text
T1_gsave
T1_path 121.25 61.125 .25 .25 -.25 -.25 ()
.101961 .305882 .0901961 .392157 T1_Text
false sop
/T1_Text{eclp cmyk
/AWIJOU+DengXian-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
124.393 60.3411 mo
(o\366)sh
T1_grestore}def
T1_gsave
T1_path 125 57.7202 .654758 1.5 -.654758 -1.5 ()
.243137 .572549 .376471 .32549 T1_Text
T1_gsave
T1_path 126.5 57.7202 .654758 .25 -.654758 -.25 ()
.203922 .65098 .509804 .337255 T1_Text
T1_gsave
T1_path 126.75 57.7202 .654758 .25 -.654758 -.25 ()
.168627 .72549 .627451 .341176 T1_Text
T1_gsave
T1_path 127 57.7202 .654758 .25 -.654758 -.25 ()
.156863 .772549 .756863 .313725 T1_Text
T1_gsave
T1_path 127.25 57.7202 .654758 .25 -.654758 -.25 ()
.0941176 .470588 .462745 .580392 T1_Text
T1_gsave
T1_path 127.5 57.7202 .654758 .710403 -.654758 -.710403 ()
.0352941 .172549 .168627 .85098 T1_Text
T1_gsave
T1_path 125 58.375 .25 .5 -.25 -.5 ()
.34902 .286274 .247059 .160784 T1_Text
T1_gsave
T1_path 125.5 58.375 .25 .25 -.25 -.25 ()
.34902 .286274 .25098 .160784 T1_Text
T1_gsave
T1_path 125.75 58.375 .25 .25 -.25 -.25 ()
.309804 .317647 .243137 .223529 T1_Text
T1_gsave
T1_path 126 58.375 .25 .25 -.25 -.25 ()
.27451 .352941 .231373 .286274 T1_Text
T1_gsave
T1_path 126.25 58.375 .25 .25 -.25 -.25 ()
.266667 .615686 .392157 .243137 T1_Text
T1_gsave
T1_path 126.5 58.375 .25 .25 -.25 -.25 ()
.192157 .533333 .352941 .313725 T1_Text
T1_gsave
T1_path 126.75 58.375 .25 .25 -.25 -.25 ()
.117647 .45098 .317647 .388235 T1_Text
T1_gsave
T1_path 127 58.375 .25 .25 -.25 -.25 ()
.211765 .8 .682353 .235294 T1_Text
T1_gsave
T1_path 127.25 58.375 .25 .25 -.25 -.25 ()
.113725 .443137 .384314 .580392 T1_Text
T1_gsave
T1_path 127.5 58.375 .25 .710403 -.25 -.710403 ()
.0156863 .0862745 .0823529 .92549 T1_Text
T1_gsave
T1_path 125 58.625 .5 .25 -.5 -.25 ()
T1_path 126.25 58.875 .25 -.75 .5 -.5 1.70398 2 -2.45398 -.75 ()
.455084 9.11993e-5 .121933 0 T1_Text
T1_gsave
T1_path 125.25 58.625 .25 .25 -.25 -.25 ()
.298039 .054902 .0627451 .196078 T1_Text
T1_gsave
T1_path 125.5 58.625 .25 .25 -.25 -.25 ()
T1_path 126.25 58.625 .25 .25 -.25 -.25 ()
T1_path 125 59.375 .25 .25 -.25 -.25 ()
.376471 .326797 .261438 .0732026 T1_Text
T1_gsave
T1_path 125.75 58.625 .25 .25 -.25 -.25 ()
.298039 .223529 .152941 .2 T1_Text
T1_gsave
T1_path 126 58.625 .25 .25 -.25 -.25 ()
.219608 .121569 .0431373 .321569 T1_Text
T1_gsave
T1_path 126.5 58.625 .25 .25 -.25 -.25 ()
.317647 .207843 .164706 .145098 T1_Text
T1_gsave
T1_path 126.75 58.625 .25 .25 -.25 -.25 ()
.258824 .0901961 .0627451 .215686 T1_Text
T1_gsave
T1_path 127 58.625 .25 .25 -.25 -.25 ()
.27451 .815686 .584314 .152941 T1_Text
T1_gsave
T1_path 127.25 58.625 .25 .25 -.25 -.25 ()
.137255 .407843 .290196 .576471 T1_Text
T1_gsave
T1_path 127.5 58.625 2.70398 .710403 -2.70398 -.710403 ()
0 0 0 1 T1_Text
T1_gsave
T1_path 125.25 58.875 .25 .25 -.25 -.25 ()
T1_path 126 58.875 .25 .25 -.25 -.25 ()
.139216 .113725 .00196078 .396078 T1_Text
T1_gsave
T1_path 125.5 58.875 .25 .25 -.25 -.25 ()
.294118 .65098 .396078 .152941 T1_Text
T1_gsave
T1_path 125.75 58.875 .25 .25 -.25 -.25 ()
.211765 .380392 .196078 .27451 T1_Text
T1_gsave
T1_path 127 58.875 2.45398 .25 -2.45398 -.25 ()
.282353 .8 .560784 .14902 T1_Text
T1_gsave
T1_path 127.25 58.875 2.45398 .25 -2.45398 -.25 ()
.141176 .4 .278431 .572549 T1_Text
T1_gsave
T1_path 125 59.125 .25 .25 -.25 -.25 ()
.301961 .662745 .396078 .145098 T1_Text
T1_gsave
T1_path 125.25 59.125 .25 .25 -.25 -.25 ()
.254902 .117647 .0588235 .298039 T1_Text
T1_gsave
T1_path 125.25 59.375 .25 .25 -.25 -.25 ()
.352941 .0588235 .0901961 .14902 T1_Text
false sop
end
grestore
172.784 122.941 mo
146.984 122.941 li
146.984 67.5011 li
172.784 67.5011 li
172.784 122.941 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 142.576 391.065 ]ct
[26.3375 0 0 55.9782 4.13961 267.855 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 98 
/H 208 
/M[98 0 0 -208 0 208 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
XX=/u/O'&%"@b7'.OsKZaoDJL@@[4X"I-I9/1egJk6V2&A97WW"D4CG1Gc-5!W`]Jq\B;O)A`S^XX=/u
/O'&%"@b7'.Osle^An<A@@[4X"I-I9/1f3Ug^+#pA97WW"D4CG1GcE=q#CHs$l]!Y";i$n"pV7Y""5cq
D#AAZF\YRA6mjAY!4Dk0&9"R(qZ$dDVCp?u!8Rt1#m;)`E\/F4*sNl)AHJA.$,?Q1!!<<5)AN&K"[=AQ
,6._K-NbeN9R-JW"Ec"`,'F'181,di!!=!bTJ-3C#QYsC*<?/a!!)3hapA.jG\/f1*sa%kAH3nrNsQ-9
!9X=`":uaQ!!d$^AcMfS!!'>Q"=Z#cGBEe*"Ek>N6$<0K!_=[dZN((JKS:NG!!EESW?)*>!!:@E!:pN5
#m2Ju7kac^"=*tY%jCoo!fmWoec=P,!X',sq>^S9,u"7;![.OD\L7>'"">uRGPlObG7mDZqfDm1-RZ;%
""04E'`7q5#<nb5qZ$]A!!*!)\-W6iI4QlG*s<hr?7@#p*s.K0$/km7!!3<=;>L7oDClk*!!4;D!5p8W
-NbhS(O,e!"*YhIGklF_81,do!!>!G7gf.o!t/4g0E(tL!!:@E!4N7:3J%tlr#Z%i+@n=3qB#d"#moqu
bQ%\K(2!CC!FJ%c!!4;D!7*%Y-NbkX%sIkm"*Z@QGkZ:]81,dq!!>K_0*2%P"TSN=FaY;)!!:@E!4`C<
7YCmhr#Z"l2Ei_e*s.K0$24G<!!<9.)KPZS!DH&X!!4;D!88g[-Nbn^)g;.$"*Z[LGP-%Z81,du!!N?+
9rK6:qu?gILLh(j!!:@E!5&U@%T7iX,5`Mb0gd?;ocF3q#lk:D!!3KHD>F555ZmXY![.ODjX8b0"=Pff
3Hb7A"*ZsJGOonX81,e+!;?Hr#?RlG!W2p"30[/Do)Jj9!!'_>";"^]$6f?i"<]X$(FK&%p`BQu#mn<G
!s/iL<;QXs!]FT[!!4;D!:VA`-NbbK8RD:9"'.l'G4BYU81,e#!!<U@V(2?B""0Wl"n;QobQ%Y($/Gmj
'P;>.+T3Ab+<+Gb,k2rXNsQ-5!;ZZt!Y$&!qZ$[S/oU4Z![.OD_C#F6/kpWhF9H_M6m6aJFSU"[81,e%
!!<gST/?EF"!F'S!Ug!ibQ%Y3$.K7a)00@L+T3Ab+UqQS+n$KSNsQ-@!:^$j!Y6@K!!5kKBC5a$+TMM\
-NbeO6[8NN"a1qV7!3V>F94u\-c>ue(kIepqu?g"+Is\B!!:@E!;[#F#m2;s<AFCn"<mhK&0^E_!fmWo
h#QX=!X',fq>^S1/kPC0![.OD`[:p=0faK#FT-@aG7[&Rl?!(u-RZn6"!WbZ)>jI:""ffklMq"ebQ%X_
#m2W/74\9X"<mtH.Nn%!!fmWokQ'K?!X'3#q>^S:2&tl]![.ODb:!9:""?#OGPlObG8EDek]?ks-R["9
"9C$?@M&G;!t.\]0D#8;!!:@E!6GNM$8R2\./Y.h-5'$0kT9ke#mp2'ec5aT(0UJ6!GFLV!!4;D!7iOj
-NbhV&pO7q"*Z"JGij)L81,e-!!>0K57%/e!u>I"-N*r0!!:@E!6PTM4adYar#Z"j,sa6I*s.K0$2sqM
!!<9-(i9$K!EheO!!4;D!9#<l-Nbh['R0Is"*ZFFGN<iI81,e0!!EBlTI'd>!!E9GH>",U!!:@E!6kfQ
$qYaF,lA_d001R6ko]gF!fmWobQ%\L)K#<N!D6GR!!4;D!:2)n-Nbkb/9Ul4"*cU<GiEfH81,e2!!EI(
V&KI5!!=j'8Ij_[!mCWEcNs^a=*Fflr#Z"s58#F9+7UESNsQ-=!!<6/)diFA!CUV[!!4;D!;@kq-NkhK
794R/F9?MG&U3/T!_=[dg&UmJ!s`87-MmcF230HrhuEi&!!(CQ";#*f)^5/%"<]Ho"=<pejrXYc#mnuZ
!s/iM2u<RV$or4_!!+5C!!(Iq""5coD#AAXF\tLGG2@<B81,eH!:Kmi$uW4%qZ$^DQluLe!!:@E!7M5W
'l\=K+T3A_+;Y)\!$^8A!fmWodf9IO%N?,Z!!55:C$#Ej!!4;D!7`G!.5+D?r,`'b/4V76giNTg-R\B`
jo>JsGG$Pc!!<6BT,lYd!mCWEeHl<sF([B.*s<bj?3DG,*s.K0$02*W!!397+Sl'>?7fL<!!4;D!7rS#
.53i-r,`$b'gtpuFPLs>81,e:!!=6oLEcWr!s9m>,iJb!!!:@E!7qMZ-$Dm6r#Z%c!*L*\g)gBW#mp&#
kl:bg'05mh!c9VQf`2's!!(\"""H&RGQ)[fFED^<5',=t!_=[df`2+&O(T7+!!<E^OYl>'mJm=4!!([Y
"#"sO/GpRm,m@""+P7b;NsQ-h!8mhY"r1)5!!7+!$J,7Z+TMMu-NtkF.5_uer,`$b(bg3bF94u\-eeV'
1RL]Aqu?g-8U;lX!94%\bQ%Xt#m328'I`l$""4mF1tE`N+--^7g].EW"rLqJ!!-_)e,TOn!!)41p*Tql
2\:01F9?_5-[4$]!_=[dh>dZZ5GKt;qu?g8ASW:`!8%8QbQ%Y"#m:T(K`i\!*s4&E/M>p&ocF6r#moDf
!XBT_q>^Os<71aJ+TMN6-g`8`.m"Vkr,`$c2Bd:lF94u\-f=t-!Cs+6!W2p",_]P9d/X6l!!(p`":@hU
!$_=_"#*(d.-Mc<*s.K0$/Y^a#od[V!!,Aici=+j!!*!Gj<k$[5WNubF9?eP(3e)H!_=[diW&r^!`Z3B
qZ$^VO\#f(!!:@E!9+:f%Te#c+T3Ab+?*"+-Li28*s.K0$/kjc#oce=!!,&mdfB:G![.ODj<k$X/Orq@
F9H_m57r+aF94u\-gUj/!!<U=W$qNC""KNd"3gfIbQ%Y(#m1lPF<19$"<epd!@%@^e/naQ#moYm!s/oN
0`(hO.Q28$!:^$j+TMN)-NbbL9m?MW"Ed0t,'D(N!_=[dpAj[_!toRJ3;`aZ!?mRG!QtHEbQ%Y*#m2)_
CH)/5![/.O!<==e*s.K0$0D3i!tH4NqZ$[f3+h7Pjo>H+!!)41"">lgGl2XdFWrt<Fie_+81+BbkPt]'
IZ5fS!!E<CNunDE!!:@E!9a^j,'Hia1]/<t+TP.J+NY],NsQ-V!!3980_tbNAiWBL!8@JT+TMN--NbeO
3I(ID"*P8?C<q"sF94u\-gC[6+,kjnqu?g#/s.g,!!:@E!:U<l#m2Q)6neH["=!tB/0MtT!fmWol2Ukg
'0Q*k!cL%8`W-&`!!)@5"">uNGPuUdFE\NbGf4\*81,eO!!=U5A.e_>!s_D[1?eeo!!:@E!:1!o/q>8u
r#Z%g&l1G/boca'!fmWoli7(j'it/2!GFI1!!4;D!:M9<-RpqfGPlObGTo%i_K5iM-R\?_"9C?L70`Yi
!to!q,4Y`]!!:@E!:L3s$9EYG-2\he.jRJ8eK=3$!fmWomJm:n(2NaH!Eqe*!!4;D!;\);-Nbk[&9dtn
"*Z:DGJJ;%81,eT!!EBjU+-3A!!=<`CDZjJ`W-(a!!)Nq":ReK!$hC`""uG^/)DB.*s.K0$1Ior#o[dZ
!!,nq^]4H:+TMN5-Nbna-[#?/"*c@4GJ8/#81,eV!!EL%V&BC4!!"POF[ckT!!:@E!:pL"%odiW+oNJc
+>P_a.H_f**s.K0$1e-!!=BfVq>^OlBupAJ!!4;D!;.]B-nIbZFo6=`EAeDQ]Q=3G-R\Qe!=<*6V]kp;
"#GW`#J:$<bQ%Y9#m:lLFql2!*s<]A5lrD&+3bl/NsQ-c!!<61*('N&!Y.P8dK&P4![.ODpEp%k/k]dR
F9H_`5o+[UF94u\-iO,B!!<XCV(VWF"!j0Y"1eI6bQ%Y;#m:uWE$le,*s<]&;ue-<+2T*$NsQ-e!!<94
)^,"X!]r8UgAp+2![.ODq'Q7m/l$]hF9=!_06Y$Nr,`!2-R\]i!tf[J1A_%R*M=>P\,ZTS!!)g$";u8o
2'Di>"!@\N"oojW*s.K0$2FQ&!Y6:I!!6LZ>N>e6!!4;D!;e,G.53o/r,`$`'hVNGFRaGS81,e^!!=-l
M^&'!!s'aE-a`pUbQ%Y?#m2Au9J?;c"<mhR)^)R2!fmWoqZ$[#&iTRd!c9>Bm/Y6.![.ODr?h[r1+[YI
F9?[t6Zp[rk&^Yq-R\im"!s"I'`7q5"uDW*ZN($M!!!#t#m2`,1FrAF"!e"N27"A+NsQ-k!!3<=:AOql
D_VIi!58F=+TMKi-Rgc7Gl)[d'JXjaFPCmC81,bb!&L:2/Gp1a*(53+\cDL*#g<8K#miVY<&FM'""k'E
1pJ,-NsQ*n!<s8rq>^P48cA^r!!4;D!!4Su1\a-6;6P'F81,c()s6sD!KjSU!5AL;bQ%Vf,J!V:!DRL^
+5@qANsQ*q";^e5!<F:O!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW
*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+
NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr
!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9
q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%
-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L
!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV
"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG
!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi
-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao
3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL
0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90
/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ss
FP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf
"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g
!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlo
d.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK
!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;EL
nc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?
ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:Bgj
bQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH
!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3
O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la
!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b
+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW
*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I
#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m
!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),
&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+
#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BR
YQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO
!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2
!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao
3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL
0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%
9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9
gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@
81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlo
d.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA
$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-J
VQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$m
bQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH
#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsm
q#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY
$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>
Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0Z
NsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3
#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3
&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+
#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W
!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:(
"X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG
!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi
-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-R
q(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90
/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"
FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@
81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.n
q$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK
!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;EL
e,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!
d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g(
"j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH
!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3
O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY
$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB
*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/
#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr
!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m
!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9
q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*
!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BR
fDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O
!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG
!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi
-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL
0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%
9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tC
FL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQp
q/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f
"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq
-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb
!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA
$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;EL
d/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>s
e,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3E
bQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH
#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',
$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsm
q#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la
!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(
A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^j
ocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpO
NsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m
!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9
q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+
#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(
!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV
"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L
!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG
-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi
-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-R
q(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90
/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHm
r,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f
"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_
-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlo
d.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK
!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-J
VYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QN
VQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9Z,3-RSlod.n"L,c7dG
"t[Uk!!rsmq#^X(Ab@.Y*sWo5Ta;#*!"\l*!=:.+!8.>V-63'd-RUnL0``k!]6*jj"*H=b/H.!u!!(CA
$3;ELZ2b.NVGdWu!!rsmq#^[)AKS9$#pBLr<t5NC!!!Q*!!*BRirIF+!aHZPrW!!I-TLoV!A-saFRXAS
FVQtgr$MOG!7:NK!@4PM!!E<LUdY@`!!3H5O8/kY$"^Ld"<mhr8dkS(!WW32q#CF%-gguT!!7!V#lFZ(
-RUnL0``k!d<+Pn"*Y86.f(Lo!!(CA$3;EL[f?I724=M)q>^R'$'4la!=<>H*s3hnHp7B5!WW32q#CF%
-i!bV!!7*V#PnE%-RUnL0``k!giVCp"*YhC.JP7l!!(CA$3;EL^B"-2!teRo./3cD#ml[g!s&^>\K:o'
*dKF6#m(),&,H8-!!t$_!!6C?"o&'!-RUnL0``k!kB,6r"*Z^Z.J>+j!!(CA$3;ELaoLu4"!N8L+8,[9
#ml[g!s&^>],q,/7<L!P#m1J6!"\l*!=:-b!!5:s"SMfs-RUnL0``k!noW)t"*dHl..ekg!!(CA$3;EL
eH"h6""g$f(%_J-#ml[g!s&^>]cRA7?ud7ooa(["!"\l*!=:-d!!4;T"7uQp-RUnL0``k!rH,r!"*$sd
..S_e!!(CA$3;EL^An?mULt&,!!3H5O8/kY$"`WKclWB50lCV=nd,?t!"\l*!=:.'!:0[f%N,`Ync/_=
-TLoV!A-s]F9?Y\6nJ0^p*TnA!7:NK!@4PY!!=IC=U"9p!XT0oq#^X(Ac*Xj*s<]$F'K4E#m(),&,?2+
#q+U1irB-H)[l*7![f?Tq(Vn%9>koQFWLQF/+"\c!!(CA$3;EL_uKl?+Jqcu!!3H5O8T1Z!s&^>`#f(*
!.I`2#m(),&,?2+#q,!<g&M4i)@-E4!!4Mq3;G90/PF?1qK)g`&i_E--NX8Jd.n"L,c8Q]"9pNO4TY$P
r;Zm*$'4la!=<>W*s<klI7"A.#m(),&,?2+#q,BGd/X5c)$oO.![f?Tq(Vn%9A"@VF9?b+1b.`;!WW5I
q$I-JVT8`>%SMs<p]0jb!XT0oq#^X(A]Pqq.2@%bkm7Ck!"\l*!XU4Sa8c<Q('Xg)!!4Mq3;G90/PG,G
k]?oO.l&R:-NX8Jd.n"L,c8]a!uYm0,3Jq-#ml[g!s&^>ar^^;0Qei-#m(),&,?2+#q*gp!_j@3k5YQ2
-TLoV!A-t4FPh0BGXaA9jX1*0!7:NK!@4Pi!;lg!-^T2tjT#>g$'4la!=<>]*s49"F<KrWq$@*&!"\l*
!=:-s!!4S]"Q]Ub-RUnL0``k!q/k20"*mWo.,uZV!!(CA$3;ELg]6pG"#R#r&*!Wk#ml[g!s&^>c6!-J
DJp?b$18*$!!!Q*!!*BRbl@e`%KbYj![f?TqCr%+/PFH4!aA/Gi$SR+!7:NK!@4Q*!9sOd.A^>Si;`oc
$'4la!=<>b*sNi0Ea]Fa$0)<n!!!Q*!!*BRci=,$)@PL(!rs\r3;G90/PFQ7"*HFd/)DWT!!(CA$3;EL
nc7YL"9BR;:]oST!XT0oq#^X(A^qk,+!2[4E`EP*#m(),&,?2+#q+.$!a$?Il2^JW![f?Tq(Vn%9@\+d
FqHbcga<.'!7:NK!@4Q@!8.>T"Xp!0!o3hX#ml[g!s&^>eK4o>!..6Eh$F,_!"\l*!=:.D!9=+]E#K#;
!!4Mq3;G90/PF];!d>>9!%Q\M!WW5Iq$I-JVUkeM$U:"9jT+uS!XT0oq#^X(A_/"+-4YAbg'If\!"\l*
!=:.O!8@JUC)@-VgAh:&-TLoV!A-t%FSg.^GU,'ofI$_#!7:NK!@4Pq!!<jDM^IillMptm$'4la!=<>j
*s4#>GV7VT!WW32r;ccr!=:.+!!?4:"Td9V![f?Tq(Vn%9BpWiF9?_I0IbR#!WW5Iq$I-JVV;(Q++o+_
pAj+O!XT0oq#^X(A_S:/01L+/g'R]a!WW32q#CF%-e\P%3t_YH!!4Mq3;G90/PGbYl#[#P:G+'F-NX8J
d.n"L,c9At">?Nn&-15\!XT0oq#^X(A_nL3+>mqV(ukqn#m(),&,?2+#q+L.!ZV^Qe,TOt-TLoV!\I&e
i,f'78hDI>-NX8Jd.n"L,c9T%r;ZpPUM("_!!3H5O8/kY$"`$:"<]13C(fk>k6V1i!"\l*!=:.2!!=8\
%0FrX![f?Tq(Vn%9B($qF[8AFcR/bo!7:NK!@4Q1!;-<p!?e(8"jd5N#ml[g!s&^>iZA:H%WPP[oa0C[
!WW32q#CF%-fG%,9,e2h!;QTr-RUnL0``k!jE(NJ*'Pl$c6iYn!7:NK!@4Q<!:0[g![4.*"O6uK#ml[g
!s&^>j<"LL!-CmCrX$sY!WW32q#CF%-fY1/CDmK[i;i9G![f?Tq(Vn%9BL<uG7QV^b9m>k!7:QL!X^3M
jo>Mh31Do0bQ%\N$'4la!=<?#*sE`5#(/WCbR"=N!"\l*!=:.8!!7-W#O)6K!!4Mq3;G90/PG;L"*YhC
.`s+@-NF.nq$I-JVW\!_$s8ZE!QkBD#ml[g!s&^>nfRTJ"=PF>1^_A3!WW32q#CF%-g(I2>nmS7!8%8Q
-RUnL0``k!l?!,P1GL?--hShg!!(CA$3;ELl2Uo&HA3H\!!3H5O8/kY$"a&WmN2N^5'SBo#m(),&,?2+
#q+s;!^RJ'`rH/g-TLoV!A-t7FSp4_GX=&3`?t]e!7:NK!@4Q/!!=d4H5#ZGf`2'[$'4la!=<?)*s<]C
<-9/,$2+Z,!!!Q*!!*BRlMpu;&-KlO![f?Tq(Vn%9Dio'F9?GT/L\La!WW5Iq$I-JVX=Ed1T"ptp&NA<
!XT0oq#^X(Aa^]D+>@\K(YK,\#m(),&,?2+#q,-@!tZ@\"2b*?-RUnP1&Wg-/PGVU"EdI//1A=^!WW5I
q$I-JVXOQh,GJEL!!'n:!XT0oq#^X(AapiF+Vem$&`O,T#m(),&,?2+#q,3B"$mh6"2t9=!!4Mq3;G90
/PG\W"*PtT/&!A4!!(CA$3;ELo`,0r!!+"28d2s0!XT0oq#^X(Ab-uH+p)g]%dOGO#m(),&,?2+#q,9D
"(W;V!R:]9!!4Mq3;G90/PGbY"*P8;._I,1!!(CA$3DKM!;6Bq">--,"2+[9#ml[g!s&^>ocF;^!d?s>
oEiYH!WW32q#CF%-hIB?EZ#,5!9X=`-RUnL0``k!pN-L])DiqT-NX8Jd.n"L,c:;9":@qm0EJcc!XT0o
q#^X(AbR8L-Pq=m$N1:G#m(),&,?2+#q,EH!bE/PhZ2F3![f?Tq(Vn%9DNZ3G:PBs^aJq*!WW5Iq$I-J
VYL2o(2SmQ\,ZR:$'4la!=<?5*s3uIHRZH2!WW32q#CF%-hmZC9bRZn!7:cJ-RUnL0``k!qfDpb4"r,*
-gi>`!!(CA$3;ELqZ$^DKRF]G!!3H5O88q[!srQ9*s45hF!.mt!WW32q#CF%-i*fE3"Z;`!6,!?-RUnL
0``k!rH&-c:+dsC-fZQU!!(CA$3;ELr;ZpXT5P=L!!<3-$'4la!=<?9*s4K8CDjJc!WW32q#CF%-iF#I
!ZDRNq>e,-![f?Tq(W++96>;Y81Z1D-eKdJ!!(CA$3qiR!!"@C@LKmMo`,%"$'4la#74r`+<GW8'XA#H
!!!Q*!!NZV!!"bn!=T%8!!4Mq3;G93/Q">j/$C<%!!(CA$3_]Y*hlF7o`2W)!XT0oq#^d,D[:G`&(h3A
#m(),&,?2/#p3:h#m%X<p&G.A-SY?R!]2S]XX=/M!4Vcj"/<:l!r`2)!!3H5UA87#DmW"Bi<dd9!WW36
q$7$0('qeXlMpu6-SY?R!]2S]XX=/M!4VonrKdV\\3^8"!!3H5UA87#DmW"Blj:Q9!WW36q$7$0('r1c
huJ9~>

%%EndBinary
grestore
np
210.404 114.241 mo
192.704 114.241 li
192.704 76.141 li
210.404 76.141 li
210.404 114.241 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 142.576 391.065 ]ct
[18.0687 0 0 38.4699 49.944 276.639 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 98 
/H 208 
/M[98 0 0 -208 0 208 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 98 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
XX=/u/O'&%"@b7'.OsKZaoDJL@@[4X"I-I9/1egJk6V2&A97WW"D4CG1Gc-5!W`]Jq\B;O)A`S^XX=/u
/O'&%"@b7'.Osle^An<A@@[4X"I-I9/1f3Ug^+#pA97WW"D4CG1GcE=q#CHs$l]!Y";i$n"pV7Y""5cq
D#AAZF\YRA6mjAY!4Dk0&9"R(qZ$dDVCp?u!8Rt1#m;)`E\/F4*sNl)AHJA.$,?Q1!!<<5)AN&K"[=AQ
,6._K-NbeN9R-JW"Ec"`,'F'181,di!!=!bTJ-3C#QYsC*<?/a!!)3hapA.jG\/f1*sa%kAH3nrNsQ-9
!9X=`":uaQ!!d$^AcMfS!!'>Q"=Z#cGBEe*"Ek>N6$<0K!_=[dZN((JKS:NG!!EESW?)*>!!:@E!:pN5
#m2Ju7kac^"=*tY%jCoo!fmWoec=P,!X',sq>^S9,u"7;![.OD\L7>'"">uRGPlObG7mDZqfDm1-RZ;%
""04E'`7q5#<nb5qZ$]A!!*!)\-W6iI4QlG*s<hr?7@#p*s.K0$/km7!!3<=;>L7oDClk*!!4;D!5p8W
-NbhS(O,e!"*YhIGklF_81,do!!>!G7gf.o!t/4g0E(tL!!:@E!4N7:3J%tlr#Z%i+@n=3qB#d"#moqu
bQ%\K(2!CC!FJ%c!!4;D!7*%Y-NbkX%sIkm"*Z@QGkZ:]81,dq!!>K_0*2%P"TSN=FaY;)!!:@E!4`C<
7YCmhr#Z"l2Ei_e*s.K0$24G<!!<9.)KPZS!DH&X!!4;D!88g[-Nbn^)g;.$"*Z[LGP-%Z81,du!!N?+
9rK6:qu?gILLh(j!!:@E!5&U@%T7iX,5`Mb0gd?;ocF3q#lk:D!!3KHD>F555ZmXY![.ODjX8b0"=Pff
3Hb7A"*ZsJGOonX81,e+!;?Hr#?RlG!W2p"30[/Do)Jj9!!'_>";"^]$6f?i"<]X$(FK&%p`BQu#mn<G
!s/iL<;QXs!]FT[!!4;D!:VA`-NbbK8RD:9"'.l'G4BYU81,e#!!<U@V(2?B""0Wl"n;QobQ%Y($/Gmj
'P;>.+T3Ab+<+Gb,k2rXNsQ-5!;ZZt!Y$&!qZ$[S/oU4Z![.OD_C#F6/kpWhF9H_M6m6aJFSU"[81,e%
!!<gST/?EF"!F'S!Ug!ibQ%Y3$.K7a)00@L+T3Ab+UqQS+n$KSNsQ-@!:^$j!Y6@K!!5kKBC5a$+TMM\
-NbeO6[8NN"a1qV7!3V>F94u\-c>ue(kIepqu?g"+Is\B!!:@E!;[#F#m2;s<AFCn"<mhK&0^E_!fmWo
h#QX=!X',fq>^S1/kPC0![.OD`[:p=0faK#FT-@aG7[&Rl?!(u-RZn6"!WbZ)>jI:""ffklMq"ebQ%X_
#m2W/74\9X"<mtH.Nn%!!fmWokQ'K?!X'3#q>^S:2&tl]![.ODb:!9:""?#OGPlObG8EDek]?ks-R["9
"9C$?@M&G;!t.\]0D#8;!!:@E!6GNM$8R2\./Y.h-5'$0kT9ke#mp2'ec5aT(0UJ6!GFLV!!4;D!7iOj
-NbhV&pO7q"*Z"JGij)L81,e-!!>0K57%/e!u>I"-N*r0!!:@E!6PTM4adYar#Z"j,sa6I*s.K0$2sqM
!!<9-(i9$K!EheO!!4;D!9#<l-Nbh['R0Is"*ZFFGN<iI81,e0!!EBlTI'd>!!E9GH>",U!!:@E!6kfQ
$qYaF,lA_d001R6ko]gF!fmWobQ%\L)K#<N!D6GR!!4;D!:2)n-Nbkb/9Ul4"*cU<GiEfH81,e2!!EI(
V&KI5!!=j'8Ij_[!mCWEcNs^a=*Fflr#Z"s58#F9+7UESNsQ-=!!<6/)diFA!CUV[!!4;D!;@kq-NkhK
794R/F9?MG&U3/T!_=[dg&UmJ!s`87-MmcF230HrhuEi&!!(CQ";#*f)^5/%"<]Ho"=<pejrXYc#mnuZ
!s/iM2u<RV$or4_!!+5C!!(Iq""5coD#AAXF\tLGG2@<B81,eH!:Kmi$uW4%qZ$^DQluLe!!:@E!7M5W
'l\=K+T3A_+;Y)\!$^8A!fmWodf9IO%N?,Z!!55:C$#Ej!!4;D!7`G!.5+D?r,`'b/4V76giNTg-R\B`
jo>JsGG$Pc!!<6BT,lYd!mCWEeHl<sF([B.*s<bj?3DG,*s.K0$02*W!!397+Sl'>?7fL<!!4;D!7rS#
.53i-r,`$b'gtpuFPLs>81,e:!!=6oLEcWr!s9m>,iJb!!!:@E!7qMZ-$Dm6r#Z%c!*L*\g)gBW#mp&#
kl:bg'05mh!c9VQf`2's!!(\"""H&RGQ)[fFED^<5',=t!_=[df`2+&O(T7+!!<E^OYl>'mJm=4!!([Y
"#"sO/GpRm,m@""+P7b;NsQ-h!8mhY"r1)5!!7+!$J,7Z+TMMu-NtkF.5_uer,`$b(bg3bF94u\-eeV'
1RL]Aqu?g-8U;lX!94%\bQ%Xt#m328'I`l$""4mF1tE`N+--^7g].EW"rLqJ!!-_)e,TOn!!)41p*Tql
2\:01F9?_5-[4$]!_=[dh>dZZ5GKt;qu?g8ASW:`!8%8QbQ%Y"#m:T(K`i\!*s4&E/M>p&ocF6r#moDf
!XBT_q>^Os<71aJ+TMN6-g`8`.m"Vkr,`$c2Bd:lF94u\-f=t-!Cs+6!W2p",_]P9d/X6l!!(p`":@hU
!$_=_"#*(d.-Mc<*s.K0$/Y^a#od[V!!,Aici=+j!!*!Gj<k$[5WNubF9?eP(3e)H!_=[diW&r^!`Z3B
qZ$^VO\#f(!!:@E!9+:f%Te#c+T3Ab+?*"+-Li28*s.K0$/kjc#oce=!!,&mdfB:G![.ODj<k$X/Orq@
F9H_m57r+aF94u\-gUj/!!<U=W$qNC""KNd"3gfIbQ%Y(#m1lPF<19$"<epd!@%@^e/naQ#moYm!s/oN
0`(hO.Q28$!:^$j+TMN)-NbbL9m?MW"Ed0t,'D(N!_=[dpAj[_!toRJ3;`aZ!?mRG!QtHEbQ%Y*#m2)_
CH)/5![/.O!<==e*s.K0$0D3i!tH4NqZ$[f3+h7Pjo>H+!!)41"">lgGl2XdFWrt<Fie_+81+BbkPt]'
IZ5fS!!E<CNunDE!!:@E!9a^j,'Hia1]/<t+TP.J+NY],NsQ-V!!3980_tbNAiWBL!8@JT+TMN--NbeO
3I(ID"*P8?C<q"sF94u\-gC[6+,kjnqu?g#/s.g,!!:@E!:U<l#m2Q)6neH["=!tB/0MtT!fmWol2Ukg
'0Q*k!cL%8`W-&`!!)@5"">uNGPuUdFE\NbGf4\*81,eO!!=U5A.e_>!s_D[1?eeo!!:@E!:1!o/q>8u
r#Z%g&l1G/boca'!fmWoli7(j'it/2!GFI1!!4;D!:M9<-RpqfGPlObGTo%i_K5iM-R\?_"9C?L70`Yi
!to!q,4Y`]!!:@E!:L3s$9EYG-2\he.jRJ8eK=3$!fmWomJm:n(2NaH!Eqe*!!4;D!;\);-Nbk[&9dtn
"*Z:DGJJ;%81,eT!!EBjU+-3A!!=<`CDZjJ`W-(a!!)Nq":ReK!$hC`""uG^/)DB.*s.K0$1Ior#o[dZ
!!,nq^]4H:+TMN5-Nbna-[#?/"*c@4GJ8/#81,eV!!EL%V&BC4!!"POF[ckT!!:@E!:pL"%odiW+oNJc
+>P_a.H_f**s.K0$1e-!!=BfVq>^OlBupAJ!!4;D!;.]B-nIbZFo6=`EAeDQ]Q=3G-R\Qe!=<*6V]kp;
"#GW`#J:$<bQ%Y9#m:lLFql2!*s<]A5lrD&+3bl/NsQ-c!!<61*('N&!Y.P8dK&P4![.ODpEp%k/k]dR
F9H_`5o+[UF94u\-iO,B!!<XCV(VWF"!j0Y"1eI6bQ%Y;#m:uWE$le,*s<]&;ue-<+2T*$NsQ-e!!<94
)^,"X!]r8UgAp+2![.ODq'Q7m/l$]hF9=!_06Y$Nr,`!2-R\]i!tf[J1A_%R*M=>P\,ZTS!!)g$";u8o
2'Di>"!@\N"oojW*s.K0$2FQ&!Y6:I!!6LZ>N>e6!!4;D!;e,G.53o/r,`$`'hVNGFRaGS81,e^!!=-l
M^&'!!s'aE-a`pUbQ%Y?#m2Au9J?;c"<mhR)^)R2!fmWoqZ$[#&iTRd!c9>Bm/Y6.![.ODr?h[r1+[YI
F9?[t6Zp[rk&^Yq-R\im"!s"I'`7q5"uDW*ZN($M!!!#t#m2`,1FrAF"!e"N27"A+NsQ-k!!3<=:AOql
D_VIi!58F=+TMKi-Rgc7Gl)[d'JXjaFPCmC81,bb!&L:2/Gp1a*(53+\cDL*#g<8K#miVY<&FM'""k'E
1pJ,-NsQ*n!<s8rq>^P48cA^r!!4;D!!4Su1\a-6;6P'F81,c()s6sD!KjSU!5AL;bQ%Vf,J!V:!DRL^
+5@qANsQ*q";^e5!<F:O!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW
*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+
NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr
!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9
q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%
-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L
!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV
"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG
!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi
-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao
3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL
0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90
/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ss
FP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf
"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g
!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlo
d.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK
!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;EL
nc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?
ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:Bgj
bQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH
!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3
O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la
!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b
+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW
*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I
#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m
!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),
&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+
#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BR
YQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO
!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2
!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao
3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL
0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%
9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9
gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@
81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlo
d.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BRfDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA
$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-J
VQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$
!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$m
bQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH
#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsm
q#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tCFL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY
$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQpq/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>
Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0Z
NsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3
#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3
&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;ELd/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*
!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>se,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+
#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3EbQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W
!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:(
"X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG
!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi
-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-R
q(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90
/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^jocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"
FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpONsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@
81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_
-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb
!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.n
q$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK
!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;EL
e,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!
d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g(
"j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH
!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3
O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY
$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHmr,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>
q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB
*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/
#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlod.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr
!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m
!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9
q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QNVQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*
!=:-u!94%_+TMKi-TLoV!A-sKF9ZhX-RSlod.n"L,c7aF"j?rH#ml[g!s&^>ocLdf"cirr!!!Q*!!*BR
fDsP("X*jG-RUnL0``k!]6*^f"\:!g!!(CA$3;ELY5eaM!!!<3O8/kZ$"Y3_*sI]3#ljr9q#CF%-fY3O
!!OMG!%0-Rq(Vn%9?))=F9P2_-NF.nq$I-JVQTt'bQ%VL$'4la!=<>@*sI]3#ljr9q#CF%-gguO!!OMG
!%0-Rq(Vn%9@7k=F9P2_-NF.nq$I-JVR-@$!!URH!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.L!4Mq3+TMKi
-TLoV!A-t"FOYC981,bb!7:NK!@4PW!:^$mbQ%VL$'4la!=<>@*sI]3#ljr9q>^Qs#q)nV"X*jG-RUnL
0``k!kB+gf"\:!g!!(CA$3;ELaoLQ("j?rH#ml[g!s&^>Y9*e+#m1J6!"\l*!=:-W!!OMG!%0-Rq(Vn%
9Cd2=F9P2_-NF.nq$I-JVUY\$!!URH!!rsmq#^X(A[iiW*sI]3#ljr9q#CF%-a*LR+TMKi-TLoV!A-tC
FL-&j81,bd!!(CA$3;ELY5eaM!!!<3O8/kY$"`WK^E3W?#mgS3&,?2+#q+4&g].L$!!"Ao3;G90/PEQp
q/cd2-RSlod.n"L,c7aF"j?rH#ml[g!s&^>r#`9f"cirr!!!Q*!!*BRhZ2%("X*jG-RUnL0``k!_K>3f
"\:!g!!(CA$3;ELY5eaM!!!<3O8T1Z!s&^>Y9*q/#mgS3&,?2+#q,!<`W-/c!!"Ao3;G90/PF?1j)bGq
-RSlod.n"L,c7dG"oujI!!rsmq#^X(AZm0ZNsQ*m!"\l*!=:.H!4r47+TMKi-TLoV!A-ssFP([=81,bb
!7:NK!@4PS!;-<qbQ%VL$'4la!=<>@*sI]3#ljr9q#CI&-NL@N"X*jG-RUnL0``k!j)iOf"\:!g!!(CA
$3;EL`W59("j?rH#ml[g!s&^>Y9*q/#mgS3&,?2+#q)nV"X*jG-RUnL0``k!mW?<f"\:!g!!(CA$3;EL
d/`&("j?rH#ml[g!s&^>Zlf2f"cirr!!!Q*!!*BRY5e_L!!"Ao3;G90/PGn][r_dE-RSlod.n"L,c9>s
e,TZr!!!<3O8/kY$"^jnnK.pq#mgS3&,?2+#q)nV"X*jG-RUnM0`j']9<WF@81,bb!7:NK!@4Q*!6G3E
bQ%VL$'4la!=<>[+6FXKNsQ*m!"\l*!=:-W!!+5C!rs\r3;G90/PE9h"\:!g!!(CA$3;ELnc6B("j?rH
#ml[g!s&^>eK<Nf"cirr!!!Q*!!*BR\,c:("X*jG-RUnL0``k!YB0q=-RSlod.n"L,c:M?ZN('N!!!',
$'4la!=<>@*sI]3#ljr9q#CF%-h.2O!!OMG!%0-Rq(Vn%9@S(=F9P2_-NF.nq$I-JVRHR$!!URH!!rsm
q#^X(AZm0ZNsQ*m!"\l*!=:.O!42_0+TMKi-TLoV!A-t%FO>1681,bb!7:NK!@4PZ!:BgjbQ%VL$'4la
!=<>@*sI]3#ljr9r;ccr!=:-W!!OMG!%0-Rq(Vn%9BpW=F9P2_-NF.nq$I-JVTf,$!!URH!!rsmq#^X(
A[!6\+--^7!!!Q*!!*BRY5e_L!!"Ao3;G90/PGbY]6"3I-RSlod.n"L,c92ofDl*!!!!<3O8/kY$"^^j
ocF?u#mgS3&,?2+#q)nV"X*jG-RUnL0`iq"FKfij81,bb!7:NK!@4Q&!6kKIbQ%VL$'4la!=<>W+6jpO
NsQ*m!"\l*!=:-W!!OMG!%0-Rq(Vn%9<WF@81,bb!7:NK!@4Q1!5\^>bQ%VL$'4la!=<>b+5\.DNsQ*m
!"\l*!=:-\!;lg#+TMKi-TLoV!A-sJF9P2_-NF.nq$I-JVYL5$!!URH!!rsmq#^X(A_\BW*sI]3#ljr9
q#CF%-bfZO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:QL!X^3MY5eaM!!!<3O8/kY$"`9AaWC\I#mgS3&,?2+
#q*jqjo>Q.!!"Ao3;G90/PE9h!D"R?-NF.nq$I-JVQTt'bQ%VL$'4la!=<?.+2/g#NsQ*m!"\l*!=:.(
!8@JW+TMKi-TLoV!A-sSFSKq]81,bb!7:NK!@4PG!!URH!!rsmq#^X(Ac3^W*s.K0#m(),&,?2+#q)nV
"X*jG-RUnL0``k!nT;Nf"\:!g!!(CA$3;ELe,\8("j?rH#ml[g!s&^>[ibDf"cirr!!!Q*!!*BRY5e_L
!!"Ao3;G90/PH"`ZucIB-RSlod.n"L,c9H!d/X?o!!!<3O8/kY$"^sqmN2Un#mgS3&,?2+#q)nV"X*jG
-RUnP1&Wg-/PE9h"\:!g!!(CA$3;ELl2\g("j?rH#ml[g!s&^>bobsf"cirr!!!Q*!!*BRYQ+k-+TMKi
-TLoV!A-sJF9P2_-NF.nq$I-JVY'r$!!URH!!rsmq#^X(A_8*W*sI]3#ljr9q#CF%-bBBO!!OMG!%0-R
q(Vn%9<WF@81,bb!7:NK![OWCYQ+jN!!!<3O8/kY$"`-=bo[+M#mgS3&,?2+#q*^ml2Uu2!!"Ao3;G90
/PE9h"\:!g!!(CA$3;ELY5eaM!!!<3O8/kY$"`NH_B/rB#mgS3&,?2+#q++#hZ*g'!!"Ao3;G90/PEHm
r,`*5-RSlod.n"L,c7aF"j?rH#ml[g!s&^>q&d'f"cirr!!!Q*!!*BRg]5h("X*jG-RUnL0``k!^NB!f
"\:!g!!(CA$3;ELY5eaM!!!<3O88q[!srPB*sI]3#ljr9q#CF%-g(KO!!OMG!%0-Rq(Vn%9?MA=F9P2_
-NF.nq$I-JVQTt#bQ%_F#ml[g!s&^>Y9*q/#mgS3&,?2+#q,9D^&S<[!!"Ao3;G90/PFW9gN3Ti-RSlo
d.n"L,c8'Op](KA!!!<3O8/kY$"^:^"cirr!!!Q*!!*BRr;a/(![.OD![f?Tq(Vn%9<WF@81,bb!7:NK
!@4Q4!5AL;bQ%VL$'4la!=<>e+5@qANsQ*m!"\l*!=:-_!;QTu+TMKi-TLoV!A-sJF9P2_-NF.nq$I-J
VYgG$!!URH!!rsmq#^X(A`"TW*sI]3#ljr9q#CF%-c,lO!!OMG!%0-Rq(Vn%9<WF@81,bb!7:ZOr<`QN
VQTt'bQ%VL$'4la!=<?&+3#B+NsQ*m!"\l*!=:-u!94%_+TMKi-TLoV!A-sKF9Z,3-RSlod.n"L,c7dG
"t[Uk!!rsmq#^X(Ab@.Y*sWo5Ta;#*!"\l*!=:.+!8.>V-63'd-RUnL0``k!]6*jj"*H=b/H.!u!!(CA
$3;ELZ2b.NVGdWu!!rsmq#^[)AKS9$#pBLr<t5NC!!!Q*!!*BRirIF+!aHZPrW!!I-TLoV!A-saFRXAS
FVQtgr$MOG!7:NK!@4PM!!E<LUdY@`!!3H5O8/kY$"^Ld"<mhr8dkS(!WW32q#CF%-gguT!!7!V#lFZ(
-RUnL0``k!d<+Pn"*Y86.f(Lo!!(CA$3;EL[f?I724=M)q>^R'$'4la!=<>H*s3hnHp7B5!WW32q#CF%
-i!bV!!7*V#PnE%-RUnL0``k!giVCp"*YhC.JP7l!!(CA$3;EL^B"-2!teRo./3cD#ml[g!s&^>\K:o'
*dKF6#m(),&,H8-!!t$_!!6C?"o&'!-RUnL0``k!kB,6r"*Z^Z.J>+j!!(CA$3;ELaoLu4"!N8L+8,[9
#ml[g!s&^>],q,/7<L!P#m1J6!"\l*!=:-b!!5:s"SMfs-RUnL0``k!noW)t"*dHl..ekg!!(CA$3;EL
eH"h6""g$f(%_J-#ml[g!s&^>]cRA7?ud7ooa(["!"\l*!=:-d!!4;T"7uQp-RUnL0``k!rH,r!"*$sd
..S_e!!(CA$3;EL^An?mULt&,!!3H5O8/kY$"`WKclWB50lCV=nd,?t!"\l*!=:.'!:0[f%N,`Ync/_=
-TLoV!A-s]F9?Y\6nJ0^p*TnA!7:NK!@4PY!!=IC=U"9p!XT0oq#^X(Ac*Xj*s<]$F'K4E#m(),&,?2+
#q+U1irB-H)[l*7![f?Tq(Vn%9>koQFWLQF/+"\c!!(CA$3;EL_uKl?+Jqcu!!3H5O8T1Z!s&^>`#f(*
!.I`2#m(),&,?2+#q,!<g&M4i)@-E4!!4Mq3;G90/PF?1qK)g`&i_E--NX8Jd.n"L,c8Q]"9pNO4TY$P
r;Zm*$'4la!=<>W*s<klI7"A.#m(),&,?2+#q,BGd/X5c)$oO.![f?Tq(Vn%9A"@VF9?b+1b.`;!WW5I
q$I-JVT8`>%SMs<p]0jb!XT0oq#^X(A]Pqq.2@%bkm7Ck!"\l*!XU4Sa8c<Q('Xg)!!4Mq3;G90/PG,G
k]?oO.l&R:-NX8Jd.n"L,c8]a!uYm0,3Jq-#ml[g!s&^>ar^^;0Qei-#m(),&,?2+#q*gp!_j@3k5YQ2
-TLoV!A-t4FPh0BGXaA9jX1*0!7:NK!@4Pi!;lg!-^T2tjT#>g$'4la!=<>]*s49"F<KrWq$@*&!"\l*
!=:-s!!4S]"Q]Ub-RUnL0``k!q/k20"*mWo.,uZV!!(CA$3;ELg]6pG"#R#r&*!Wk#ml[g!s&^>c6!-J
DJp?b$18*$!!!Q*!!*BRbl@e`%KbYj![f?TqCr%+/PFH4!aA/Gi$SR+!7:NK!@4Q*!9sOd.A^>Si;`oc
$'4la!=<>b*sNi0Ea]Fa$0)<n!!!Q*!!*BRci=,$)@PL(!rs\r3;G90/PFQ7"*HFd/)DWT!!(CA$3;EL
nc7YL"9BR;:]oST!XT0oq#^X(A^qk,+!2[4E`EP*#m(),&,?2+#q+.$!a$?Il2^JW![f?Tq(Vn%9@\+d
FqHbcga<.'!7:NK!@4Q@!8.>T"Xp!0!o3hX#ml[g!s&^>eK4o>!..6Eh$F,_!"\l*!=:.D!9=+]E#K#;
!!4Mq3;G90/PF];!d>>9!%Q\M!WW5Iq$I-JVUkeM$U:"9jT+uS!XT0oq#^X(A_/"+-4YAbg'If\!"\l*
!=:.O!8@JUC)@-VgAh:&-TLoV!A-t%FSg.^GU,'ofI$_#!7:NK!@4Pq!!<jDM^IillMptm$'4la!=<>j
*s4#>GV7VT!WW32r;ccr!=:.+!!?4:"Td9V![f?Tq(Vn%9BpWiF9?_I0IbR#!WW5Iq$I-JVV;(Q++o+_
pAj+O!XT0oq#^X(A_S:/01L+/g'R]a!WW32q#CF%-e\P%3t_YH!!4Mq3;G90/PGbYl#[#P:G+'F-NX8J
d.n"L,c9At">?Nn&-15\!XT0oq#^X(A_nL3+>mqV(ukqn#m(),&,?2+#q+L.!ZV^Qe,TOt-TLoV!\I&e
i,f'78hDI>-NX8Jd.n"L,c9T%r;ZpPUM("_!!3H5O8/kY$"`$:"<]13C(fk>k6V1i!"\l*!=:.2!!=8\
%0FrX![f?Tq(Vn%9B($qF[8AFcR/bo!7:NK!@4Q1!;-<p!?e(8"jd5N#ml[g!s&^>iZA:H%WPP[oa0C[
!WW32q#CF%-fG%,9,e2h!;QTr-RUnL0``k!jE(NJ*'Pl$c6iYn!7:NK!@4Q<!:0[g![4.*"O6uK#ml[g
!s&^>j<"LL!-CmCrX$sY!WW32q#CF%-fY1/CDmK[i;i9G![f?Tq(Vn%9BL<uG7QV^b9m>k!7:QL!X^3M
jo>Mh31Do0bQ%\N$'4la!=<?#*sE`5#(/WCbR"=N!"\l*!=:.8!!7-W#O)6K!!4Mq3;G90/PG;L"*YhC
.`s+@-NF.nq$I-JVW\!_$s8ZE!QkBD#ml[g!s&^>nfRTJ"=PF>1^_A3!WW32q#CF%-g(I2>nmS7!8%8Q
-RUnL0``k!l?!,P1GL?--hShg!!(CA$3;ELl2Uo&HA3H\!!3H5O8/kY$"a&WmN2N^5'SBo#m(),&,?2+
#q+s;!^RJ'`rH/g-TLoV!A-t7FSp4_GX=&3`?t]e!7:NK!@4Q/!!=d4H5#ZGf`2'[$'4la!=<?)*s<]C
<-9/,$2+Z,!!!Q*!!*BRlMpu;&-KlO![f?Tq(Vn%9Dio'F9?GT/L\La!WW5Iq$I-JVX=Ed1T"ptp&NA<
!XT0oq#^X(Aa^]D+>@\K(YK,\#m(),&,?2+#q,-@!tZ@\"2b*?-RUnP1&Wg-/PGVU"EdI//1A=^!WW5I
q$I-JVXOQh,GJEL!!'n:!XT0oq#^X(AapiF+Vem$&`O,T#m(),&,?2+#q,3B"$mh6"2t9=!!4Mq3;G90
/PG\W"*PtT/&!A4!!(CA$3;ELo`,0r!!+"28d2s0!XT0oq#^X(Ab-uH+p)g]%dOGO#m(),&,?2+#q,9D
"(W;V!R:]9!!4Mq3;G90/PGbY"*P8;._I,1!!(CA$3DKM!;6Bq">--,"2+[9#ml[g!s&^>ocF;^!d?s>
oEiYH!WW32q#CF%-hIB?EZ#,5!9X=`-RUnL0``k!pN-L])DiqT-NX8Jd.n"L,c:;9":@qm0EJcc!XT0o
q#^X(AbR8L-Pq=m$N1:G#m(),&,?2+#q,EH!bE/PhZ2F3![f?Tq(Vn%9DNZ3G:PBs^aJq*!WW5Iq$I-J
VYL2o(2SmQ\,ZR:$'4la!=<?5*s3uIHRZH2!WW32q#CF%-hmZC9bRZn!7:cJ-RUnL0``k!qfDpb4"r,*
-gi>`!!(CA$3;ELqZ$^DKRF]G!!3H5O88q[!srQ9*s45hF!.mt!WW32q#CF%-i*fE3"Z;`!6,!?-RUnL
0``k!rH&-c:+dsC-fZQU!!(CA$3;ELr;ZpXT5P=L!!<3-$'4la!=<?9*s4K8CDjJc!WW32q#CF%-iF#I
!ZDRNq>e,-![f?Tq(W++96>;Y81Z1D-eKdJ!!(CA$3qiR!!"@C@LKmMo`,%"$'4la#74r`+<GW8'XA#H
!!!Q*!!NZV!!"bn!=T%8!!4Mq3;G93/Q">j/$C<%!!(CA$3_]Y*hlF7o`2W)!XT0oq#^d,D[:G`&(h3A
#m(),&,?2/#p3:h#m%X<p&G.A-SY?R!]2S]XX=/M!4Vcj"/<:l!r`2)!!3H5UA87#DmW"Bi<dd9!WW36
q$7$0('qeXlMpu6-SY?R!]2S]XX=/M!4VonrKdV\\3^8"!!3H5UA87#DmW"Blj:Q9!WW36q$7$0('r1c
huJ9~>

%%EndBinary
grestore
np
127.724 95.7711 mo
142.004 95.7311 li
142.004 94.7311 li
127.724 94.7711 li
cp
141.014 98.2411 mo
147.004 95.2211 li
140.994 92.2411 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
172.784 95.7311 mo
187.664 95.7211 li
187.664 94.7211 li
172.784 94.7311 li
cp
186.664 98.2211 mo
192.664 95.2211 li
186.664 92.2211 li
cp
f
/AWIJOU+DengXian-Identity-H findfont [12 0 0 -12 0 0 ]msf
232.864 91.8611 mo
(o\326o\341o\341o\263)
[7.43994 8.74805 8.74803 0 ]xsh
/AWIJOU+DengXian-Identity-H findfont [12 0 0 -12 0 0 ]msf
232.864 106.261 mo
(o\331o\370o\364p\007p\010p\005o\370)
[5.72406 6.16809 6.01208 3.81592 6.61192 4.06805 0 ]xsh
210.404 94.7211 mo
220.614 94.7211 li
220.614 95.7211 li
210.404 95.7211 li
cp
219.614 92.2211 mo
225.614 95.2211 li
219.614 98.2211 li
cp
f
39.4042 129.711 mo
37.4242 129.711 li
37.9242 130.211 li
37.9242 95.2811 li
37.4242 95.7811 li
88.0442 95.7811 li
88.0442 94.7811 li
36.9242 94.7811 li
36.9242 130.711 li
39.4042 130.711 li
cp
87.0442 98.2811 mo
93.0442 95.2811 li
87.0442 92.2811 li
cp
f
295.364 92.0011 mo
305.744 92.0011 li
305.744 91.0011 li
295.364 91.0011 li
cp
304.744 94.5011 mo
310.744 91.5011 li
304.744 88.5011 li
cp
f
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28617 <001C60D8A8C9B78C66ECA5FCAD2AAB40A4192A68649CE4047E4AFAECB
7CCE984F38B8B50E6233F27BD605D687743F24A7E136BA1908054D9AA8AAE8FA
60DFE236222616415444B0B8B81E9B590E20EC5E2AE4CA73CFE760E5978319FB
10D6E85D90B0F0670931F7021C1540F7F59AF2F4001DC35F63939A901107334C
C707991D976B1159441A0F1ACA86EE9A9885D2AA13CD06CBBC97DCCE8B0B6519
440F899D41BA7449252C8DAEFBE21085C577DFAE8E5250EB7438F2FCF6755F16
B841A2282B2> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
416.444 94.7211 mo
(o\311o\327)
[8.4599 0 ]xsh
/AWIJOU+DengXian-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
435.944 94.7211 mo
(o\300)sh
/AWIJOU+DengXian-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
443.984 94.7211 mo
(o\343p\002p\006o\370)
[8.84308 9.17944 6.50421 0 ]xsh
392.494 91.9711 mo
404.474 89.1711 li
404.244 88.1911 li
392.274 91.0011 li
cp
404.074 91.8311 mo
409.224 87.5411 li
402.704 85.9911 li
cp
f
3 lw
68.3842 59.2611 mo
68.3842 50.0611 75.8442 42.6011 85.0442 42.6011 cv
276.304 42.6011 li
285.504 42.6011 292.964 50.0611 292.964 59.2611 cv
292.964 270.921 li
292.964 280.121 285.504 287.581 276.304 287.581 cv
85.0442 287.581 li
75.8442 287.581 68.3842 280.121 68.3842 270.921 cv
cp
.169192 1 1 .136477 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/AWIJOU+DengXian-Identity-H findfont [18 0 0 -18 0 0 ]msf
211.024 284.701 mo
(o\331o\343o\332o\324)
[8.58609 9.93604 12.186 0 ]xsh
308.444 49.2011 mo
308.444 45.5611 311.404 42.6011 315.044 42.6011 cv
390.814 42.6011 li
394.464 42.6011 397.414 45.5611 397.414 49.2011 cv
397.414 281.281 li
397.414 284.921 394.464 287.881 390.814 287.881 cv
315.044 287.881 li
311.404 287.881 308.444 284.921 308.444 281.281 cv
cp
.169192 1 1 .136477 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: AWIJOU+DengXian-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/AWIJOU+DengXian 1 GetGlyphDirectory
28648 <001C60D8A8C9B64EDFFBE0529FE7BF73E7E4EE06B059C6F43BFB8CEDA
2D6CFA48E52FCC5206BA141F46320F79F8572BF0C11B6917E6E3CF5165E69B4F
B8EA861A538C262D5BEDB8BF3F05B9CF822550090B2410DBE96E5> |
!
end
end end
%ADOEndSubsetFont
/AWIJOU+DengXian-Identity-H findfont [18 0 0 -18 0 0 ]msf
348.864 285.021 mo
(o\326o\343o\350)
[11.1599 9.93604 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/AWIJOU+DengXian-Identity-H uf
/AWIJOU+DengXian /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
